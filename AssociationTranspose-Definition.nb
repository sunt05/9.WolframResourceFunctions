Notebook[{

Cell[CellGroupData[{
Cell["AssociationTranspose", "Title",
 Deletable->False,
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"Name", "TabNext", "TemplateCell", "Title"},
 CellID->863144461,ExpressionUUID->"bb44c685-03c4-48ad-8b83-2ca3c5acec83"],

Cell["Transpose the levels of an Association with nested levels", "Text",
 Deletable->False,
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"Description", "TabNext", "TemplateCell"},
 CellID->997449289,ExpressionUUID->"0160309f-15fd-4649-8495-a2b62525b019"],

Cell[CellGroupData[{

Cell[TextData[{
 "Definition",
 Cell[BoxData[
  TemplateBox[{"Definition", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Define your function using the name you gave in the Title line above. \
You can add input cells and extra code to define additional input cases or \
prerequisites. All definitions, including dependencies, will be included in \
the generated resource function.\n\nThis section should be evaluated before \
creating the Examples section below.", "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "32754bf7-4592-44bc-badd-ab2b01ea5298"]
}], "Section",
 Editable->False,
 Deletable->False,
 DefaultNewCellStyle->"Input",
 CellTags->{"Definition", "Function", "TemplateCellGroup"},
 CellID->271561301,ExpressionUUID->"c73105db-4b8e-4245-bf03-ba6e8813f7fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"generic", " ", "form"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", "AssociationTranspose", "]"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AssociationTranspose", "::", "permspec"}], "=", 
     "\"\<Invalid permutation specification found at position `2` in \
`1`.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AssociationTranspose", "::", "perm2"}], "=", 
     "\"\<Entry `1` in `2` is out of bounds for a permutation of length \
`3`.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AssociationTranspose", "::", "tperm"}], "=", 
     "\"\<Permutation `1` is longer than the dimensions `2` of the \
expression.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"AssociationTranspose", "[", 
       RowBox[{"asc_Association", ",", 
        RowBox[{"Except", "[", 
         RowBox[{"_TwoWayRule", ",", "lvl_"}], "]"}]}], "]"}], "/;", "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"PermutationListQ", "[", "lvl", "]"}], ",", "\n", 
        RowBox[{"Which", "[", "\n", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Depth", "[", "asc", "]"}], "-", "1"}], ">=", 
           RowBox[{"Length", "[", "lvl", "]"}]}], ",", "True", ",", "\n", 
          RowBox[{"(*", 
           RowBox[{"error", ":", " ", 
            RowBox[{"out", " ", "of", " ", "bound"}]}], "*)"}], "\n", 
          RowBox[{
           RowBox[{
            RowBox[{"Depth", "[", "asc", "]"}], "-", "1"}], "<", 
           RowBox[{"Length", "[", "lvl", "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
            "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}],
             "[", 
            RowBox[{
             RowBox[{"AssociationTranspose", "::", "perm2"}], ",", 
             RowBox[{"FirstCase", "[", 
              RowBox[{"lvl", ",", 
               RowBox[{"x_", "/;", 
                RowBox[{"x", ">", 
                 RowBox[{
                  RowBox[{"Depth", "[", "asc", "]"}], "-", "1"}]}]}]}], "]"}],
              ",", "lvl", ",", 
             RowBox[{
              RowBox[{"Depth", "[", "asc", "]"}], "-", "1"}]}], "]"}], ";", 
           "False"}]}], "\n", "]"}], ",", "\n", 
        RowBox[{
         RowBox[{
         "ResourceFunction", "[", "\"\<ResourceFunctionMessage\>\"", "]"}], 
         "[", 
         RowBox[{
          RowBox[{"AssociationTranspose", "::", "permspec"}], ",", 
          RowBox[{"HoldForm", "@", 
           RowBox[{"AssociationTranspose", "[", 
            RowBox[{"asc", ",", "lvl"}], "]"}]}], ",", "2"}], "]"}]}], "\n", 
       "]"}]}], ":=", "\n", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ascFlat", "=", 
          RowBox[{
           RowBox[{
           "ResourceFunction", "[", "\"\<AssociationKeyFlatten\>\"", "]"}], 
           "[", "asc", "]"}]}], ",", "keys", ",", "values", ",", "ascTr"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"keys", "=", 
         RowBox[{"Keys", "[", "ascFlat", "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"values", "=", 
         RowBox[{"Values", "[", "ascFlat", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ascTr", "=", 
         RowBox[{
          RowBox[{
          "ResourceFunction", "[", "\"\<AssociationKeyDeflatten\>\"", "]"}], 
          "@", 
          RowBox[{"AssociationThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Permute", "[", 
               RowBox[{"#", ",", "lvl"}], "]"}], "&"}], "/@", "keys"}], ",", 
            "values"}], "]"}]}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"special", " ", "forms"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AssociationTranspose", "[", "asc_Association", "]"}], ":=", 
     RowBox[{"Transpose", "[", "asc", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AssociationTranspose", "[", 
      RowBox[{"asc_Association", ",", 
       RowBox[{"TwoWayRule", "[", 
        RowBox[{"m_", ",", "n_"}], "]"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"nLevel", "=", 
          RowBox[{
           RowBox[{"Depth", "[", "asc", "]"}], "-", "1"}]}], ",", "lvlTr"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lvlTr", "=", 
         RowBox[{"Permute", "[", 
          RowBox[{
           RowBox[{"Range", "[", "nLevel", "]"}], ",", 
           RowBox[{"Cycles", "[", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"m", ",", "n"}], "}"}], "}"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AssociationTranspose", "[", 
         RowBox[{"asc", ",", "lvlTr"}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}]}]}]], "Code",
 TaggingRules->{},
 CellLabel->"In[366]:=",
 CellID->304931571,ExpressionUUID->"2ea2458a-6e15-4331-b701-05f1ef185c62"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Documentation", "Section",
 CellTags->"Documentation",
 CellID->363488142,ExpressionUUID->"9be1c1b0-9cbd-4e9c-9f1b-a13a45feb603"],

Cell[CellGroupData[{

Cell[TextData[{
 "Usage",
 Cell[BoxData[
  TemplateBox[{"Usage", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "Document input usage cases by first typing an input structure, then \
pressing ", 
          Cell[
           BoxData[
            StyleBox[
             DynamicBox[
              ToBoxes[
               
               If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
              Evaluator -> "System"], ShowStringCharacters -> False]]], 
          " to add a brief explanation of the function\[CloseCurlyQuote]s \
behavior for that structure. Pressing ", 
          Cell[
           BoxData[
            StyleBox[
             DynamicBox[
              ToBoxes[
               
               If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
              Evaluator -> "System"], ShowStringCharacters -> False]]], 
          " repeatedly will create new cases as needed. Every input usage \
case defined above should be demonstrated explicitly here.\n\nSee existing \
documentation pages for examples."}], "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoUsage"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "c74cb2d1-5cd5-4554-b31b-27acf0b0a474"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 DefaultNewCellStyle->{"UsageInputs", FontFamily -> "Source Sans Pro"},
 CellTags->{"TemplateCellGroup", "Usage"},
 CellLabel->"In[15]:=",
 CellID->657272351,ExpressionUUID->"59604a54-91ea-4353-b0c4-2c7c06c7d7af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationTranspose", "[", 
  StyleBox["assoc", "TI"], "]"}]], "UsageInputs",
 TaggingRules->{},
 CellChangeTimes->{{3.815235135851885*^9, 3.815235137223872*^9}},
 FontFamily->"Source Sans Pro",
 CellTags->"TabNext",
 CellID->341013815,ExpressionUUID->"8f7e2dfb-18ce-4435-98f0-dfb424d02ade"],

Cell[TextData[{
 "transposes the first two levels in ",
 Cell[BoxData[
  StyleBox["assoc", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b71f5b83-83c2-4425-a6e8-9ad0143a60c5"],
 "."
}], "UsageDescription",
 CellChangeTimes->{{3.815235140283805*^9, 3.815235142129081*^9}},
 CellTags->"TabNext",
 CellID->584004037,ExpressionUUID->"a86066a2-7c9a-4999-aaab-5f6d93550989"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationTranspose", "[", 
  RowBox[{
   StyleBox["assoc", "TI"], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox[
      StyleBox["n", "TI"], 
      StyleBox["1", "TR"]], ",", 
     SubscriptBox[
      StyleBox["n", "TI"], 
      StyleBox["2", "TR"]], ",", "\[Ellipsis]"}], "}"}]}], 
  "]"}]], "UsageInputs",
 TaggingRules->{},
 CellChangeTimes->{{3.81523514543635*^9, 3.815235145638577*^9}},
 FontFamily->"Source Sans Pro",
 CellTags->"TabNext",
 CellID->1734598207,ExpressionUUID->"2b7ad183-e652-4c78-8aaf-8a7cd8e107ed"],

Cell[TextData[{
 "transposes ",
 Cell[BoxData[
  StyleBox["assoc", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "7567e2fc-d4b6-45bd-bbb7-e7db2f55663f"],
 " so that the ",
 Cell[BoxData[
  StyleBox["k", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "6250a9c2-670d-4d08-aa6f-deb18f88fa8c"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Null]", "th"], TraditionalForm]],ExpressionUUID->
  "e42cbefc-2eb3-4ed1-a055-fa93916d2d78"],
 " level in ",
 Cell[BoxData[
  StyleBox["assoc", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "7de0834e-dba2-4980-8da4-b3def72ddb4d"],
 " is the ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["n", "TI"], 
   StyleBox["k", "TI"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "7bec78b0-1a7e-4707-ab5f-c76df3aa4f9c"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Null]", "th"], TraditionalForm]],ExpressionUUID->
  "2d98b072-e530-4e19-af30-57759739c7bc"],
 " level in the result. "
}], "UsageDescription",
 CellChangeTimes->{{3.8152351494883337`*^9, 3.815235151512246*^9}, {
  3.8158387896934223`*^9, 3.815838790480975*^9}},
 CellTags->"TabNext",
 CellID->1301557024,ExpressionUUID->"84c3f574-acb9-4ce1-ab58-c4c466bb2ffa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationTranspose", "[", 
  RowBox[{
   StyleBox["assoc", "TI"], ",", 
   RowBox[{
    StyleBox["m", "TI"], "\[TwoWayRule]", 
    StyleBox["n", "TI"]}]}], "]"}]], "UsageInputs",
 TaggingRules->{},
 CellChangeTimes->{{3.8158388030110083`*^9, 3.815838804408592*^9}},
 FontFamily->"Source Sans Pro",
 CellTags->"TabNext",
 CellID->1000474026,ExpressionUUID->"94c6a935-a2cb-48d4-a0fa-0dcae68f9b60"],

Cell[TextData[{
 "transposes levels ",
 Cell[BoxData[
  StyleBox["m", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "54b13577-c73a-4040-ab37-fd71ebd310f6"],
 " and ",
 Cell[BoxData[
  StyleBox["n", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "d04ab0fe-e037-401e-928e-7624d99bb4ce"],
 " in ",
 Cell[BoxData[
  StyleBox["assoc", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "98f03a23-cca9-45a6-9f2c-d4a8e3114b34"],
 ", leaving all other levels unchanged."
}], "UsageDescription",
 CellChangeTimes->{
  3.815235163458902*^9, {3.81583880031256*^9, 3.815838807627112*^9}},
 CellTags->"TabNext",
 CellID->169998972,ExpressionUUID->"d4ca0201-1b99-4b46-93cc-e8e59701f09e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details & Options",
 Cell[BoxData[
  TemplateBox[{"Details & Options", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Give a detailed explanation of how the function is used and \
configured (e.g. acceptable input types, result formats, options \
specifications, background information). This section may include multiple \
cells, bullet lists, tables, hyperlinks and additional styles/structures as \
needed.\n\nAdd any other information that may be relevant, such as when the \
function was first discovered or how and why it is used within a given field. \
Include all relevant background or contextual information related to the \
function, its development, and its usage.", "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDetailsOptions"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "740a50ca-9318-43e8-964c-f217c5ca82e3"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details & Options", "Notes", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->25317349,ExpressionUUID->"d84fcadd-1693-45a3-9c99-1b0af5e19ba8"],

Cell["\<\
It would be helpful to describe equivalencies between the usages here. For \
example
AssociationTranspose[assoc] is equivalent to AssociationTranspose[assoc,{2,1}].

It would also help to describe requirements for the shape of assoc (can it be \
ragged?). See the notes in the Transpose documentation for an example.\
\>", "ReviewerComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "Signature" -> 
   "OEM6eJxLYywWcMlMzyxJzAnOTM9LLCktSnVk0w1mCaksSA3mdc3JySwoyUx2Li0qS9UN5gTTfo\
m5qcGcxanJBUamZtmGusG8cK1gXQJ++XkuqSWpRbmZeZnFQN1AFR6JxRmZeem+qSUZ+\
SnBbMEejkC9usGMQU4K+kkcDQUh3jy/jW807dry+qxHeMa6+\
JiUOYdt56o8f3bPD6gq2EmBZ4pOX8KP/xFxbnWGsjFf2lTXvnuQs+aPr5NJYY7Dp2nbACpHTY8="},
 
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
         TemplateBox[{"\"bobs@wolfram.com\""}, 
          "ReviewerCommentLabelTemplate"], ShowStringCharacters -> False, 
         StripOnInput -> False], 3.815839235092435`16.334165058341124*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.815839235887664*^9, 3.815839284509878*^9}, {
  3.815839342335252*^9, 3.81583938211479*^9}},
 CellTags->{"CommentCell", "ReviewerComment"},
 CellID->783030442,ExpressionUUID->"43b62d63-d9a3-4218-ab00-15201c9bc8ff"],

Cell["Thanks for the review. More details have been added below.", \
"AuthorComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "Signature" -> 
   "OEM6eJxLYywWcMlMzyxJzAnOTM9LLCktSnVk0w1mCaksSA3mdc3JySwoyUx2Li0qS9UN5gTTfo\
m5qcGcxanJBUamZtmGusG8cK1gXQJ++XkuqSWpRbmZeZnFQN1AFR6JxRmZeem+qSUZ+\
SnBbMEejkC9usGMQU4K7n71p38EKEfHPPc5ucM0c4N8tmzRjp9PFkRNSXzucEc2EKgq2EnBunafXtP\
URxdsIiyeBEZPWLq9WryMMfJLx38jlYsf3tv1AgBG9k3W"},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
        "\"sunting.05@gmail.com\"", ShowStringCharacters -> False, 
         StripOnInput -> False], 3.816173712662781`16.334203124776337*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellTags->{"AuthorComment", "CommentCell"},
 CellID->1564588806,ExpressionUUID->"a5e4dc90-73fe-47d7-be05-7dbffa3d830f"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   TagBox[
    ButtonBox[
     StyleBox[
      StyleBox[
       StyleBox[
        StyleBox["ResourceFunction", "SymbolsRefLink",
         ShowStringCharacters->True,
         FontFamily->"Source Sans Pro"], "SymbolsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"], "SymbolsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"], "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
        "Link"}]],
     ButtonData->"paclet:ref/ResourceFunction",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]], "[", "\"\<AssociationTranspose\>\"", 
   "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "e5dc73fe-4271-43ef-97fc-03039203bc4a"],
 " mimics the way  ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Transpose", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Transpose",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "e2036a81-24d9-45c9-b969-8ac591541328"],
 " rearranges an array to re-organise the levels in an  ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Association", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Association",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "1bda9cac-48b0-4590-b9f7-46ccc6f64213"],
 " . "
}], "Notes",
 TaggingRules->{},
 CellID->5726,ExpressionUUID->"4e348677-59bc-4d71-a2e8-7f89855e0696"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<AssociationTranspose\>\"", "]"}], 
   "[", 
   StyleBox["assoc", "TI"], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "858fea5c-9a5e-4eee-8755-40fb3445f395"],
 " is equivalent to ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<AssociationTranspose\>\"", "]"}], 
   "[", 
   RowBox[{
    StyleBox["assoc", "TI"], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}]}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "7b6ffa8d-36ad-4b44-bcff-957b10554769"],
 "."
}], "Notes",
 TaggingRules->{},
 CellID->26269,ExpressionUUID->"11ae8906-af17-4177-a9da-f6cfeca0d099"],

Cell[TextData[{
 "For an ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Association", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Association",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "7110bc76-9065-4a6b-af9d-eba3f1e82dca"],
 " of depth ",
 Cell[BoxData[
  RowBox[{
   StyleBox["r", "TI"], "\[GreaterEqual]", "3"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "4911c65f-41dc-493c-b9bf-a411a5ca0e06"],
 ", ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox[
       StyleBox[
        StyleBox[
         StyleBox[
          StyleBox[
           StyleBox[
            StyleBox[
             StyleBox["ResourceFunction", "SymbolsRefLink",
              ShowStringCharacters->True,
              FontFamily->"Source Sans Pro"], "SymbolsRefLink",
             ShowStringCharacters->True,
             FontFamily->"Source Sans Pro"], "SymbolsRefLink",
            ShowStringCharacters->True,
            FontFamily->"Source Sans Pro"], "SymbolsRefLink",
           ShowStringCharacters->True,
           FontFamily->"Source Sans Pro"], "SymbolsRefLink",
          ShowStringCharacters->True,
          FontFamily->"Source Sans Pro"], "SymbolsRefLink",
         ShowStringCharacters->True,
         FontFamily->"Source Sans Pro"], "SymbolsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"], "SymbolsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
         "Link"}]],
      ButtonData->"paclet:ref/ResourceFunction",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], "[", "\"\<AssociationTranspose\>\"", 
    "]"}], "[", 
   StyleBox["assoc", "TI"], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "fda4cf02-4299-4ac2-90a2-44dfb088a91e"],
 " is equivalent to ",
 Cell[BoxData[
  RowBox[{
   TagBox[
    ButtonBox[
     StyleBox[
      StyleBox[
       StyleBox[
        StyleBox[
         StyleBox[
          StyleBox[
           StyleBox[
            StyleBox["ResourceFunction", "SymbolsRefLink",
             ShowStringCharacters->True,
             FontFamily->"Source Sans Pro"], "SymbolsRefLink",
            ShowStringCharacters->True,
            FontFamily->"Source Sans Pro"], "SymbolsRefLink",
           ShowStringCharacters->True,
           FontFamily->"Source Sans Pro"], "SymbolsRefLink",
          ShowStringCharacters->True,
          FontFamily->"Source Sans Pro"], "SymbolsRefLink",
         ShowStringCharacters->True,
         FontFamily->"Source Sans Pro"], "SymbolsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"], "SymbolsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"], "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
        "Link"}]],
     ButtonData->"paclet:ref/ResourceFunction",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]], "[", "\"\<AssociationTranspose\>\"", 
   "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "0c6c501a-6a37-45af-a647-ffbc4184861a"],
 "[assoc, {2,1,3,\[Ellipsis],r}]."
}], "Notes",
 TaggingRules->{},
 CellID->2030856185,ExpressionUUID->"ab7d9df0-bf70-4e89-b9e5-5c400d19c408"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["n", "TI"], 
   StyleBox["i", "TI"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f9cff135-8f49-4150-868b-f59056b97039"],
 " in ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox[
       StyleBox[
        StyleBox[
         StyleBox[
          StyleBox[
           StyleBox[
            StyleBox[
             StyleBox["ResourceFunction", "SymbolsRefLink",
              ShowStringCharacters->True,
              FontFamily->"Source Sans Pro"], "SymbolsRefLink",
             ShowStringCharacters->True,
             FontFamily->"Source Sans Pro"], "SymbolsRefLink",
            ShowStringCharacters->True,
            FontFamily->"Source Sans Pro"], "SymbolsRefLink",
           ShowStringCharacters->True,
           FontFamily->"Source Sans Pro"], "SymbolsRefLink",
          ShowStringCharacters->True,
          FontFamily->"Source Sans Pro"], "SymbolsRefLink",
         ShowStringCharacters->True,
         FontFamily->"Source Sans Pro"], "SymbolsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"], "SymbolsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
         "Link"}]],
      ButtonData->"paclet:ref/ResourceFunction",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], "[", "\"\<AssociationTranspose\>\"", 
    "]"}], "[", 
   RowBox[{
    StyleBox["a", "TI"], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox[
       StyleBox["n", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["n", "TI"], 
       StyleBox["2", "TR"]], ",", 
      StyleBox["\[Ellipsis]", "TR"]}], "}"}]}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "03f14cb6-8295-4955-9479-96ae33e21079"],
 " or ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox[
       StyleBox[
        StyleBox[
         StyleBox[
          StyleBox[
           StyleBox[
            StyleBox[
             StyleBox["ResourceFunction", "SymbolsRefLink",
              ShowStringCharacters->True,
              FontFamily->"Source Sans Pro"], "SymbolsRefLink",
             ShowStringCharacters->True,
             FontFamily->"Source Sans Pro"], "SymbolsRefLink",
            ShowStringCharacters->True,
            FontFamily->"Source Sans Pro"], "SymbolsRefLink",
           ShowStringCharacters->True,
           FontFamily->"Source Sans Pro"], "SymbolsRefLink",
          ShowStringCharacters->True,
          FontFamily->"Source Sans Pro"], "SymbolsRefLink",
         ShowStringCharacters->True,
         FontFamily->"Source Sans Pro"], "SymbolsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"], "SymbolsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
         "Link"}]],
      ButtonData->"paclet:ref/ResourceFunction",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], "[", "\"\<AssociationTranspose\>\"", 
    "]"}], "[", 
   RowBox[{
    StyleBox["a", "TI"], ",", 
    RowBox[{
     SubscriptBox[
      StyleBox["n", "TI"], 
      StyleBox["1", "TR"]], "\[TwoWayRule]", 
     SubscriptBox[
      StyleBox["n", "TI"], 
      StyleBox["2", "TR"]]}]}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "17e601e1-7161-4f05-a412-73cfca911cc9"],
 " must be positive integers no larger than ",
 Cell[BoxData[
  RowBox[{
   TagBox[
    ButtonBox[
     StyleBox["ArrayDepth", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
        "Link"}]],
     ButtonData->"paclet:ref/ArrayDepth",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]], "[", 
   StyleBox["a", "TI"], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "abad7ba8-5c0f-4739-b51e-6b527cc9a1e7"],
 "."
}], "Notes",
 CellID->1648692582,ExpressionUUID->"e9c8b559-2b0e-42f3-ae3b-07424c08b85d"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    SubscriptBox[
     StyleBox["n", "TI"], 
     StyleBox["1", "TR"]], ",", 
    SubscriptBox[
     StyleBox["n", "TI"], 
     StyleBox["2", "TR"]], ",", 
    StyleBox["\[Ellipsis]", "TR"]}], "}"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "6e727f5f-c7da-4250-9337-e59eedd6e844"],
 "  has to be a complete permutation list."
}], "Notes",
 CellID->369923474,ExpressionUUID->"7d81aee7-bdb4-4206-b696-700608f6c7df"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  TemplateBox[{"Examples", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "Demonstrate the function\[CloseCurlyQuote]s usage, starting with \
the most basic use case and describing each example in a preceding text cell.\
\n\nWithin a group, individual examples can be delimited by inserting page \
breaks between them (either using ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"[Right-click]\"", FontFamily -> "Source Sans Pro", 
                FontWeight -> "SemiBold", FontColor -> GrayLevel[0.2863], 
                FontSize -> 14, StripOnInput -> False], 
               StyleBox[
               "\" \[FilledRightTriangle] \"", FontFamily -> 
                "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                GrayLevel[0.5], StripOnInput -> False], 
               StyleBox[
               "\"Insert Page Break\"", FontFamily -> "Source Sans Pro", 
                FontWeight -> "SemiBold", FontColor -> GrayLevel[0.2863], 
                FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
             ShowStringCharacters -> False]]], 
          " between cells or through the menu using ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"Insert\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                "SemiBold", FontColor -> GrayLevel[0.2863], FontSize -> 14, 
                StripOnInput -> False], 
               StyleBox[
               "\" \[FilledRightTriangle] \"", FontFamily -> 
                "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                GrayLevel[0.5], StripOnInput -> False], 
               StyleBox[
               "\"Page Break\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                "SemiBold", FontColor -> GrayLevel[0.2863], FontSize -> 14, 
                StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
             False]]], 
          ").\n\nExamples should be grouped into Subsection and Subsubsection \
cells similarly to existing documentation pages. Here are some typical \
Subsection names and the types of examples they normally contain:\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Basic Examples: \"", FontFamily -> "Source Sans Pro", 
                FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                False]}, "RowDefault"], ShowStringCharacters -> False]]], 
          "most basic function usage\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Scope: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
              "RowDefault"], ShowStringCharacters -> False]]], 
          "input and display conventions, standard computational attributes \
(e.g. threading over lists)\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Options: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
              "RowDefault"], ShowStringCharacters -> False]]], 
          "available options and parameters for the function\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Applications: \"", FontFamily -> "Source Sans Pro", 
                FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                False]}, "RowDefault"], ShowStringCharacters -> False]]], 
          "standard industry or academic applications\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Properties and Relations: \"", FontFamily -> 
                "Source Sans Pro", FontWeight -> "SemiBold", FontSize -> 14, 
                StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
             False]]], "how the function relates to other functions\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Possible Issues: \"", FontFamily -> "Source Sans Pro", 
                FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                False]}, "RowDefault"], ShowStringCharacters -> False]]], 
          "limitations or unexpected behavior a user might experience\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Neat Examples: \"", FontFamily -> "Source Sans Pro", 
                FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                False]}, "RowDefault"], ShowStringCharacters -> False]]], 
          "particularly interesting, unconventional, or otherwise unique \
usage"}], "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
       FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", 
     Deletable -> True, CellTags -> {"SectionMoreInfoExamples"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "57245c9f-a8ab-4f30-890a-a43a5fcb5ec9"]
}], "Section",
 Editable->False,
 Deletable->False,
 CellTags->{"Examples", "TemplateCellGroup"},
 CellID->487306095,ExpressionUUID->"163e54f0-1d0b-480d-bdb0-ff7a8c82defb"],

Cell[TextData[{
 "Please improve the error handling for bad permutation specs:\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnQecFdXZh+0av5hojLFHjcYWS6wxdk1i19hL1FgSNVGjiT12I7Gg0nuT
KiC9C4KAdJAiVcqyyy697S5tC7u83z5nPZfZ2blti4D5P7/fwN47p8+Zc/7n
Pe/MPe7hp299dI/ddtvt2f3K/rn1oReveOaZh/5924FlH+546tm/P/bUI3+9
9qnnHnnskWcueHjPsi9vKws7qezYq+xvE0IIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCiO8p27ZtsxWrVtn8RRk2+5v5OnTU6vFNWT9bu369lZaW7uiuL4QQ
QggRCTpl3oKFTrvkb9piWwqLraBoqw4dtXLQv+hnizKzbG5Zv2N9JoQQQgix
s7Fi1WrLXrpsh2snHf97B+uy1evW7+hbQAghhBCiEvhXYNfb0XpJx//eQb/D
70K2ZCGEEELsbGDLk3+Fjh1x0O/ofyUl8ksWQgghxM4FGmVHa6XaOho1bmJ1
/vvOTp/m//JB/9sqjSyEEEKInYywRt6cn2ebcjJs8+rllfTM5jUry8/l5Ubq
nY6du9g1115rH7fvsMO1F8c555xjv/jFLyxvw6aU4wwZOswdNZlm1PHOu++5
tgof/3m7zg5vt+/yoP8Vby2J9cfp06fbmDFj3FFQULAD74zU4bnXr7/+usJ3
I0eOtOuvv96OPvpoO++886xbt27VzmfIkCF2zTXXuDRPP/10q1OnTgU/lY0b
N9qCBQvixl+zZk2sbRcuXFjt8gghhBDfZ8Iaef1nnSzz+h/Z6tavVNIzazq8
bZk3HmTr+rWI1Ds33HCj049Xl83jUecT+XRU9Vyi8zlLl1tG5pK04tx99z32
98efiJtXVdKMOt9/wCB7v+4H9tRTT9sRRxxh//jHU+5z7z59I+NuLiiqsXap
qm9NbfjkhDXymWeeabvttps7dgUdN3z4cPvxj39se+65Z+y7zMxM22effezi
iy+2l156yX75y1/a7rvvbpMnT65yPhs2bLCjjjrKLrroInv99dftN7/5jWuj
li1bxsLMmDHDfXfYYYdZTk5OpTS6du0aa9uHH364ymURQgghapqV6zdY60ET
I89hD3qzw1Br1m9c7LuNWwqt//g5sc9LVq23fuNm29I1ee5zw15fWp3On1er
TFEaOfuBU+JrxMfOidTIWdlLndbDPsr/GYuzYucGDhpif7z5Zjv22GPt3PPO
szfefMs2ldUt2bmRo7+0K3/3O2c3u+KKK2zEyFEVtCpa9uSTT7Hjjz/e7rv/
fvd+jhWr1ti5554bO6697roK5WzYqLFLi/xu+uMfbcDAwe77fgMG2oUXXmjH
HHOMS8/HHzt+QtI045WTMhKePC+99DI75ZRTXPsE444ZO9611xejRlf4/qN6
9e2xx/5m3bp/Wqa1LrEjjzzSBg0ekrAOyfKL19Y5y1a4eM8997ydfsYZdtJJ
Jzm9HmvrsvMPPfwXt/7Bfsk5r5eXrVhlD//lr/arX/2qLN7J9ucHHrBvFiwq
70t5G1yafH/iiSfaU0//0/I2bEyqkd99991Kz/GhRW+44Qb72c9+5sr/6quv
2vr129+J0bdvX2e3PeCAA1w5n3jiCVu5cmXs/JQpU+z3v/+9/ehHP7LDDz/c
HnnkEcvLy6vWvQPXXnut3XHHHc6GG2TSpEmx9z9jt0WXvvfee9XKa8WKFbF2
mTNnjkvzmWeeqRCGNuFavPLKK5FpEP/222+XRhZCCLFTMT9ntd1Tp1PkuZKy
+fTGV9o6He15pe1gu/M/Hd3f0xYutTve6mDN+4+z619uYwuWrrEV6/Ld39Uh
kUbOHdPf1nT6rzvwsUikkVu1bmMnnHCCrVmXa8cdd5w1bb49DDr2tttutylT
p1nPXn2c/kt2Dr2LrsL/oMsn3cr0zw0u/cwlOe78TTfd5M6j19CI//zXM06T
5W/cbH37D3DH7XfcaWeffXaFcv775VesRctWNvizoXbrrbc5rYjeQ9MT58wz
f20333JLLI2ly1cmTDNROTnQv4Tv0LGT3f/nP7vP6MpkGvm1199wWv20006z
Dz+qZ527dHUaOFEdkuUXr619vN///g/Ojn3PPX9ynwnH+Xvvvc/Fbdmqtb34
0r/dufYdOrpz+IYcW3a9R3851r4cM86VbdWate7cCy++5M5R9u49err61G/Q
MKlGjtKSfyxbC1Cvl19+2W688UanD+vVq+fOLV++3Pbbbz+n3xs3buxst6x1
Fi1a5M7PmzfP9t9/f2fbRc+in9HJWVlZ1bp3EpU3yNChQ115O3WKvvfTYdmy
ZTZo0CCnzffaay+bOLHymps6JtLAyc4LIYQQ3zVBjXz/u5/YM836Od07YMIc
p5Fvef3jWNhBE+faU0362F1vl2vk9kMn24efjnR/v9hqYMy+fNOrbd3/XYZP
LftudtplSqSRV9b9i2VevZ878qaMSKiR0Wq/+93v7fPhX9hll13mNKw/99dH
HnE21gcffMj5LK9dn5f0XPdPezgt5m2y6C8+o7cWZ2W7v1959bWE+/jYMMMa
Gc3Lc3fke8EFF7h0ZsycHTt/0cUX2+NPPJlymonK6bUnepVz6Eg+Dx02PCWN
jO141OgxlcoQrw7J8ovX1j5ex06d3eep02e4z63btLXc/I1uj//Z555z59Di
Z5xxpv3pT/e6zz169nbn//CHq5yW9zZkDmzS55//G3v1tdfd8etf/9ruve/+
Kmlk7LTYZWfPnm09evRwmhe/A8jOzna+DMRFjxYVFVWI+7e//c1pVHwNPOEw
VYU1TCKNTD5nnXWW0+T4S1SXN954I+Yv8fTTT0f+ViEa+IEHHoibhjSyEEKI
nY2gRr7oqcY2Y9Ey5z9xzUutKmjk7FW5dt+7XWzJyvUxjczflzzdxK55sZVd
8UyzmL3Za+SMZWtdvFYDJ9jf6veocKBr4lETGhk7JToJv0v297Gjou+Cv02C
dn76n/9y++5oBvbvE51DY6LTxowb78JMmvyV+8zzgOgw/sZ2nY5GXpeb73wK
rrvuemfzxdZNOqTtw1xyyaX2l78+knKaicoZ1p6Tv5rmPmP/TUUj057h/BPV
IZX8oto6HG/chImxOpAff7/8yiuxNM4773xnT/ef536zwN57v65bX9APvE81
tuff/va37pw/WFNURSP379/f9ak99tjDtYv3mfDwTBy2Y7TjgQceaE899ZRt
3rzZnWPNtvfee9f4M4APPvig0+YjRoyIPI9+veeee5yvMrbfmmDt2rXOdvzv
f//b5R32tQCe5aN94ml3aWQhhBA7G0GN/PvnWsS+/91zzSto5Ccb9bZ3ugy3
rl9Mc74U42Znus//LTtyVufaS60HWrsh5c//eI3syd24xflgBI9Ev9GQSCPn
T/3C1vVv5Y5NK3LiamT23Z0P8rfPsqGZ+NymbTunsbBBoiFXrl5r9eo3cOew
jyY6N39hhtM87PvzGfvjz3/+c5c2mh/7Ke+YGD5ipE2b/rWzKWNfTaRnvX0U
G+zcefOdv29YI99x553O/jl+4iSbNWduBb+IqDQTlbM2NHKiOiTKL1Fb+3iP
PvqYTZoy1dUBrTt77jyXDs9iYgPGn7lBw0YuLD7PnKvfoJF17dbd+YFMnzHT
xcPHgnOkR9tga8ZfvU+//pV+0zEVjYy23XfffZ3WXbVqlfsOf+ygRgb6Ob6/
t912m9PKL7zwgvsencrnjIyMuPdBcXGxvfXWW+4ZuJKSkrjhglx55ZVO//KM
XhjSwJZLvi1atKgcuQp55ubmVvjsfefDtG/f3q0JsDNHIY0shBBiZyOoka96
Yfvz6GGNjO8FvhOtB02wa19qbUOnfGOvt//M+oyd5c53GDbFPa8HXiPzfB/v
PsAf49Y3Pq5w8H08ojRy1k0/sXV9mla2YQ5oY1m3HlZJI7Pvfvnll1f4Dg2L
3sQvgme68EtFW2ELfOLJJ23j5oKE50gDH1ZskZzD7vlJ126x9NFj+M9yjuOq
q652mjZYhueff8HpaP95w6Ytdsstt7rw5Mm7JMIaGf8EbOE+XfRfojQTlTOm
WTt3qaBZg++W8xqZ5/6Cab7+xpvOzzl8DRLVIVF+idrax8M+zP9or+YtWlaw
E+NL4eOR54Zvf5sR2zB+wL696Afz5i9051hf8CylP4ePBnbsdDUyz96hNXlP
BM/u8TwaGtBr5FGjRpWlfYZ17NjRpk2bZs2aNXPhH3/8cXee5/n4TDm7d+/u
NCS2ePyUPdipvQ/D2LFjU76neb6xbt26Fb4rLCwsu0a3uLTIp379+vbRRx9Z
8+bNK4RLJ0+eOfzhD3/o/LGpD/qXePg0hUEDsy6IhzSyEEKInY0FZRr5T//t
7P6++sXtGvn3z7eo5I8M6zdusbvfLtfUc7NW2u1vtrcH3u/qDnwvwGvkej1G
2cefTXbpoDmCRyLCGhl7cd74wbbhm2mV9dn8Ge7cpmVZlc4lO9Dp6DT8W9M9
h4aLevcZBzZRjnTKsiRnaUzjRR3oxkUZmRX8plOpX6Jy1vSRrA7pXIegtl6+
cnWld0/4Azs9z0XGO8f7P6LOESdsP05HI4P3KeY4//zz7brrrotpZHQxn7E1
+zD4KvN8m6dhw4Z20EEHuXP4KGCT/uabb2Ln8WHw71Nr3bp10ns5UXnHjRsX
K0fw4B1xQdLJMz8/3/7yl7+493b49LClL126tFJYPbMnhBDi+wTa9ubX2iX8
zTH2kles2/7cz9aSEvcujOrwff6dPR2pHWEfje/ySFUjA7+BEfY3CIK/An4P
6MkouH94b3C8Z+ew5aI9/fswUoH3BT766KMph69untRhyZIlCevIb5Y8++yz
cdOQRhZCCLErUVq6zR6r18Pe7jQs5TivthvifJerAxqlNn4bQseuc/Cbgfh1
x7P11tZBvwv/FjUaGb2OP0vU72DUFvyG3SGHHGKXXnppWvHw6+A5Qn6347vK
Mx74jvCsHu+Emz9/fqXzvPODduWZRmlkIYQQIjHfLMqw/Crs2evQUd2Dfkf/
Kwlo5M6dO7v3HnPUxG98pErv3r3d+yD8uzDSYdasWdalS5fvNM8o1q1b53Rw
+PdMPOhm37bDhqW+FhdCCCH+F1m+cpX8LXTskGNRZpblLF+Z8L0rQgghhBA7
AvTJ3AULy/TKEmfXk9+Fjto86F/efky/K0ryTKkQQgghxI6C3zpYtnKV0y3Y
lHXoqM2Dfob9ONk7V4QQQgghdgawKeMbyjNU4ffH6dBREwd9iz4m/wohhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYSoGbZt22Z5
eXm2cuVKW7ZsWUoHYTdt2uTiiqpDW65fv979PXv2bCssLIwMt2DBgrjndlXW
rFljWVlZNZIWbUMb1VS69G1/XWDr1q2Wm5ubVn8vKSlxafC/Z+3atbZly5Zq
lU0IIYQQtQ9z/vLly51WQwekogEIQ1i0CHGj4mxdsdwyDtotdiw5/RjLa9Gw
NqqQkNLNm23tGy/YttLSaqWzceNGe//9962oqKiGSlZO3759bcqUKVZQUGD1
6tWz7OzsyHANGjSw1atX12jeNQXadPHixUnDUf5p06bFPo8aNcq6detWI2Wg
L9avXz/ldBOVecaMGTZw4MCYtp08ebJ9+OGH7vo0bdrUrQ+TQRrEoUwfffSR
zZ07133PfdOnT5/YZyGEEELsnGA/DtrL0gVtjc0tzNbly5w2Ll6SaVtzsi23
aT33uWDq5OoUN21K1qx2+W4rLq5WOhs2bKhVjQylCXR8bWjkmtoDGDZsmI0e
PTppuHnz5lmnTp1qpQxBjZxKuonKjIZF48LmsjUW1z0nJ8elyfXq3bt3wrTp
I+jjRYsWuc/jx4+3Zs2axc5PmjTJBg8enFK9hBBCCLFjwCaGbauqEDfKruY1
cmlAP2dfcKrlNSvXMRu6dbTs806yxUcfYKsefzCmYZeceZytfOhOW3zE/rZl
3Ghb9ci9tuqx+y3rxEMt66TDLL99K8u54lzLOHRfW3HvzbatsNDFzTrlCCvJ
Ldf6hbNmWM7l59i2khIXj3IQd/OIoU7nrH31Wcs8/qeWddrRltv4w1j5sDWP
aFjf8srKHiaokalvhw4drFevXs5G2LNnT8vPz7f58+dbly5dYnGwFXp7Jvb2
Tz75xGmntm3bus8Q1MitWrWKrVfQZO3atbMPPvjABgwY4GyYYY1MOTp27Gj9
+/d35Wjfvn0sXer5xRdfWKNGjZw+Q5f5OISjXHXr1nXftWjRwmk28iBP9CFx
0Jxjxowpv3bZ2da1a9dY3tiD0ZkTJ050eRO3e/fucetKfUiPPLHF0o7Tp0+3
oUOHujjY0WlPwrRu3dpmzZoVK29UW4cJauRgupS7TZs2Li7lYz8gqsxBghqZ
vHzb+bRpv0Tg90Ff8GRkZLg1jkcaWQghhNj5wQ4ctLktLNNGc+rUseJvdcjC
Mj3DAXzHuYUBmxhxSSNMWCPzefHhP7BNA3pb0ZxZThtvGTXcti5b6vTs+g/e
duHQvqueeMiKs7Oc9l1+29W29OoLnS16zfNPlqW5u9O6RXNmuvQ2j/zctpXp
LfIqWbvGpVHw1SSnmV2Zl2SWnyvTz2jg/LbNLfv8k6148SJn08485kArmFCu
A4s2b7YWt95kS6ZOrVSfoEamvvw9c+ZM56OKbXTcuHFOG6G90GvQo0cPZ0ME
9v+/+uorZ5dEv3ltFtTIaDb8VbEno22xc5LviBEjXH5hjezL8eWXX8bCeXsl
GhatieZGo6LR0Kk+ztSyOqIXAS07fPhwpwepC2msW7fO6VQ0Lesg/BLQmh50
Jtocf4QhQ4Y4Pe7XWlF1pZ+QHnrX2+LRiv369Yu1w6effhpba1Am6huvrcME
NXIw3c6dO7vwxWV9iXYinagyB0GH4xsehnLTBhMmTKh0Lgr8OVhH0J7k66Ht
WfcIIYQQYuclrG/T1chRaYDXyEv/cEG53ffgPW35Hdc6u29em6aWdeqRtq7O
q+5YdsPlTgsDGrnom+2+mnyf37Y8vy1jR9mSM46NnUM7b+zZNaFGDvtarHzw
DhfP543dOrf+u0nbKayRGzbc7luNJsPOCehGbK/YRdF53uaJRsOuzDn26rGv
QpRGRhtiP/a+F8SNp5HR5D4cZSMc/jOki55EF3JgK0bbEadx48YV0qGc5Atj
x461QYMGlbddmZYkPbR0PI0MYb+FeHUN+1oEtSxrgqAvNjZrtGSitg4STyNT
NuzWlC/YT+P5WlAG2sqvHzy0BVqfI/gMXiJoM9YLrFWC/hlo/ebNm9uKFStS
SkcIIYQQ3z1R+rYm0vAaedOQ/s5eXJyxMHYur3kDyz73RMv/uGXs2DSwjzuH
Ri7OzIiFdRq5U7nGchr5rOO353vtJRU0MjZpF278l3E1Mv4ZK+66oULeBVMm
Jq1jWCMH/Uux2XrdlpmZ6TQRdkPvZ4ENFfsp/gc8/4U+S6SR8S9A+3r7PrZO
7LlRGpk4wXCUEdsxmgx7KL4B/vDvJGkWWuOgkdFtgEb2fgCkG9TILVu2jMXB
NhulkRPVNZFGxs69dOnS2Dm0KO2SqK2DxNPIlGfhwoXOnk0e3m8inkZmL4B6
BvW690Om7Kn4oxOGdYoHf32un9fElAeflpr2bRdCCCFEzRH2tUiXVH0tguDj
sPioH1rhzOnOZ3h9vXcsv10Ld64qGhkyf3Gw5bVs5PTy6n89FtPIpWXaNuMn
ezj/DshtWNdyLjrdStavs9L8fBcWTe2Z3qeXbcnLrVTmVDUy7cE5dJbfr0e7
YhfmGS5skOi3RBqZMOg97Kj8jf03ka8Ffg0+HPZYyoCdlzx4zxi677PPPnO6
r6oambz5G/2OjRyfXK+R8VmgHv59J/HqynfkXfzteiWoZdHzpEd8bx/371up
jkam3viYAL4oPm6wzGHwR/76669jn/HLQNPSDlz/4sDzn1HPrNJWtKn3uSF/
b9/35Qu2Mdc/bLcWQgghxI6l1p7Z+/bdb1EaGXIbvG+Zxx5kGYfsbTmX/NqK
F5W/23bxYftZcdb2d3Itv/0a29C5nfsbLbvk7BNi55Zdd6lt7FVuq81t8pHT
186n49arnC9HrI5/vcd9v3noIGdPXvmXu50vc8bP9rEV991ipd++r7awTKe8
e97ZtnDMds3sCb77LZluwz6JXgtqKfbc0Y5oJ2ykaC4IamTieJ8HfFmbNGni
8sTvAH8Dr7li9S8rB7ZR7LaEw6cAOzZ4fYrWJF/sypQnmUbGPowmBK+R/Xuw
KSuf0fI8m+h9an05eH4wUV1pO55L5By6HTuz17KsQYiPvZW6entvqhqZdvPP
xQXTZZ1Bu+Jfgg+Ff6YxXOYgwWf2CE+dgwf18pC21+BB8G8hHNeQa+CvMQQ1
Mj7btKd/t7MQQgghdg6wbVXH3wLdFtxXTgeeoSuNeEdBVcHXuTSOPQ77ctBm
iC4uLSiILFNtwXqiOI130FHeRL8bEtSPBRF1AfKrzhooDOWJ8selrMF31yWq
ayJ/3qLQdaoJSC+qfcJl9vBu5KCmjQe6Ho0c7519tAHPPobP46f9+eefVyiH
EEIIIXYu/G+IoHXT/Q0R7MfxfkNE1D74t3o/BlFz4CuBLdzb9OPBb/lhW0+H
VatW2ciRI512FkIIIcTOTVV/i5o40sdCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghxI5j27ZtlpeXZytXrrRly5aldBB206ZN
Lq6oOrTl+vXr3d+zZ8+2wsLCyHALFiyIe25XZc2aNZaVlVUjadE2tFFNpUvf
9tcFtm7darm5uWn195KSEpcG/3vWrl1rW7ZsqVbZhBBCCFH7MOcvX77caTV0
QCoagDCERYsQNyrO1hXLLeOg3WLHktOPsbwWDWujCgkp3bzZ1r7xgm0rLa1W
Ohs3brT333/fioqKaqhk5fTt29emTJliBQUFVq9ePcvOzo4M16BBA1u9enWN
5l1ToE0XL16cNBzlnzZtWuzzqFGjrFu3bjVSBvpi/fr1U043UZlnzJhhAwcO
jGnbyZMn24cffuiuT9OmTd36MBmkQRzK9NFHH9ncuXPd99w3ffr0iX0WQggh
xM4J9uOgvSxd0NbY3MJsXb7MaePiJZm2NSfbcpvWc58Lpk6uTnHTpmTNapfv
tuLiaqWzYcOGWtXIUJpAx9eGRq6pPYBhw4bZ6NGjk4abN2+ederUqVbKENTI
qaSbqMxoWDQubC5bY3Hdc3JyXJpcr969eydMmz6CPl60aJH7PH78eGvWrFns
/KRJk2zw4MEp1UsIIYQQOwZsYti2qgpxo+xqXiOXBvRz9gWnWl6zch2zoVtH
yz7vJFt89AG26vEHYxp2yZnH2cqH7rTFR+xvW8aNtlWP3GurHrvfsk481LJO
Oszy27eynCvOtYxD97UV995s2woLXdysU46wktxyrV84a4blXH6ObSspcfEo
B3E3jxjqdM7aV5+1zON/almnHW25jT+MlQ9b84iG9S2vrOxhghqZ+nbo0MF6
9erlbIQ9e/a0/Px8mz9/vnXp0iUWB1uht2dib//kk0+cdmrbtq37DEGN3KpV
q9h6BU3Wrl07++CDD2zAgAHOhhnWyJSjY8eO1r9/f1eO9u3bx9Klnl988YU1
atTI6TN0mY9DOMpVt25d912LFi2cZiMP8kQfEgfNOWbMmPJrl51tXbt2jeWN
PRidOXHiRJc3cbt37x63rtSH9MgTWyztOH36dBs6dKiLgx2d9iRM69atbdas
WbHyRrV1mKBGDqZLudu0aePiUj72A6LKHCSokcnLt51Pm/ZLBH4f9AVPRkaG
W+N4pJGFEEKInR/swEGb28IybTSnTh0r/laHLCzTMxzAd5xbGLCJEZc0woQ1
Mp8XH/4D2zSgtxXNmeW08ZZRw23rsqVOz67/4G0XDu276omHrDg7y2nf5bdd
bUuvvtDZotc8/2RZmrs7rVs0Z6ZLb/PIz21bmd4ir5K1a1waBV9NcprZlXlJ
Zvm5Mv2MBs5v29yyzz/ZihcvcjbtzGMOtIIJ5TqwaPNma3HrTbZk6tRK9Qlq
ZOrL3zNnznQ+qthGx40b57QR2gu9Bj169HA2RGD//6uvvnJ2SfSb12ZBjYxm
w18VezLaFjsn+Y4YMcLlF9bIvhxffvllLJy3V6Jh0ZpobjQqGg2d6uNMLasj
ehHQssOHD3d6kLqQxrp165xORdOyDsIvAa3pQWeizfFHGDJkiNPjfq0VVVf6
Cemhd70tHq3Yr1+/WDt8+umnsbUGZaK+8do6TFAjB9Pt3LmzC19c1pdoJ9KJ
KnMQdDi+4WEoN20wYcKESueiwJ+DdQTtSb4e2p51jxBCCCF2XsL6Nl2NHJUG
eI289A8XlNt9D97Tlt9xrbP75rVpalmnHmnr6rzqjmU3XO60MKCRi77Z7qvJ
9/lty/PbMnaULTnj2Ng5tPPGnl0TauSwr8XKB+9w8Xze2K1z67+btJ3CGrlh
w+2+1Wgy7JyAbsT2il0Unedtnmg07MqcY68e+ypEaWS0IfZj73tB3HgaGU3u
w1E2wuE/Q7roSXQhB7ZitB1xGjduXCEdykm+MHbsWBs0aFB525VpSdJDS8fT
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
ly5dYnGwFXp7Jvb2Tz75xGmntm3bus8Q1MitWrWKrVfQZO3atbMPPvjABgwY
4GyYYY1MOTp27Gj9+/d35Wjfvn0sXer5xRdfWKNGjZw+Q5f5OISjXHXr1nXf
tWjRwmk28iBP9CFx0Jxjxowpv3bZ2da1a9dY3tiD0ZkTJ050eRO3e/fucetK
fUiPPLHF0o7Tp0+3oUOHujjY0WlPwrRu3dpmzZoVK29UW4cJauRgupS7TZs2
Li7lYz8gqsxBghqZvHzb+bRpv0Tg90Ff8GRkZLg1jkcaWQghhNj5wQ4ctLkt
LNNGc+rUseJvdcjCMj3DAXzHuYUBmxhxSSNMWCPzefHhP7BNA3pb0ZxZThtv
GTXcti5b6vTs+g/eduHQvqueeMiKs7Oc9l1+29W29OoLnS16zfNPlqW5u9O6
RXNmuvQ2j/zctpXpLfIqWbvGpVHw1SSnmV2Zl2SWnyvTz2jg/LbNLfv8k614
8SJn08485kArmFCuA4s2b7YWt95kS6ZOrVSfoEamvvw9c+ZM56OKbXTcuHFO
G6G90GvQo0cPZ0ME9v+/+uorZ5dEv3ltFtTIaDb8VbEno22xc5LviBEjXH5h
jezL8eWXX8bCeXslGhatieZGo6LR0Kk+ztSyOqIXAS07fPhwpwepC2msW7fO
6VQ0Lesg/BLQmh50Jtocf4QhQ4Y4Pe7XWlF1pZ+QHnrX2+LRiv369Yu1w6ef
fhpba1Am6huvrcMENXIw3c6dO7vwxWV9iXYinagyB0GH4xsehnLTBhMmTKh0
Lgr8OVhH0J7k66HtWfcIIYQQYuclrG/T1chRaYDXyEv/cEG53ffgPW35Hdc6
u29em6aWdeqRtq7Oq+5YdsPlTgsDGrnom+2+mnyf37Y8vy1jR9mSM46NnUM7
b+zZNaFGDvtarHzwDhfP543dOrf+u0nbKayRGzbc7luNJsPOCehGbK/YRdF5
3uaJRsOuzDn26rGvQpRGRhtiP/a+F8SNp5HR5D4cZSMc/jOki55EF3JgK0bb
Eadx48YV0qGc5Atjx461QYMGlbddmZYkPbR0PI0MYb+FeHUN+1oEtSxrgqAv
NjZrtGSitg4STyNTNuzWlC/YT+P5WlAG2sqvHzy0BVqfI/gMXiJoM9YLrFWC
/hlo/ebNm9uKFStSSkcIIYQQ3z1R+rYm0vAaedOQ/s5eXJyxMHYur3kDyz73
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
NTJ72UEYM5s2bRrTy8xdXqMw9vbs2TNmB+3du7dLgzkQbcKcUq9ePWfr43/C
8J0rS9n4+8UXX7ixv1mzZs6WCbQv6WPDqFu3bqVyYmslP+Yqxn1fLv5etGhR
LFzLli3dmihcJtLHPt6/f3/76KOPXF7sD8CECRMq6OCBAwfanDlzbOLEiS4s
dejevXtKZcJ+yWfqQPuF7cheIxd/e02hR48eMVsydutPP/3UlQ+bjtewtOHw
4cOtXbt2rty0Ifafzp07u2PevHnWp08fp83R9Vw/4nbp0iW2V7t27VoXhu+J
Qzn4H3sr14X60kaffPKJff311y4OYblG+fn57jPt4u2zXFNs5SNGjHDlIm2v
geKlRxyuDX0DHeLrRvt//PHHrh2pC3Fog6+++sqFCWpkznNNYcWKFa79yH/w
4MGuvWfMmOE+kx7fBfn8889jfQ5fGNqLslJP+g75UDbOQSoamf4xdOhQ9z/5
Zmdnx9ogqq8H4Tp99tlnLu0WLVq4ewvi9UkgHNeevt28eXO3zoJEfTx8z4b7
L3X2Oomw9F206pAhQ2KaKd738dKhn9Ae7KkMGDDAtU+URp42bZprHx/fa+Rk
bUDfo560d/Cacc63aYcOHWK+A1xjyu3bmr7B5zDpjGfBfOO1TxDC0lakw/Wg
vxKO60lc8uT+9fd9UCNHxU02TnuNTD/gnvrwww9dn+czeTRu3NjVtUmTJm6/
bPr06a4vA2kSn/Yi3+B+V7w2FkLsemAHDo5XC8vG4zl16ljxt/P+wrIxhgP4
jnOE8RA3yv9x0+B+lnXKEbHP+F2UrFvrDvyT0aacz238oftu9T8ftWV//J0L
u/y2qy3ninPLNPMS29C1gy0+6odWumWLFc2Z5bTxllHDbeuypZZz+Tm2/oO3
XRy0MLq6ODvL6eZ1b71keS0aWsnaNbb6mb+5NCGskYvKytLi1ptsybfzbxCv
kZln586d6w60FGMv33uNx5ja9Ns2Yu5iLMfOwjjKGoIxFH1HPOYP4k6ZMsVp
K8ZzP+4yHxIWLUKapMNcSvsSh3Ed+2oQ5lXGduyzpIeGZH4E9jq/+Wa7zZ45
E//AcJl8+l9++aWrM7qu2bfXGC3KvOQhfXQW8Zjr0DnhNVa8MtFXmEuYN8Lr
DtdnQhqZz+gI2pJyM7/hQ8j3aE7aC5jX0AuUnbmN+b1fv36urdjrJU3akTRI
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
Ni1umC1bttj8+fMrfLd582br27evPfDAA/b3v/+9WmXY0cyePdu2bt1aK2lH
td2UKVPs5ptvtp///Od23nnnWc+ePaudD/shN910k0vztNNOs7p161YKk6ye
9AOO9evXV7s8UZSUlNjLL79sJ510kp111lnWpk2blOPm5eXZk08+aaeeeqqd
eOKJ9txzz1lRUVHsfHFxsb366qvu3K9+9St74403KtV15MiRdsUVV9hRRx1l
v/vd72zYsGGxc8muSWlpqb333nt25pln2i9+8Qv785//bDk5Oe7cmjVrXNnI
97jjjnPnVq1aVZUmiqGxp5zvy9hDHWfOnFnpe4095ezKYw+MHz/eXn/9dbvk
kkvceBAP4t5+++0VvqvO2AMrV660+++/3409Z599tr3zzjtuPBQiXRYtWmST
J0+u8F0ijXz55Zfbf/7zHyssLLQZM2bYnXfeaQcffLDrszsD/fv3tzPOOKNa
aVC/Dz74wAYNGhR5nrH9mmuuseHDh1f4fuHChXbXXXfZ6aefbhdddFG1yrCj
+fjjj+3qq6+u8bkqqu02bNhgxx9/vDVo0MCmTp1qb731lu255542Z86cKuez
bds2u/HGG61+/fr29ddfW7t27WyPPfawbt26VQiXqJ6k0blzZ3viiSfi9oXq
8uabb9rJJ5/s5hP67kEHHWQDBw5MKS56iGPixInWvXt3O/zww61OnTqx8+hj
NCrzTe/eve2UU05x85GHeXz//fd3um769OnWvHnzmMZL5ZqQ1gknnGADBgxw
efzzn/90/0PDhg3t4YcfdnmMGDHCzaW33XZbtdpKY8/3Y+yZN2+ePfjgg9ak
SRNX36effrrCeY09u/7YA5T9uuuus912282WLVsWmQ5t83//93927LHHxr6r
7tiDFv7lL3/pxodJkybZZ599Zo8++qhbR4odx5KV661uty/sH41723tdR9jC
pfHXTZsKimxN3kZ3H7zZYag16zcudm7jlkLrP357X1iyar31Gzfblq7Jc58b
9vrS6nT+vMbKzVqNfh6E+TSRRg7eC+hr7oHMzEz3OSsry40P2HmOOeaYSuvn
G264wc1vr732muvHzNHedsV6DxsI9yr3x2WXXebCYGvIzc11c/zixYtjaVGO
F154wf2N1j/33HOdPWzfffd1YTkuuOCCWPhkZfMwbjPnxOPtt99OaOdBZ9TU
PEU+aIsDDzzQjSOMFxs3bqyRtJPNQdgVwnNxdYnXdmGdw3WsaX8f9CL9Kkyy
ejK31dY8deihh7o1qeeVV15x80oqhNuMeeL666+PfUavMQ97PvnkE3dveHsK
8/MzzzyTcvrBa7J69WqXFho4FZiPsftWB40934+x56mnnrJ169a5v+ljl156
aaUwGnvK2VXHHg/7IvE0MvfWT37yE9dngxo5Kv10xh7aFPtxbe1FiPRZm7/J
rvt3a6eNJ8zNsrrdR9pVL7S0FevyI8MPn7bA3v1kuJWU9YMbX2lrK9dviJ17
pe1gu/M/Hd3f0xYutTve6mDN+4+z619uYwvKdDdp8ndNwPxw3333Vfo+mR05
OE+9++67tvfee7t9loKCArdvc88999iCBQtcGoyvwfuQ8+ecc45dfPHFbv05
ZMgQ1+fhBz/4gdufYn+G+wq71vnnn+/2iNeuXeu+++abb2Jpsdfjy79p0ya3
b/zss8+6vRf+5mCvClIpmyfZPJXsfE3OU8znzz//vFvHjB492o4++mhr3759
tdKcNWuWWxuxF8W8zVj14YcfVtpPqI3xOVnbQX5+vu2zzz6V1m5VgbTGjRvn
bBrMCezBhUlWz6q2A3u6UfNisGz06RUrVljHjh1df8WOgzarClzLoOb97W9/
6/qOB3sR+aHpgPbAxtuvXz+3b5lorg5fE/qib8/WrVu7euJrEIS9XOzTLVq0
sEMOOcS6du1apXp5NPbs+mMP6w3GHaDt2esI2x9BY09q5+Oxo8ceTzyNzFqL
e4L7jPqFNXK4rOmMPdybHKyHmNfos/jYiB0Hdt/HG/aq8N1zLfpbj9FfW7eR
023ghHK7cLcvptuQyfPs7jqd7JqXWtnYWZl2y+sfx+IMmjjXnmrSx+56u1wj
tx862T78dKT7+8VWA2P25ZtebVvtMrPGYg5YunRppXPJNDL7eXfffbe7n/AN
fP/999057M/MheyFetiPYV/Nw32Bfxb7KWGYpxhT0Gz+XuW+Y0xNNk95WrVq
FbnfmUrZPMnGUmxi39U85cH/C99LtO2tt95a5XTYb+K6e/8wbHCkh40tDOMz
e3A1SbK2A/bFaD/2WaoL+myvvfZyfYfxMirNZPWsznz90ksvxfVRZVynXPRJ
xvyrrrrK9X/0U7p8/vnntt9++8X0LzRu3Nh++MMf2iOPPOLuI+Yh8kO3Mmfw
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
XtW9Z/bZ0QVr1qxxn7HP3Xrrrc7+Foaxmz2smiRZ2wHjHu3n7RfVoUWLFrbX
Xnu5voNOjEozWT2rM5e/9NJLcf1X8e2jXPRJ5terrrrK9X+0Vbpg82GvEnun
h2uKPZM9Tfo5NiFsofgohgm3eTplu+222ypo8+qg8WXXHl8A/YKPBf662I/x
Z0U3h9H4sv38zji+UJd//etfzl5LOj/84Q8r+CPjt8JeDNcan2fGF/YhwsTr
r/SNE044wdm2sSGz/8LnMNzLjGP4taSbtxDfNcxh+FcxbzFf8EyCB5sP9xJ2
H3/gz4R9y8Mcho9WFMxhrO3xg2Jeh+eff97NU9Wdw1IpmyfRHIatBe2RyE+h
puewoL/gV1995erh9zHThfU4+6BB0AtRYzTjIfonOC5Wh1TaDtseYzj+jDUF
8/2oUaPc/up///vfSueT1TOVOQxt+sUXX0Qe9IXg+O5BN3AtV61a5TQufo2D
Bw92vpPpwD2BLbBRo0YVvqdO3K/YOCEnJ8dpzrDfXlSbp1o2riVzZ03tmWt8
2bXHF8BOTzoe+k7QJ8Wj8aWcnXV8wW8Fewrp+DoceeSRketPYC+C/MK29Hj9
Fbsv9/nf/vY3t8dVr169SjqXZyrwRb7iiisSXtd4eQvxXRPeCw3C/iL3UKL1
OXMY90MUieYw7ifmd9bBHnwLw3MYz074uOmWzZNoDuvXr58bKxKlk2wOW758
eaRdJYrwHNajRw/nN1jVNNn35NktD3MF83nUHjxp4t86ffr0yLTSqQckazue
X8F/dMSIEXHTSDfPINiYeE9CVJqJ6pnKHMZz8/TrqIM8X3zxxch4zNfB68G9
9bvf/a5SOHxso+y/+M/yXD37lGG4d377299W+I55nOdcPInaPJWysVfKs0pB
v8Iw6VwzjS+79vgC+Gr4d6d4sGGG392g8aWcnXV8wf7frFmz2Gc0KntV3r8/
DHuS6NTgXhakuqbDDwrf+GB+PLOL/0+yaxIv7+pcTyGqQqI5DL8n7sl///vf
sftt9OjR7ntPVecwOPPMM51tB3+BXr16uWdn8JUKgs8Vms/bg/y4nErZPMn2
QtGZ4XsR2NPCZodvFHYT/g7uvQL3K/XE7hd+T1cUzGH4gTGHY+vCXwufx6qm
iR25a9eusfKy38Wchr9ZGPw5aeco0q2HJ17btW7d2o2/5IkNiyM8tqWTJ3YP
5gLGfuZMbCm03UMPPZRWPaE6e6GNGzeu4MMXhv6M7yx9mneCoWHDdlBsX4z/
3AtBWN+gy6gTfcO3m+/f+J1jy6R+2LqoA/cM9mRI1uaplI24+BjEI91+ovFl
1x5fuNeCz40CaUfpMo0v5eys4wualTryjknABk04v7fDveH1MjYW7iN8Ivwa
JVl/ZS5atmyZ+xt/H+4rf18QjnmJd1pyr/lrRj1SyRuq2oeEqA6J5jBgDqFf
Y4vApx7/oqBthrkp3hzGGh+7VLw5jHj4HWG38mvnsJ2He4Tn0fARY+5m3vK+
t8nK5qnqMzX4ejKGBI+w7xf2FZ4h5xwaJhnMYfgL0zbUifU4a+Oqpsk4w3PN
+GHy7knGPd6vwx4ltoogicbudOvhiWo7xklseOG2C+8JppMn4zF15L1h+Lmh
FRnv/fNbqdYzlfPx4Jka3lmcCDQW+4hcXzQZ70IK7ynS76kz72oIQl8ItxkH
vnoefAPwhaC/0xe972kqbZ5K2Ro2bOje7xCPdPuJxpdde3zhPV5oNvxksQmy
ZsAWiE9AGI0vqZ2PR22PL+xRoW3pF0cccYTr18F3taCtuV+oP2lj7w2+UyRR
f2XN/uc//9npYsYndGzwndU8ixg1tuF7nEreUNU+JMR3AetqP3fUJNhoosah
MITBXhblw5SsbMnmMObwoJ9kuvCOKJ6DCO9HJoL1cyJfq3TTDL7jKh6s89HQ
NZUn7Ii2ox94W0gUyepZm+9m8mDDS/Rcdip9Ph7cM/HuhVRIVrZkVOWaJUPj
S3x25PiCLwq+oUB6UftTHo0v5ezs4wv2WNol3juesU9XdXzCXswapirPT6aS
d22MPUL8r8McNnToUHd/RYG9Fb83noFIF/ymWJs//vjj1S1mrabJM1jYH/y+
fE3lubO1XbJ6YqvBn66257DvK7VxzXZ1vs/jC895xbuXgmh8KUfjS+2hsUeI
2oHfJOMZ2+A7kcIwBid69iMevJ+S9wXVxHuHajNNnvOI8qWsiTx3prZLVE/y
oR9w+N+wEOlRG9dsV0fji8YX0PhSu2jsEUIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEKI/z2u
vPJK23333d1xwAEH2IUXXmhjx47d0cWKkZGR4X7bszrwG/BjxoyxadOmxQ2z
ZcsW9zuiQTZv3mx9+/a1Bx54wP7+979Xqww7mtmzZ9vWrVtrJe2otuM3ZG++
+Wb7+c9/buedd5717Nmz2vlMmDDBbrrpJpfmaaedZnXr1q0UJlk96Qcc69ev
r3Z5oigpKbGXX37ZTjrpJDvrrLOsTZs2KcctLi62V1991U488UT71a9+ZW+8
8UaFuuTl5dmTTz5pp556qgvz3HPPWVFRUew8bXzRRRdVOLp16xY7n6z9BgwY
YL/5zW/smGOOsTvvvDPu7+3yO7ukPW/evJTrFoXGnnK+L2MPdZw5c2al7zX2
lLMzjz2wcuVKu//+++24446zs88+29555x03JnnGjx9vr7/+ul1yySW2Zs2a
CnGTtXmysWnp0qWx+H/4wx9s1qxZkWWsqbFHiFS5/PLL7T//+Y8VFhbajBkz
3Nx48MEHW2lp6Y4umqN///52xhlnVCsN6vfBBx+4+ysKxvZrrrnGhg8fXuH7
hQsX2l133WWnn366uy93ZT7++GO7+uqra3yuimq7DRs22PHHH28NGjSwqVOn
2ltvvWV77rmnzZkzp8r58PujN954o9WvX9/9Nm27du1sjz32qDDOQqJ6kkbn
zp3tiSeeiNsXqsubb75pJ598sptP6LsHHXSQ+w3VVEAfo42Zb3r37m2nnHKK
08Ee9BLHxIkTrXv37nb44YdbnTp1Yuf5G51Jvv5A50Gy9uM6/eAHP7AuXbrY
5MmT7e6777YTTjihwhwJS5YsscMOO8z22msvF646aOz5fow96JUHH3zQmjRp
4ur79NNPVzivsWfnH3u4z3/5y1+6e5DfVuc3tx999FG3VvNQ9uuuu8522203
W7ZsWez7VNo82djEuuPhhx922vi1116zn/70pxXyhpoce4RIFeap4DxL3+Me
8L83n5WV5cYH7DzYl8Lr5xtuuMHNb/Rr7rH999/fhg0b5s6xFsUGwr3K/XPZ
ZZe5MNgacnNznQZYvHhxLC3K8cILL7i/Fy1aZOeee64dddRRtu+++7qwHBdc
cEEsfLKyeRi3mXPi8fbbbye082BLqsl5ijGWMQFNcuaZZzq9UxMkm4OwK4Tn
4uoSr+3COofr2KFDhxrNGz1JvwqTrJ7MbbU1Tx166KHWp0+f2OdXXnnFzSup
gB5jnvV88sknru97nRpu03/+8592/fXXxz4/++yz9thjj6Vc1mD7ce8Fy8m8
R/8M2oMoB3bm9957z91zNaGRNfbs+mPPU089ZevWrXN/00cvvfTSSmE09pSz
s449lBv7cbI5hH2RsEaGZG2eaGwaPXq0/ehHP3J7Ah5s4cGxsKbHHiFSJTxP
vfvuu7b33nu7PdyCggLXV++55x5bsGCB6/MHHnhghfuQ8+ecc45dfPHFbrwd
MmSIrV692p1jHGZ/iv0Z7qvmzZvb+eef7/aQ/5+98wCWougaNkhOAiqFiJIU
MBCUpIAoKiKSBVRyUISXjCACikiUWICCwg+85AJEgkB9IEGCRClSkYtUYCBI
kiBJrP7r6Vu97+zcmZ3ZdLkXz1M1xWVnt6e7p/uc0+ecnjl//rz+7NChQ4Gy
iCM3bdpU/33t2jW1du1aPbcKFSqk/+YgVgV+6mbw0lNe52Opp/773/9qvYt8
JTY3ceJE1bp166jKZO1NnIo4GXobO2DkyJGJ5Eg85LNX38Hly5dV+vTptf8z
Wihr06ZN2qeBTiA+aMernZH2AzFdJ71orRtj+vTp02rGjBl6vOLHwTbzQ/ny
5VWPHj0C/8cfRHnYbE5wr7t16xb4P34Y9Ag+YPzNCxYscKyjU/+NGjVKFShQ
IPA95h/5HMgDA/7BKlWqaH2IPYq/OxpE9qR82cN6A7kD9D2xEOs9NYjs8Xfe
jXjLHsY/B2sOdMe0adOCbFaDm41sr4u9z0PJJuxz5jDzjrFDvzZv3lznjRhi
LXsEwS/oKeJ5jF3mE7mBw4YN0+eI9+bKlUvHQg2Mb+JqBnQFfgn8TnbQU8gU
bDYzV9HpyFQvPWVAjjvFO/3UzeAlS4lRJZWeIhZmnfvRQjwK3W/yw/DB1atX
T/vY7CCfiXHFEq++A2J29B8xtWiZMGGCjrUxdpDlTmV6tTMafd2rVy/XHFVi
h9SLMYkOrVq1qh7/2E9+GDt2rMqaNav64IMP9DzBZqW8Xbt2JfruqlWrVMaM
GYPsZ3wsjRs31nOGeUQ/8bcVt/7Dp8p8pc7Ykcxp6mLGKv5k4pzGLoiVjSyy
J+XKHmBdQo4F+br4j8mDxW62I7Lnf+eTo+xBXxAPYYwwjsnjIpZCjrMVPzay
U5+Hkk2cY72/Zs0aXTY2MzEyyoF4yB5B8At6ihwqdBNjFv+CAb8OYxbfjjnI
M2I8G+wxESvoKdaS5CUx9wA/GXMkWj3lp26GUHoKXx3yIVSMKVZ6ijUwdSTX
K1bgMyDWaQWbwEkOI0fr168fyAOLFj99h/8OOR3LPRb047p163Q8b/DgwYnO
e7XTj57C9kRmOx2MBXIT7WAbMCbPnj2rbVhyF5ctW6Zz9fzy3Xff6RwBxvf2
7dt1efY9PswZ8vW++uqrkGW9/fbben+NHbf+Y+4zP/GfsncO387/+3//T++n
yZ49u55bzAUO5ht6DNsoUkT2pGzZA/jpGacGxrw1J8UgsieB5Cp7qDPzkRgJ
sF+XNauJnRi8bGS/fW6VTcwzcqGIH6HP2JvcqlUrvSaIl+wRBL/Y451WiCHm
zZs35BocPUVcxolQeurq1at6DrLWNWAb2PUU+XPmt+HWzRBKTy1evFjLh1Dl
eOmpU6dOOfpOnGB9/s0333h+z2+ZxDateg/ZhAxxipNRJvmrTn7JcK5p8Oo7
9qiw5v/xxx9dywj3mlbwI7EPxKnMUO30o6fwUzCunQ6u2bNnT8ffoR+s94O5
9dprryX6Hnm0dh+NHfoP/4kV/L3s/UZHeIHtSV6uG279B+SXZsmSRf300086
zkvs03pgb2HfMgashHM/RfakbNkDderUSbSvEx+mfV0nsieB5Cp7mBvkellh
HcCzVayEspH99LnBKpuw6dmrax1H5Mrjt4+X7BEEv4TSU+Q2Me969+4dmFPk
1/O5IVI9BcwD/DfkC5CfRK5ckyZNgsogrwqbz/h8jOz1UzeDV7wTO9Mp55O4
FetqYkH4RvjbGl8F5iTtxK9nfQ6XG/h8H3nkkcBeE/wNxD+tsj6cMll3z5kz
J1Bf4p3oLfYA2yFn0ylHNZJ2GNz6btKkSToXgGtib3HY5Vc416SfkPfId/oK
fwkyFn9DOO2EaOKd5EPgZ3WD8Yz/lTGNPkHP2H2d+FrQM9bcY0A3mv0+jHf2
0Fj3grH+wTajzfhCTb8y/rGdGzRoELjv3BN+b+rq1X/Ul3qhp1hfkf/AM5zc
cIp3hjuGRPakbNnD76x7RoH1h5NdJrIngeQqe9jTgu1J/fGVU0fmhHn+I/56
xiD59/yePuH/Zq9eqD73kk2UjVwzex8og7KQcU7EQvYIgl9C6SlAT7B3B58S
MQ+eB2X1v6B/3PQUY5l9Y256it/h2+A5OmZ9bPflIJPYj0b+EjmA6CaTe+tV
N0Ok+2bIx0IeWA97fhc2BbYE59ye6WiFfQnvv/++bg97eZnXtNsaMwynTGQR
e5fJtSR2RXyN59wSh7TLkVDyOdx2GJz6Dh8Dfjp739njfuFcE3lMG/E3sK8Z
eY7eMnu0/LbTz3k38GlYn8XmBHbUK6+8osc+OoY9UfZ4MOOeNvM8BiszZ87U
z2GgfdhmnTp1CpL3+BPtfcrB85bYJ8O+GKMnmFPYueb5SV79h+579tlntW5i
vw12Wai4OLnK1hg7hDuGRPakbNlz4MABbecQE2essmbg2WHkBNgR2ePvvBvx
lj1AzgPzmvHMWEMeGVirOckefMBefe4lm4CcDmJmzCfGJjlnbsRC9ghCrGHt
bH9ueCzAD+Mka+zwHda0TvlnXnXz0lPoaWsuZLjwHChsG3vMMRTYPrTHLd4e
bpnW51i5gc8ZG9qNSNpxN/qOfiNnzQ2vdsbz+UsGfCD41NxwG/PYZeTg2X2G
fkGf46fBHnIjVP9Rbzf/jR8iuZ9eiOxx527KHnJR5s2bp/9mP5VT7MogsieB
5Cx7gDHhNtajxUs2Ifvwf3vloLkRD9kjCP8G0FMrVqzQc8gJ/K3ktrHPIVx4
jgQ+t/bt20dbzbiWSQwfH4Pbu9MivWZy6zuvduKPIccz3nrq30g87mdK516W
PTyf2G2eWRHZk4DInvghskcQIof3BvH8V2vsyA5y1s9eAzs8g5K9BbF4tlA8
y2Qvh1O+ZCyumZz6LlQ7uQ7jgMO8p0KIHfG4nykdkT0ie0BkT3wR2SMIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIQiyYPn26fveSIAhCrBH5IgiCEDmvvvqqSp06
tT6yZcumKlSooDZu3Hi3qxXg2LFjUct43gG/YcMGtXPnTtfvXL9+Xb8r1Mpf
f/2lvv/+e9WiRQvVrl27qOrgRvfu3dXbb78dl7Kt7Nu3T/39999xKdup73hP
bN26dVW+fPlU2bJl1fz586O+zpYtW1Tt2rV1mcWKFVPDhw9P9B2vdjIOOC5e
vBh1fZy4c+eO+uSTT1TRokXVc889pyZPnhxRObyvtmLFiurgwYNBny9dulS/
c7VgwYKqbdu2uu8N9DG/sR5z584NnPe6Jx06dEj0+7Nnz0ZUf4PIlwTuFflC
G/fs2ZPoc5EvCSR3+TJ79mz9u0cffVS3lfFvZfPmzapv376qUqVK6ty5c0Hn
eD9ggwYN1GOPPaZefPFFtXz58rDOG86fP69ef/119c033wQ+41odO3ZUzzzz
jJZtzZs3j1r2CEIsqFy5showYIC6efOm2r17t3rnnXfUgw8+qP7555+7XTXN
kiVLVIkSJaIqg/aNGDFC2x1OIPerVaumVq9eHfT5kSNH1LvvvquKFy+u7YV4
kFQ28tSpU9Ubb7wRcz3m1HdXrlxRjz/+uBozZozasWOH6t+/v0qTJo3av39/
xNfhHaO1atVSo0eP1u+fnTJlirrvvvuCbEAI1U7KmDVrlrYF3cZCtPTr1089
+eSTWtcwdnPmzKnfkxoOJ0+eVA8//LBKmzat2rZtW+DzvXv3qkyZMqlp06bp
fkePoUsMgwYN0jYo1zWH0YF+7gnzrEePHkG/v3HjRlT9IfLl3pAvrNVatmyp
xo0bp9vbpUuXoPMiX5K/fKF/6Kd58+apw4cPq8aNG6uXXnop6DvUvXr16ipV
qlTq999/D3zOfOW6rVu3VgcOHNDjPWPGjGrr1q2+zhvoI8rPnDmzljWGL7/8
Ur333nt6ncK7xZ9++mlVv379SLtJEGIGOgzdakAnMz/MO+VPnDihZQc+oPz5
8ydaW9esWVPrvs8++0wVLlxYj/2VK1fqc6VKldL+EeYx8uzll1/W38EPcenS
JfXUU0+p48ePB8qiHh9//LH+++jRo6pMmTJ6vZshQwb9XQ58aAavuhmQ6egj
NwYOHBjSB4SfKVY6jLUx/o+sWbOqZ599VvdJrGxkL/2Ez8Gup6PFre/sNhD3
kbhvLMHnwLiy49VO9F68dFju3LnVokWLAv//9NNPtU7wy+3bt9Xzzz+vhg4d
qse11UbGz9KoUaPA/9Hl6dKl03MJsIfwLbvhdU/w/8R6fIh8uTfkS+fOndWF
Cxf034wju20FIl8SSK7yZdWqVSpPnjzaToWffvpJz3k7xEXsNjJ+fD67du1a
4LO33npLr/H8nDd88cUXqly5cjp2YrWR7bAWYL0vCHcbuw4bMmSI1ru3bt3S
PiRiOuhl1p3IoBw5cgTNUc6XLl1ax1a+/fZbHV/5448/9Dl8XsRziN0wf8aP
H6/nx+eff67jLXx26NChQFnYAE2bNtV/M9fWrl2r9X6hQoX03xzEscBP3Qxe
OszrfCx1GDEm4ni0gzgrMipaHYZ/Eb3YrFkzrdOxEUaOHBlkX0E8ZLdX38Hl
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
3+aGnzHvBvqcmKPbOfxu1mcwhQNrLsaSPU5rJZJ75oXIF3fupnwhF8Xss2Iv
aag9nCJfEkju8gV/LP0SybOs8fOGGlte572gbowzt9/HQ/YIwr8ddBhrUuNz
s4O/lbw39kCEC/sLWJu3b98+2mrGtUye54n/Afkfy2smt77zaie+GvI/463D
7lXicc9SOveyfGGfl9tcsiLyJQGRL/FDZI8gxIeff/5Z77ElR8oNZLCffUx2
eD4lzwuKxXOH4lkm+zycciljcc3k1Heh2sl1GAcc5h0WQnjE456ldES+iHwB
kS/xRWSPIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAjCv49XX31VpU6d
Wh/ZsmVTFSpUUBs3brzb1Qpw7Ngx/W7PaPjll1/Uhg0b1M6dO12/c/36df0e
USu8B7Vu3boqX758qmzZsmr+/PlR1eNusm/fPvX333/Hpeyk6rstW7ao2rVr
6zKLFSumhg8fnug7Xu1kHHBcvHgx6vo4cefOHfXJJ5+ookWLqueee05Nnjw5
onJ4l23FihXVwYMHA581bdpUf2Y/1q1bp9/r5XSuUqVKgd/fvHlTde7cWT3+
+OOqcOHC6qOPPgrqq/Hjx+vvP/bYY6pOnTrqyJEjvq4dKSJ7ErhXZA9t3LNn
T6LPRfYkkJJlD8yePVuX++ijj+q+YH6AH9kDa9eu1e/x5vevvfaaWrlyZeAc
16pevbrKmzevKlOmjFq4cGHQb8+cOaOaNWumChYsqEqVKqW++OILdfv27Yja
JwjhULlyZTVgwACtP3fv3q3eeecd9eCDD6p//vnnbldNs2TJElWiRImoyqB9
I0aM0HPfCWR7tWrV1OrVqwOfXblyRdsSY8aMUTt27FD9+/dXadKkUfv374+q
LneLqVOnqjfeeCPmuiqp+o73j9aqVUuNHj1av5t2ypQp6r777lNz584N+l6o
dlLGrFmzVIcOHVzHQrT069dPPfnkk2rz5s167ObMmVO/QzUcTp48qR5++GGV
Nm1atW3btsDn69ev12Wao02bNipPnjzqjz/+UH/99VfQOY6nnnpKNWrUKPB7
5gGfMc+xRdE3Y8eO1eeoI7p/6dKl6qefftL31DrvQl07UkT23BuyB/umZcuW
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
O12/c/36df2uUCu867Ru3boqX758qmzZsmr+/PlR1QMKFSqkZs+eHXU54bJv
3z7X99xHS1L13ZYtW1Tt2rV1mcWKFVPDhw9P9B2vdjIOOC5evBh1fZy4c+eO
+uSTT1TRokXVc889pyZPnuz7t3/++ae2Y55++mlVpEgR9dFHH6lbt24FfWfz
5s2qb9++qlKlSurcuXNB57z6nPd7NWjQQD322GPqxRdfVMuXLw86/88//6ih
Q4eqkiVL6nHavHnzwHt1mzZtqipWrJjoWLduXTjdE4TIngTuFdlDG/fs2ZPo
c5E9CSRn2QNLly7V73MuWLCgatu2re5bv+dv3rypOnfurB5//HFVuHBhLbus
fRFK9kyZMsVRtiDn4Pbt26pPnz5aJj7zzDPq888/T9TPjGva/Oijj+r7xNw1
+Ll3guBG5cqV1YABA/QY3717t3rnnXfUgw8+qPVlcmDJkiWqRIkSUZVB+0aM
GKH+7//+z/E8sr1atWpq9erVgc+uXLmi5/uYMWPUjh07VP/+/VWaNGnU/v37
o6rL3bKRp06dqt54442Y66qk6jveMVqrVi01evRo/f5Z5Op9992n5s6dG/S9
UO2kjFmzZqkOHTq4joVo6devn3ryySe1LcvYzZkzp35Pqh9atGihj61bt6pv
v/1W5cmTRw0aNCjoO9S9evXqKlWqVOr3338PfO7V58xn6tW6dWt14MABPR8y
Zsyor2VArz3xxBNaF2JndO3aVf8L69ev1+0xR5s2bXT9/vjjj4j7SmTPvSF7
Dh48qFq2bKnGjRun29ulS5eg8yJ7kr/s2bt3r8qUKZOaNm2a7lfW4KyR/Z7n
vj/11FN6HrPOxY4eO3asPucle44cORIkW+hH1s0LFy7U57GPsY2RRXzGdZBV
Bu4t93jevHnq8OHDqnHjxuqll17S5/zeO0FwAz1l1cPbtm3T+te8U/7EiRN6
jOHnyZ8/f6I1WM2aNfW8+Oyzz/T6MXPmzGrlypX6XKlSpVS7du30XEVmvfzy
y/o7+BouXbqkx/rx48cDZVGPjz/+WP999OhRVaZMGb0uzJAhg/4uB+tYg1fd
DMxf5qEbAwcOdPTz2HU1dZk+fbprOX5AT3Xq1En7N7JkyaKqVKmifvvtt6jK
NHjpIPwKVn0SC5Ky7+wgNxlXdrzaiXyMl57KnTu3WrRoUeD/n376qbZp/WDv
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
uHM3ZQ+5KOTEA+PVKXZlENmTQHKXPV6wXiAfItJrexEP+SEIQmjQU/jjrOte
K/hbyW1jr0G4kBOKfw0fXKyIR5k8s5N1vnknRKyumdz6zqud+GPIiYu3nvo3
Eo/7mdK5l2UP+zjd5pkVkT0JiOwJjcgPQbg7sFefPf7kaLqBnA21v8MNngPJ
M4Fi8WyheJbJfgqnfMlYXDM59V2odnIdxgGHeU+FEDvicT9TOiJ7RPaAyB5v
RH4IgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgnC3mT59un73kiAIQlIiskcQBCE0
r776qkqdOrU+smXLpipUqKA2btx4t6sV4NixY1HL8V9++UVt2LBB7dy50/U7
169f1+8KtcK7TuvWravy5cunypYtq+bPnx9VPZzo3r27evvtt2Nerp19+/ap
v//+Oy5lJ1XfbdmyRdWuXVuXWaxYMTV8+PBE3/FqJ+OA4+LFi1HXx4k7d+6o
Tz75RBUtWlQ999xzavLkyWH9/syZM6pZs2aqYMGCqlSpUuqLL75Qt2/fDpzf
vHmz6tu3r6pUqZI6d+5cot+vXbtWvw/30UcfVa+99ppauXJl4Nxff/2lvv/+
e9WiRQvVrl27RL/t0KGDqlixYtBx9uxZfa5p06aJznGsW7curPZZEdmTwL0i
e2jjnj17En0usieB5Cx7kDF9+vRRRYoUUc8884z6/PPPXdvCu7SZ+wcPHtT/
572BTrIBGeXERx99pBo0aOB47vz58+r1119X33zzTUR1E4RYU7lyZTVgwAB1
8+ZNtXv3bvXOO++oBx98UP3zzz93u2qaJUuWqBIlSkRVBu0bMWKEnttOINur
VaumVq9eHfjsypUr6vHHH1djxoxRO3bsUP3791dp0qRR+/fvj6oudpLKRp46
dap64403Yi5bkqrveD9prVq11OjRo/X7Z6dMmaLuu+8+NXfu3KDvhWonZcya
NUvbgm5jIVr69eunnnzySW3LMnZz5syp37HqB3RB4cKF9RzkHca827ZNmzba
tjVQ9+rVq6tUqVKp33//Pej36PHMmTNru27Xrl1q/PjxQTbekSNH1LvvvquK
Fy+udZgd5lmPHj10vc1x48YNfW79+vVBn1OvPHnyqD/++COSbtKI7Lk3ZA+2
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
999/x6Vsp77jPbF169bVfVe2bFk1f/78qK/j5354tZNxwHHx4sWo6+PEnTt3
1CeffKKKFi2qnnvuOTV58uSwfn/mzBnVrFkzVbBgQVWqVCn1xRdfqNu3b+tz
f/75p+rYsaN6+umnVZEiRdRHH32kbt265evavNurYsWKiY5KlSoFvtOhQ4dE
58+ePavPnTt3Tl/7mWee0XVr3rx54FykiOxJ4F6RPbRxz549iT4X2ZNAcpY9
TZs2dZQP69atC3zHTTb5kS1//fWX+v7771WLFi1Uu3btgq79zz//qK+//lq9
+OKLKm/evKpy5cpB16W/7GW3bds2ip4SBP8wHgcMGKBu3rypdu/erd555x31
4IMP6nGbHFiyZIkqUaJEVGXQvhEjRqj/+7//czyPbK9WrZpavXp14DPeaVmr
Vi01evRo/b7TKVOmqPvuu0/NnTs3qrrcLaZOnareeOONmOsqp767cuWKevzx
x9WYMWPUjh07VP/+/VWaNGnU/v37I76O3/sRqp2UMWvWLG0Luo2FaOnXr596
8skn1ebNm/XYzZkzp35Pqh/QN4ULF9ZzkHcY827bNm3aaP0C6BeOrVu3qm+/
/VblyZNHDRo0yNe1KYPPrMdTTz2lGjVqFPg986xHjx5B37lx44Y+9+WXX6r3
3ntP2wq8+xc7vX79+lH1lciee0P2HDx4ULVs2VKNGzdOt7dLly5B50X2JH/Z
s379+qB5j9xBvvzxxx/6fCjZ5Ee2HDlyRL377ruqePHi2sa1cujQIfXyyy+r
xYsX63vaqlUrlTlzZnX16lV9njVQqlSptI1tymetIQhJAXrKqme3bdumx6N5
p/yJEye0fMDPkz9//kTr55o1a2r99tlnn+k5xNheuXKlPsdakzUjcxWZxTzg
O/gaLl26pOfR8ePHA2VRj48//lj/ffToUVWmTBn16KOPqgwZMujvcrzwwguB
73vVzYDcZo66MXDgwJB+HgM+NNoRDVwH2yJHjhyqQIECWoYbWRAtXjoIv4JV
n8QCt76z2zncx+nTp8f02m73w6ud6LZ46ancuXOrRYsWBf7/6aefqurVq/v6
LfXGR+N2H+192rVrV1WjRo2Irj1nzhzti7aOvccee8z3+EAf4/eNBpE994bs
6dy5s7pw4YL+mzH60ksvJfqOyJ4EkqvssXL69GldFnazwUs2WXGSLQbiMnYb
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
OzxTxP48k0jHkCDECtbORj/EEtaeTrLGDt9hzeqUf+ZVNy89hZ52y30Crss+
Fzd4DhTPprHHHN2gLCefUzRlWp9j5QY+Z7M2j8U1wavvvIjkml73w6ud8Xz+
kgE/b6i916HGPHPCbazH4tqhYM3FWHKLxeKvIQ/QLcYdyf30QmRP8pQ95KKY
5xcwJpxiVwaRPQkkd9njRbSyKRTmfSROfmDkDb7xUHWPh+wRhH8D6Cl8Xswh
J/C3ktvGPodwYU4TO3KKT0VKPMrkmZ34GKyxsVhcM7n1nVc78ceQExdvPfVv
JB73M6VzL8senk/sNs+siOxJQGRP/BDZIwiRw3uBRo0alSg2ZAU5G2p/hxs8
g5JnAsXquUzxKpO9HKH8R9FcMzn1Xah2ch3GAYd5T4UQO+JxP1M6IntE9oDI
nvgiskcQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQhEjo2LGj2rBhw92uhiAIKRCR
H4IgCEnHq6++qlKnTq2PbNmyqQoVKqiNGzfe7WoFOHbsmH5/ZzTwnnf0ys6d
O12/c/36df2uUCtbtmxRtWvXVvny5VPFihVTw4cPj6oeUKhQITV79uyoywmX
ffv2qb///jsuZTv1He+JrVu3ru67smXLqvnz50d9HT/3w6udjAOOixcvRl0f
J+7cuaM++eQTVbRoUfXcc8+pyZMn+/5t06ZNVcWKFRMd69atC3xn8+bNqm/f
vqpSpUrq3Llzgc95d5fTb/men/ORIvIjgXtFftDGPXv2JPpc5EcCyVl+3L59
W/Xp00cVKVJEPfPMM+rzzz8PaouXfKGP7efmzp2rz/mRHwcPHlTVq1dXefPm
VWXKlFELFy50rCfv4ua3fF8QkjuVK1dWAwYMUDdv3lS7d+9W77zzjnrwwQfV
P//8c7erplmyZIkqUaJEVGXQvhEjRui56QR6oVq1amr16tWBz3inZa1atdTo
0aP1+06nTJmi7rvvvoDMiJS7ZSNPnTpVvfHGGzHXc059d+XKFfX444+rMWPG
qB07dqj+/furNGnSqP3790d8Hb/3I1Q7KWPWrFmqQ4cOrmMhWvr166eefPJJ
bcsydnPmzKnfk+qH9evX69+Yo02bNipPnjzqjz/+CHyHuqOHUqVKpX7//ffA
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
KXdwzbAicdJPsXeZvLJujq7i/V2sQ4b9yZL1zxUthyeq7rBrYqcjruARXver
SJrp3o9U5UznfBzYW1K9cwgdhZ8CbR/dxZ6o8How7Z4y8z6GIOhY1qlpG2gZ
2nVwLGC9ET8a4uUcNp3BgwdH5iM8DrGnhzVOP47wzOEj6DUw+4HC94sj6L+K
7wF+gTxrPIcdOnQok2ZF25D6nl2775k1a5bTbPjJPvXUU27OwDoEPgFh1Pek
dz6Omu57wvCcB31o8PGI6h94v56HOWJwTh9HKo2MDg/ayuln8M2g7pmz0tbC
OriybUiI6oK5sx8fqhPmnlF9TRiuwWYV5X+WKm+pxinG6WTPNel6214UvAeK
Z7gi76LhGSfeuD1PFY0z+B6rOLA5o6HjqEw5UtVdKiqTZqr7kaqcNfn+JQ+2
lvC7j4Ika/PYRKiXOF9LzrO3pjL7kBjvsb2hlyoD7TXuOYTK3M9UqO/ZOfse
fFH8PivaY9TalUd9Tyk7e9+zs0Jfh990cJ9smJroe4T4LsA4hb2NZygK7K34
trHPoaKwdwrb3+OPP17VbNZonKxVYWMIro1XR5o7W92lKif2GPaF1PQ49V2k
Ju7nrs7u3PewxzTuOQuivqcU9T01h/oeISoPvwtWp06dcmvDQehnk+3viIN3
UPJOoOp4t1BNxslejri9W1VNc2equ2TlJB3aAYf/nQpRfdTE/dzVUd+jvgfU
99Qs6nuEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQghRk7z11ls7OgtCiG+Jdu3aud9eEkKIbxP1PWJX5JZb
btnRWRDfIa644grbc8893XHAAQfYRRddZGPGjNnR2UqwYMGCKvfjWVlZNnr0
aJsyZUrsNRs3bnS/FRpk/PjxdtNNN9nRRx9tp512mtWuXbtK+Yji2WeftTvv
vLPa4w0zc+ZM27JlS43EHVV3/E4sfRl1d/7551uPHj2qnE469yNVOWkHHGvW
rKlyfqIoKiqyl156yU4++WQ7++yzrVWrVhUK37lzZxfuyCOPdGWl/XsKCwvt
lVdesZNOOsl+9atf2euvv16mrKnqJ9X5pk2b2iWXXGJHHXWU3XzzzTZv3rwy
55ctW2YPPPCAHXfccXbOOefY22+/7fJUWdT3lLK79D2Ucfr06eW+V99Tys7c
96TqW2DcuHH22muvuT5i5cqVZc5RxxdffHGZo2vXronzye5JcXGxNW7c2H77
29/aEUccYZdddpmNHDkyNq/SyOLbhPb4v//9zzZv3mzTpk2zu+66yw4++GDX
bncG+vXrZ2eccUaV4qB877//vg0YMCDyPH37NddcY0OHDk18x29a3njjjVa3
bl33e6dt2rSx733ve2We++rg29LIH330kV199dXVPlZF1d3atWvthBNOsHr1
6tnkyZPtjTfesL322su+/vrrSqeT7v1IVk7i6Nixoz3xxBOxbaGq/Pe//7Vf
/vKXbjyh7R500EHud1LTgfqhnj7++GObO3eu/fGPf7RLL700cZ4xjPGL8aZX
r152yimn2HPPPZcoW7L6SXWePDL29+/f3z7//HN3T4PPHWPoL37xC9c/8PvK
/O7uX//6V9uwYUOl60p9z+7R98yePdseeugha9SokSvvM888U+a8+p6dv+9J
1rd4yPt1111ne+yxhy1ZsqTMuVq1ark5Lun6w8/vU92Tb775xn73u99Z3759
3T19+OGHbf/997d169ZF5jVKI1f3syGEh3GK9u2ZOHGiewb8b8pnZma6/gE7
zzHHHFNu/nzDDTe48e3VV191Yyht+7PPPnPnsDX9/e9/d88qzwfPAddga8jN
zXXP4cKFCxNxkY8XXnjB/T9//nw777zznD1t3333dddyXHjhhYnrU+XNQ78d
tokFefPNN5PaeTz0IZSjKixfvtw94z/84Q/trLPOcnVSXRo51RiEXSE4nlQH
cXUX1jncR9Z2q5O4+5GqnPSnNTVOHXrooda7d+/E55dfftmNK+kwZMgQ+/nP
f+7GU0CrYtP1oNcYhz3YnHk24my5qdpr+HzwnjHO0g9gpwPqFPtxdeoc9T27
R9/z9NNP2+rVq93/tKHgvM6jvqeUnbXvSbdvYV0kSiMz33rsscdi46/IPUE7
s7a0ePHiyPNRGpm0md8LUd2Ex6l33nnH9t57bysoKLBNmza5dZt7773X2bVo
0z/+8Y/LPIecP/fcc906Sbdu3WzQoEG2YsUKd+4HP/iBW59ifYbnirXcCy64
wK3jrFq1yn3HHNLz5JNP2v333+/+X79+vY0YMcI9e8cff7z7n4O1Kkgnb55U
41Sy8/n5+TZ27Fg3h6YPYr25KvzhD39w9jrK0adPH6eBqjpOzZgxw/UbrIMz
bqMDPvjgA6c5gtRE/5yqboE63GeffWzChAlVTi+d+5GqnJWtB9Z0k+kU8kab
Xrp0qbVv3961V+w4aLN0wJ567LHH2n333WeLFi1ydmTav+c3v/mNPf/884nP
Xsei6YJ5SFY/6bZn8h/U5zybHGgS2lbbtm0T+rmyqO/Z9fse5hv0O0DdY48M
3lOP+p70zsdR031POn0LxGnkP//5z/brX//a7rnnHnvwwQetZ8+eSfMadU+Y
s6JzmYsma5dRGpm2hw8HfYcQ1Qnj1Omnn+7aNs8T87f33nvPnWPN5ZBDDnFj
t4f2z7qah7GCfpf1lDCMU/QpaDb/rP7rX/9yfWqqccrTokWLyPXOdPLmSdWX
skYVd75Zs2b2/e9/3+UVbeBtfJUB2xPxBPuGqq53stbN2O/9w7DB3Xbbbc7G
Fob+mTWw6iRZ3XlYk8c/rSp150nnfqQqZ1XG6xdffDHWR5W1RfJFm2QMveqq
q1z7Rz+lA2X55z//6WyfxIO9L+iP3LBhQ/fdo48+6p4j9DTXTZ06NXFNqvpJ
p/54lrGNsrbsoT3xHWu5PGPYu7G14gNZWdT37Np9DzAvwccCf13sx/jBopvD
qO/Zfn5n7HvS6VsgTiO/++67bk7PM8NzRD3xfxRx94Q8Ezd9S7I5TZw/MnVT
E3774rsN4xQ+VIxNtGn2HXiw69Bmse34Az8ibJUexqngGk0QxinaOmsnjK3A
XJVnqKrjVDp58yQbp5gvM/4nW0NmnYg9BKwPVeW9M8OGDXN5Ds51qzpOYTNg
rTMImiCqH6Yfvf3228vorqqQTt1hv6Ofxmexukh1P1KVM51xCvvJ8OHDIw/6
96B+9KANuL+saeM3ge/iwIEDnS9eOrB2zHyHeHwZ2MMS1IDdu3d3PgS0/y+/
/NKlF94DlKp+kp1nbRUfz8svv7zMfSUv9BXYUCE7O9tpWm9brQzqe3btvgew
09MOPbT5oE+KR31PKTtr3wPp9C1xGjkM7Yq9fWFS3RPWcCgffh7B/iBInEam
72JdqarrLUIECa93BmENkTE62RyccYp11yiSjVP44zPGMtf18HyGxyn2R/iw
Fc2bJ9k4xT4B+rR04sFuwb6EMDk5OZG2kzCsU9O/sC/CEzdOpRsna5vsn/LQ
9zBmR62DE+f1119fzjZQ0TQ9qeqOPSr4iDI+x1HRNIMkux/JypnOOMU9ol1H
HaT573//OzIc/X/wfvBsXXnlleWuw482bIPFBtekSZPEZ8b//fbbL+FjG4b6
Peyww2LLEFc/cedJj31z+FqG7wnPLeuxQdAJrNkHqcj9VN+za/c9wPtPwj6r
2APD2kp9Tyk7a98TJq5vSVcjM+9lT0A4zlT3xHPqqadGzgUgTiNTJtIM7jMQ
oqokG6fwbeK5+89//pN4pkaNGuW+91R2nIIzzzzT2W/wF8B/ibkjvphB8KtC
83mbj+9708mbJ9V6Jzoz7HeFHYD+hf6Efpj5Oc8fe26D0MdSzp/+9KcpfaGw
wbEOdvfdd7v4mCfj7xgepyoSJ3bkLl26uP9ZZ2O9k3ELf9Yw+GzG+YlVJM0g
UXUHLVu2dPqONNnPwxEejyqSZrr3I1U5oSrrnaxJBn2Ew9Ce8Y+lTTOeoCPD
tk5sKYwzQf8/wH+WMubl5bnP2IG4zttTGDv9fiCeB/bQ+bXFVPWT6jxth3bD
u5+I298z/94KfN6xlVK32NKoP55X7MmeirYh9T27dt9D3tCDQZh/ROky9T2l
7Kx9T7K+BZg/04bwvyc8dcJn+gI06R133JEYc7gnhA/mNdk9IU9PPfVUwl8Q
ezn+yvR/UcRpZN4fx/5dIaqTZOMUME4wbv7f//2fHXjggXbiiSeWsb8w/sSN
U8wZ2TcWN04RDt8j3qPj58dhWw59Es8E/k34ADI2+WcpVd48ldk3w/OPXxbv
omLvOvqAftLvCfJgQ2GvAP0GOiIV9I/4m2LHOvzww13fgu2usnHS17B3mbyy
tkW/wr4H1iGDNiNI1j9XtByeqLrDxkD5iCt4hNf9KpJmuvcjVTnTOR8H+2bC
70MKg47CT4G2j+76y1/+Um49mHZPmcP9OWMN69S0ddoG7To4TnXo0MG1HcqP
dmNc8eN7qvpJdZ79QOH7xcH7Vj34HuCzyLPGc0h+glS0Danv2bX7nlmzZjkd
hJ8sbZE5A/GhccKo70nvfBw13fck61sAf+Oo/gG/DvbgsWfPzzl4pthj4OfX
qe4J9/D3v/+9yzPPGFqad3LEEaWR0dv4WVR1H7EQlYW5c/i94dUBdpioviYM
12CzivI/S5W3VOMU43Sc7xOQrrftRcF+GPqXdH9PgTLTbyRbY61onOmsL2Fz
jpubVyZNSFV3qahMmqnuR6py1uT7lzz4vMa93xOStXn6e+ol7j2rvBMpuF8s
TKr6SXU+GbTduOcQKnM/U6G+Z+fse/BF4V3egA9o1NqVR31PKTtz35NO35IM
5hLYkPEprgzcB/acp7LrR2lk9jons98LIeJhnBo8eLDrE6PA3opvG/scKgrP
NLa/xx9/vKrZrNE4WUfDxhBcG6+ONHe2uktVTuwx7H+u6XHqu0hN3M9dnd25
72GPadxzFkR9Tynqe6qHKI0cXtMSQqQPvwtWp06dpM8R/Ww6ewnC8A5K3glU
He8Wqsk42csR5S9ZHWnuTHWXrJykQzvg8L9TIaqPmrifuzrqe9T3gPqe6kO/
RS2EEEIIIURZpJGFEEIIIYQoS/j3AIQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCF2JFu3brWly5fbnPkLbOY3c3ToqNHjm5J2tmrNGisuLt7RTV8IIYQQIhJ0
yuy585x2yV+/0TZuLrRNBVt06KiRg/ZFO5ufkWmzStod8zMhhBBCiJ2NpctX
WNbiJTtcO+n47h3My1asXrOjHwEhhBBCiHLgX4Fdb0frJR3fvYN2h9+FbMlC
CCGE2NnAlif/Ch074qDd0f6KiuSXLIQQQoidCzTKjtZKNXU0aNjIar319k4f
53f5oP1tkUYWQgghxE5GWCNvyM+z9dkLbMOKnHJ6ZsPKZaXn8nIj9U77jp3s
mmuvtY/attvh2ovj3HPPteOPP97y1q5PO8ygwZ+5ozrjjDrefuddV1fh439v
1trh9fZtHrS/wi1FifY4depUGz16tDs2bdq0A5+M9GHf61dffVXmuxEjRtj1
119vRx11lJ1//vnWtWvXMufXrVtnc+fOjY1z5cqViXqYN29ejeRbCCGEEPGE
NfKaTztYxvU/shUtXy6nZ1a2e9MybjzIVvdtFql3brjhRqcfr77mmsjzyXw6
Knsu2fnsxTm2IGNRhcLcc8+99vfHn4hNqzJxRp3v13+AvVf7fXv66Wfs8MMP
t6eeetp97tW7T2TYDZsKqq1eKutbUxM+OWGNfOaZZ9oee+zhjl1BGw4dOtQO
PPBA22uvvRLfZWRk2D777GO//e1v7cUXX7Rf/OIXtueee9rEiRMT10ybNs2V
8bDDDrPs7Oxy8Xbp0iVRD3/+85+/lbIIIYQQO4pla9ZaywETIs+xb+m/7QZb
k75jE9+t27jZ+o37OvE5Z1W+9Rk7wxYsWeU+1+/5udXqOKRKeYrSyFkPnhKv
ER87N1IjZ2YtdloP+yh/FyzMTJz7ZMAgu/mWW+zYY4+1884/317/7xu2vqRs
qc6NGPW5XXHllc4Wd/nll9uwESPLaFW07C9/eYqdcMIJdv8DD7j3cyxdvtLO
O++8xHHtddeVyWf9Bg1dXKR30803W/9PBrrv+/b/xC666CI75phjXHw+/Jhx
41PGGZdP8sj1pHnppb+zU045xdVPMOzoMeNcfQ0fOarM9x/WqWuPPfY369rt
4xKtdYkdccQRNmDgoKRlSJVeXF1nL1nqwj333PN2+hln2Mknn+z0eqKuS84/
/OdH3Pzn9NNPd+e8Xl6ydLn9+ZG/2K9+9auScL+0Pz34oH0zd35pW8pb6+Lk
+5NOOsmefuYflrd2XUqN/M4775Tbx4cWveGGG+xnP/uZy/8rr7xia9ZsfydG
nz59nN32gAMOcPl84oknbNmyZYnzkyZNst///vf2ox/9yH7+85/bo48+anl5
eVV6duDaa6+1O++809mFg3zxxReJ9z9jC0brvvvuu2WuIf/U28svvxwZN3Vw
xx13SCMLIYTY7ZmTvcLurdUh8lxRyXh648utnY72vNx6oN31v/buf77nfL0S
XXxPSRwjps6zpavz7fqXWlUpT8k0cu7ofrayw1vuwMcimUZu0bKVnXjiibZy
da4dd9xx1rjp9mvQsbfffodNmjzFevTs7fRfqnPoXXQV/gedOnct0T83uPgz
FmW78zfddJM7j15DI/7jn/9ymix/3Qbr06+/O+648y4755xzyuTzPy+9bM2a
t7CBnw6222673WlF9B6anjBnnnmW3XLrrYk4FucsSxpnsnxyoH+5vl37DvbA
n/7kPqMrU2nkV1973Wn10047zT74sI517NTFaeBkZUiVXlxd+3C///0fnB37
3nv/6D5zHefvu+9+F7Z5i5b27xf/4861bdfencM35NiS+z3q8zH2+eixLm/L
V65y517494vuHHnv1r2HK0/devVTauSwloSbS+YClOull16yG2+80WnOOnXq
uHM5OTm23377Of3esGFDZ7tlrjN//nx3fvbs2bb//vs72y56Fv2MTs7MzKzS
s5Msv0EGDx7s8tuhQ/lnn/wk08CpzgshhBC7A0GN/MA7ne1fTfranW+0s/7j
v3Ya+dbXPkpcO2DCLHu6UW+7+81SjdxywHhr1HuMLV6ZZ4uWrXFxwU2vtHZ/
Ow2dbP3GzaxwnpJp5GW1H7GMq/dzR96kYUk1Mlrtyit/b0OGDrff/e53TsP6
c3959FFnY33ooYedz/KqNXkpz3X7uLvTYt4mi/7iM3prYWaW+//lV15Nuo6P
DTOskdG87Lsj3QsvvNDFM236zMT5i3/7W3v8iSfTjjNZPr32RK9yDh3J58Gf
DU1LI2M7HjlqdLk8xJUhVXpxde3Dte/Q0X2ePHWa+9yyVWvLzV9nRx55pD37
3HPuHFr8jDPOtD/+8T73uXuPXu78H/5wldPy3obMgU36ggt+ba+8+po7zjrr
LLvv/gcqpZGx02KXnTlzpnXv3t1p3osvvtidy8rKcr4MhEWPFhQUlAn7t7/9
zWlU/Bc84WsqC3OYZBqZdM4++2ynydeuXVvuPBr4wQcfjA0vjSyEEOK7QFAj
X/x0Q5s2f4ktWr7GrnmxRRmNnLU81+5/p5PTwl4jv9b2U7vi2ab2p3c7282v
trG5IY2M/wXhWnwy3v5Wt3uZA10TR3VoZOyU6CT8Llnfx46Kvgv+Ngna+Zl/
/NOtu6MZWL9Pdg6NiU4bPXacu+aLiV+6z+wHRIfxP7brimjk1bn5zqfguuuu
dzZfbN3EQ9z+mksuudQe+cujaceZLJ9h7TnxyynuM/bfdDQy9RlOP1kZ0kkv
qq7D4caOn5AoA+nx/0svv5yI4/zzL3D2dP951jdz7d33arv5Be3A+1Rje/7N
b37jzvmDOUVlNHK/fv1cm/re977n6sX7THjYE4ftGC384x//2J5++mnbsGGD
O8ecbe+99672PYAPPfSQ0+bDhg2LPI+mv/fee52v8oABAyKvqVWrlitLnM6W
RhZCCPFdIKiRf/9cs8T3Vz7XtIxGfrJBL3u701DrMnyK86UYOzPDnm/e3xr1
GePOdxsx1Wp3He7+9xrZk7tuo/PBCB7JfqMhmUbOnzzcVvdr4Y71S7NjNTLr
7s4HedteNjQTn1u1buM0FjZINOSyFausTt167hz20WTn5sxb4DQP6/58xv54
9NFHu7jR/NhPecfE0GEjbMrUr5xNGftqMj3r7aPYYGfNnuP8fcMa+c677nL2
z3ETvrAZX88q4xcRFWeyfNaERk5WhmTpJatrH+6vf33Mvpg02ZUBrTtz1mwX
D3sxsQHjz1yvfgN3LT7PnKtbr4F16drN+YFMnTbdhcPHgnPER91ga8ZfvXff
fuV+0zEdjYy23XfffZ3WXb58ufsOf+ygRgbaOb6/t99+u9PKL7zwgvsencrn
BQsWxD4HhYWF9sYbb1jz5s2tqKgo9rogV1xxhdO/7NELQxzYh0m3WbNm5QNv
o23btk6/P/PMM5HnpZGFEEJ8Fwhq5KteaJ74PqyR8b3AdwL/imtfbGmDJ31j
DXqNdgd0GjbZGvct1cteI7O/j3cffPDxCLvt9Y/KHHwfR5RGzrzpJ7a6d+Py
Nsz+rSzztsPKaWTW3S+77LIy36Fh0Zv4RbCnC79UtBW2wCeefNLWbdiU9Bxx
4MOKLZJz2D07d+maiB89hv8s5ziuuupqp2mDeXj++Recjvaf167faLfeepu7
njR5l0RYI+OfgC3cx4v+SxZnsnwmNGvHTmU0a/Ddcl4js+8vGOdrr//X+TmH
70GyMiRLL1ld+3DYh/mLrm3arHkZOzG+FD4caa7d9tuM2IbxA/b1RTuYPWee
O8f8gr2U/hw+GtixK6qR2XuH1uQ9EezdY48butJr5JEjR5bEfYa1b9/epkyZ
Yk2aNHHXP/744+48+/n4TD67devmdCm2ePyUPdip/XskxowZk/Yzzf7G2rVr
l/lu8+bNJffoVhcX6dStW9c+/PBDa9q0abnwaGA0fBzSyEIIIb4L4B/xx7c6
uv+v/vd2jfz755uV80eGNes22j1vlmpq9uw9Ub+n09iP1enu/JLBa+Q63Ufa
R59OdPGgOYJHMsIaGXtx3riBtvabKeX12Zxp7tz6JZnlzqU60OnoNPxbK3oO
DRf17jMObKIcFcnLouzFCY0XdaAb5y/IKOM3nU75kuWzuo9UZajIfQhq65xl
K8q9e8If2OnZFxl3jvd/RJ0jTNh+XBGNDN6nmOOCCy6w6667LqGR0cV8xtbs
r8FXecmSJYnw9evXt4MOOsidwz8Cm/Q333yTOL9q1Sr79a9/7c63bNky5bOc
LL9jx45N5CN48I64MNqzJ4QQQiQHbXvLq21S/ubYmrUbEv9vKSpy77qoCrvz
7+zpSO8I+2h8m0e6Ghn4XY3c3NzYtox/A34P+fn5kefxxeBdxFF75wD7MVrW
vw8jHXhf4F//+te0rw/nh98XefbZZ2OvkUYWQgjxXae4eKuzD7/Z4bO0w7zS
ZpDzXa4KaJSa+G0IHbvOwW8G4tcdZ+utqYN2F/4tajQyeh1/lqjf1qgpBg0a
ZIcccohdeumlFQqHXwf7CPktkIqAnwd79b7//e/bnDlzyp3n/RzUAfsPpZGF
EEKIb59v5i+w/Eqs2evQUdWDdkf7Kwpo5I4dO7r3HnNUx298pEuvXr3cOyb8
uzAqwowZM6xTp04VCrN69Wqng8O/PeJBN/t6+Oyz9OfNQgghhKgecpYtl7+F
jh1yzM/ItOycZUnfuyKEEEIIsSNAn8yaO69Eryxydj35XeioyYP25e3HtLuC
FHtKhRBCCCF2FPzWwZJly51uwaasQ0dNHrQz7Mep3rkihBBCCLEzgE0Z31D2
UIXfH6dDR3UctC3amPwrhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQonrYunWr5eXl2bJly2zJkiVpHVy7fv16F1ZUHupyzZo1
7v+ZM2fa5s2bI6+bO3du7LldlZUrV1pmZma1xEXdUEfVFS9t298X2LJli+Xm
5pZp76tWrbKNGzdWKR0hhBBC7Jww5ufk5Dithg5IR/NyDdeiRQgbFWbL0hxb
cNAeiWPR6cdYXrP6NVGEpBRv2GCrXn/BthYXVymedevW2XvvvWcFBQXVlLNS
+vTpY5MmTbJNmzZZnTp1LCsrK/K6evXq2YoVK6o17eoCbbpw4cKU15H/KVOm
JD6PHDnSunbtWi15oC3WrVs37XiT5XnatGn2ySefWFFRkfs8ceJE++CDD9z9
ady4sZsfAs9A7969bdasWdVSBiGEEELsPGA/DtrLKgraGptbmC05S5w2LlyU
YVuysyy3cR33edPkiVXJboUpWrnCpbu1sLBK8axdu7ZGNTIUJ9HxNaGRq2sN
4LPPPrNRo0alvG727NnWoUOHGslDUCOnE2+yPKN70cmwoWSOxX3Pzs52cXK/
evXqlbj2iy++sIEDB1ZDCYQQQgixM4FNDHtYZSGst6uV+X6bRi4O6OesC0+1
vCalOmZt1/aWdf7JtvCoA2z54w8lNOyiM4+zZQ/fZQsP3982jh1lyx+9z5Y/
9oBlnnSoZZ58mOW3bWHZl59nCw7d15bed4tt3bzZhc085XAryi3V+ptnTLPs
y861rUVFLhz5IOyGYYOdzln1yrOWccJPLfO0oyy34QeJ/GFrHla/ruWV5D1M
UCNT3nbt2lnPnj3tww8/tB49elh+fr7NmTPHOnXqlAiDfdHbM7G3d+7c2dkj
W7du7T5DUCO3aNEiMV9Bk7Vp08bef/9969+/v7NhhjUy+Wjfvr3169fP5aNt
27aJeCnn8OHDrUGDBtakSROn5XwYriNftWvXdt81a9bM6TzSIE30IWHQnKNH
jy69d1lZ1qVLl0Ta2IPRmRMmTHBpE7Zbt26xZaU8xEea2GKpx6lTp9rgwYNd
GOzo1CfXtGzZ0mbMmJHIb1Rdhwlq5GC85LtVq1YuLPljPSAqz0GCGpm0fN35
uKk/jzSyEEIIsXuCHThoc5tXoo2+rlXLCrfpkHkleoYD+I5zXOMhLHGECWtk
Pi/8+Q9sff9eVvD1DKeNN44caluWLHZ6ds37b7rr0L7Ln3jYCrMynfbNuf1q
W3z1Rc4WvfL5J0vi3NNp3YKvp7v4NowYYltL9BZpFa1a6eLY9OUXTjO7PC/K
KD1Xop/RwPmtm1rWBb+0woXznU0745gf26bxpTqwYMMGa3bbTbZo8uRy5Qlq
ZMrL/9OnT3c+qthGx44d63xi0V7oNejevbuNGzfO/c/6/5dffunskug3r82C
GhnNho8r9mS0LXZO0h02bJhLL6yRfT4+//zzxHVNtt0bNCxaE82NRsUOjU71
YSaXlBG9CGjZoUOHOj1IWYhj9erVTqeiaZkH4ZeA1vSgM9Hm+CMMGjTI6XE/
14oqK+2E+NC73haPvuzbt2+iHj7++OPEXIM8Ud64ug4T1MjBeDt27OiuLyxp
S9QT8UTlOQg6HN/wMOSbOhg/fnziO+qROYwQQgghdi/C+raiGjkqDvAaefEf
Liy1+x68l+Xcea2z++a1amyZpx5hq2u94o4lN1zmtDCgkQu+2e7fyff5rUvT
2zhmpC0649jEObTzuh5dkmrksK/FsofudOF82titc+u+k7Kewhq5fv3tvtVo
MuycgG7E9opdFJ3nbZ5oNOzKnGOtHvsqRGlktCH2Y+97Qdg4jYwm99eRN67D
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
ffv21q9fP5ePtm3bJuKlnMOHD7cGDRpYkyZNnJbzYbiOfNWuXdt916xZM6fz
SIM00YeEQXOOHj269N5lZVmXLl0SaWMPRmdOmDDBpU3Ybt26xZaV8hAfaWKL
pR6nTp1qgwcPdmGwo1OfXNOyZUubMWNGIr9RdR0mqJGD8ZLvVq1aubDkj/WA
qDwHCWpk0vJ15+Om/jzSyEIIIcTuCXbgoM1tXok2+rpWLSvcpkPmlegZDuA7
znGNh7DEESaskfm88Oc/sPX9e1nB1zOcNt44cqhtWbLY6dk177/prkP7Ln/i
YSvMynTaN+f2q23x1Rc5W/TK558siXNPp3ULvp7u4tswYohtLdFbpFW0aqWL
Y9OXXzjN7PK8KKP0XIl+RgPnt25qWRf80goXznc27YxjfmybxpfqwIING6zZ
bTfZosmTy5UnqJEpL/9Pnz7d+ahiGx07dqzziUV7odege/fuNm7cOPc/6/9f
fvmls0ui37w2C2pkNBs+rtiT0bbYOUl32LBhLr2wRvb5+PzzzxPXNdl2b9Cw
aE00NxoVOzQ61YeZXFJG9CKgZYcOHer0IGUhjtWrVzudiqZlHoRfAlrTg85E
m+OPMGjQIKfH/Vwrqqy0E+JD73pbPPqyb9++iXr4+OOPE3MN8kR54+o6TFAj
B+Pt2LGju76wpC1RT8QTlecg6HB8w8OQb+pg/Pjxie+oR+YwQgghhNi9COvb
imrkqDjAa+TFf7iw1O578F6Wc+e1zu6b16qxZZ56hK2u9Yo7ltxwmdPCgEYu
+Ga7fyff57cuTW/jmJG26IxjE+fQzut6dEmqkcO+FsseutOF82ljt86t+07K
egpr5Pr1t/tWo8mwcwK6EdsrdlF0nrd5otGwK3OOtXrsqxClkdGG2I+97wVh
4zQymtxfR964Dv8Z4kVPogs5sBWj7QjTsGHDMvGQT9KFMWPG2IABA0rrrkRL
Eh9aOk4jQ9hvIa6sYV+LoJZlThD0xcZmjf5MVtdB4jQyecNuTf6C7TTO14I8
UFd+/uChLtD6HN5PGdDtTZs2taVLl5aLSwghhBC7LlH6tjri8Bp5/aB+zl5c
uGBe4lxe03qWdd5Jlv9R88Sx/pPe7hwauTBjQeJap5E7lGosp5HPPmF7utde
UkYjY5N21437PFYj45+x9O4byqS9adKElGUMa+QmgXkCNluv2zIyMpz9Fnul
97PAhor9FP8D9n+hz5JpZPwL0L7evo+tE3tulEYmTPA68ojtGG2KPRTfAH/4
d5I0Cc1x0MhoPUAje98B4g1q5ObNmyfCYJuN0sjJyppMI2PnXrx4ceIcWpR6
SVbXQeI0MvmZN2+es2eThvebiNPIrAVQzqBe937I5D3sj07c+KdUt5+6EEII
IXYsYV+LipKur0UQfBwWHvlD2zx9qvMZXlPnbctv08ydq4xGhozjD7a85g2c
Xl7xz8cSGrm4RNsu+Mn3nH8H5NavbdkXn25Fa1ZbcX6+uxZN7Znau6dtzMst
l+d0NTL1wTl0ll+vR7tiF54/f76zQaLfkmlkrkHvYUflf+y/yXwt8Gvw12GP
JQ/YeUmDd5Oh+z799FOn+yqrkUmb/9Hv2MjxyfUaGZ8FyuHfdxJXVr4j7cJt
85WglkXPEx/hvX3cv2+lKhqZcuNjAvii+LDBPIfBH/mrr75KfMYvAx1MPXD/
CwP7P4P+yMTFvQzboIUQQgix61Fje/a2vfstSiNDbr33LOPYg2zBIXtb9iVn
WeH80nfbLjxsPyvM3P5Orpw7rrG1Hdu4/9Gyi845MXFuyXWX2rqepbba3EYf
On3tfDpuu8r5ciTK+Jd73fcbBg9w9uRlj9zjfJkX/GwfW3r/rVa87R23m0u0
zTvnn2PzRm/XzJ7gu99S6Tbsk+i1oJbCRxftiB7FRormgqBGJoz3eeDdZI0a
NXJp4neAv4H3c06UvyQf2Eax23IdPgXYscHrU7Qm6WJXJj+pNDL2YTQheI3s
34NNXvmMlmdvovfD9flg/2CyslJ37EvkHLodO7PXssxBCI+9nLJ6e2+6Gpl6
Iw8QjJd5BvWKfwk+FH5PYzjPQYJ79rieMgcPyuUJamT8r6kb/55mIYQQQuy6
4LtaFX8LdBtxVAb20BVHvKOgsuDrXBxjw8O+HLQZoouLN22KzFNNwXyisALv
oCO/yX43JKgfN0WUBUivKnOgMOQn6I/rIa/Bd9clK2tUeE9B6D5VB8QXVT/h
PHt4N7Kft6QCn+shQ4aUiVMIIYQQuz7+N0TQuhX9DRHsx3G/ISJqHvaJeT8G
UX3gV4It3Nv041i+fLmNGDHCvQNECCGEELsflf0tasJIHwshhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQO46tW7daXl6eLVu2
zJYsWZLWwbXr1693YUXloS7XrFnj/p85c6Zt3rw58rq5c+fGnttVWblypWVm
ZlZLXNQNdVRd8dK2/X2BLVu2WG5ubpn2vmrVKtu4cWOV0hFCCCHEzgljfk5O
jtNq6IB0NC/XcC1ahLBRYbYszbEFB+2ROBadfozlNatfE0VISvGGDbbq9Rds
a3FxleJZt26dvffee1ZQUFBNOSulT58+NmnSJNu0aZPVqVPHsrKyIq+rV6+e
rVixolrTri7QpgsXLkx5HfmfMmVK4vPIkSOta9eu1ZIH2mLdunXTjjdZnqdN
m2affPKJFRUVuc8TJ060Dz74wN2fxo0bu/kh8Az07t3bZs2aVS1lEEIIIcTO
A/bjoL2soqCtsbmF2ZKzxGnjwkUZtiU7y3Ib13GfN02eWJXsVpiilStculsL
C6sUz9q1a2tUI0NxEh1fExq5utYAPvvsMxs1alTK62bPnm0dOnSokTwENXI6
8SbLM7oXnQwbSuZY3Pfs7GwXJ/erV69eiWu/+OILGzhwYDWUQAghhBA7E9jE
sIdVFsJ6u1qZ77dp5OKAfs668FTLa1KqY9Z2bW9Z559sC486wJY//lBCwy46
8zhb9vBdtvDw/W3j2FG2/NH7bPljD1jmSYda5smHWX7bFpZ9+Xm24NB9bel9
t9jWzZtd2MxTDrei3FKtv3nGNMu+7FzbWlTkwpEPwm4YNtjpnFWvPGsZJ/zU
Mk87ynIbfpDIH7bmYfXrWl5J3sMENTLlbdeunfXs2dM+/PBD69Gjh+Xn59uc
OXOsU6dOiTDYF709E3t7586dnT2ydevW7jMENXKLFi0S8xU0WZs2bez999+3
/v37OxtmWCOTj/bt21u/fv1cPtq2bZuIl3IOHz7cGjRoYE2aNHFazofhOvJV
u3Zt912zZs2cziMN0kQfEgbNOXr06NJ7l5VlXbp0SaSNPRidOWHCBJc2Ybt1
6xZbVspDfKSJLZZ6nDp1qg0ePNiFwY5OfXJNy5YtbcaMGYn8RtV1mKBGDsZL
vlu1auXCkj/WA6LyHCSokUnL152Pm/rzSCMLIYQQuyfYgYM2t3kl2ujrWrWs
cJsOmVeiZziA7zjHNR7CEkeYsEbm88Kf/8DW9+9lBV/PcNp448ihtmXJYqdn
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
P9vHFhy8l2Uce5Ct6965uotQIfJaNbalf7w5rWvXrVtn7733Xpmjffv2FU5z
4sSJTrsAdVa3bt0Kx1HdBPNUWRgbGQcrwsaNG+3999+3Pn362IaSuVMQPrds
2TJxdOnSxWbMmFGlPFYG2vYXX3yxU8zp0oH72LZtW/c/93XAgAFJr2ecz87O
rlRaHTp0sLFjx7r/GzRo4ObKcW16Z2nruwL16tWzFStWJL1m+fLlVr9+/QrH
Hbxn1UG6/Vl1pxvGt7/KMHnyZOvZs2fSawoLC23EiBGJfmDkyJHWtWvXSqUn
hNg1wX5cFa2EtsaeHMXS+2+17EvOsoJZM21rSX+DPl1w0J5WMPebSqdXVSqi
kbF3ooupH8rIsWnTprTT8n1rq1atLCMjw/1fVd1QXbotmKfK8tlnn9moUaMq
FGbOnDnWunXryHPUL9qYemd+Mn36dPc5lXaobtDxpFtcXPytphukIvc5qJHT
CTtmzBinc6qar91RI++oeVFNauTqLlO6/VlN12VNa2Tm7PT/RUVFie92lXmz
EKJ6oI/BblZZCBvVT21ZmlOih/ewgjmzy3y/5t3/2obPBrr/N0+bbIv/cKEt
OHRfW3Lj5bYlO8t9v/zR+2z5Ew9b5q+OtEWnH215LRslwq/t2t6yzj/ZFh51
gC1//CGnvWHRmcfZsofvsoWH728bx46yzVMm2ZLrf+fizrroNNs0uVQThDXy
1hIdNKx+XcvLKb8+7TUya9lB6DMbN26c0MuMXV6j0Pf26NEjYQft1auXi4Mx
EG3CmFKnTh1n6+Mv1/Cdy0tJ/zt8+HDX9zdp0sTZMoH6JX5sGLVr1y6XT2yt
pMdYRb/v88X/8+fPT1zXvHlzNycK54n4sY/369fPPvzwQ5cW6wMwfvz4Mjr4
k08+sa+//tomTJjgrqUM3bp1SytP2C/5TBmov7Ad2Wvkwm33FLp3756wJWO3
/vjjj13+sOl4DUsdDh061Nq0aePyTR1i/+nYsaM7Zs+ebb1793baHF3P/SNs
p06dEmu1q1atctfwPWHIB3+xt3JfKC911LlzZ/vqq69cGK7lHuXn57vP1Iu3
z3JPsZUPGzbM5Yu4vQaKi48w3BvaBjrEl436/+ijj1w9UhbCUAdffvmluyao
kTnPPYWlS5e6+iP9gQMHuvqeNm2a+0x8fBdkyJAhiTaHLwz1RV4pJ22HdMgb
5yAdjUz7GDx4sPtLullZWYk6iGrrQbhPn376qYu7WbNm7tmCuDYJXMe9p203
bdrUzbMgWRsPP7Ph9kuZvU7iWtouWnXQoEEJzRT3fVw8tBPqgzWV/v37u/qJ
0shTpkxx9ePDe42cqg5oe5ST+g7eM875Om3Xrl3Cd4B7TL59XdM2+BymIv1Z
MN24+gnCtdQV8XA/aK9cx/0kLGny/PrnPqiRo8Km6qe9RqYd8Ex98MEHrs3z
mTQaNmzoytqoUSO3XjZ16lTXloE4CU99kW5wvSuujoUQux7YgYP91byS/vjr
WrWscNu4P6+kj+EAvuMc13gIG+X/uH5gX8s85fDEZ/wuilavcgf+yWhTzuc2
/MB9t+Iff7UlN1/prs25/WrLvvy8Es28yNZ2aWcLj/yhFW/caAVfz3DaeOPI
obZlyWLLvuxcW/P+my4MWhhdXZiV6XTz6jdetLxm9a1o1Upb8a+/uTghrJEL
SvLS7LabbNG28TeI18iMs7NmzXIHWoq+l++9xqNPbbytjhi76Muxs9CPMoeg
D0XfEY7xg7CTJk1y2or+3Pe7jIdcixYhTuJhLKV+CUO/jn01COMqfTv2WeJD
QzI+Amud33yz3WbPmIl/YDhPPv7PP//clRld12TbPUaLMi55iB+dRTjGOnRO
eI4VlyfaCmMJ40Z43uHaTEgj8xkdQV2Sb8Y3fAj5Hs1JfQHjGnqBvDO2Mb73
7dvX1RVrvcRJPRIH8REH+ef74PiJZvb3nXPoZ/LMfacMlIWykX/0J+eZt3hd
zLjodRzxEQf3mfzSLhiHIS4+Hwat49sWZRs3bpwrC2UiDuY51C06mroPamT0
NvcP0IPUEdegp2kL1A/3GY0evm+0c68RqV/ahN+j4Ns37dXXezoamTiYv1Cn
o0ePdmHIQ1xbD8J953rs+qSDJqHdxLVJoN0xZ6NuqWc0KPc9WRsPP7PcE8rD
Z66lbmlHtEviQ3eSJ+qXvMd9HxcP5adcvs2SF/IW1siUmXi519xz2qfXyKnq
AH1KGNp58J5xjnZKuoT3vgOsKzCn4J7RFtGFtIEwFenPfLpx9RPE9xm0UfJN
vsgn35MP2gn/04f58ca3v7iwyfrpoEamLnk+uI68+zk/cRGeNkE/wDyOZxDo
z/wzzP0hfX//4upYCLHrEda3FdXIUXHAut4fO9uuZ+m9N1nGMQfagkP2tpXP
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
vLjmmmts6NChZb6fN2+e3X333Xb66afbxRdfXKU87Gg++ugju/rqq6t9/Iuq
u7Vr19oJJ5xg9erVs8mTJ9sbb7xhe+21l3399ddp52nr1q3WsWNHe+KJJ2Lv
W1X573//a7/85S/dGEU7O+igg+yTTz5JKyx6iGPChAnWrVs3+/nPf261atVK
nEcfo1EZw3r16mWnnHKKG+M8+D/tv//+TtdNnTrVmjZtmtB46dQfcZ144onW
v39/l8Y//vEP9xfq169vf/7zn10aw4YNc+Pz7bffXqW6Uj+xe/QTs2fPtoce
esgaNWrkyvvMM8+UOa9+ojw12U8Aeb/uuutsjz32sCVLlkTG06ZNG/u///s/
O/bYYxPfVbWfQAv/4he/cM/yF198YZ9++qn99a9/dXM+IVKxaNkaq911uD3V
sJe922WYzVscP79bv6nAVuatc8/rf9sNtiZ9xybOrdu42fqN295mc1blW5+x
M2zBklXuc/2en1utjkOqLd/MKXkegzBGJ9PIwWcWfc2zmpGR4T5nZmbajTfe
6GxHxxxzjNWuXbtM+BtuuMGNma+++qp73hj3vT2MeSl2FfoUnuPf/e537hrs
F7m5uU43LFy4MBEX+XjhhRfc/2j98847z9nY9t13X3ctx4UXXpi4PlXePIwF
jGNxvPnmm0ltR2iX6hr7SAe98uMf/9j1d/Rr69atq5a4U41r2D/C43tViau7
sHbiPka1wVR56tq1a42NfYceeqibP3pefvllN1alQ7h8jD3XX3994jN6jbHd
07lzZ9eOvY2GMf9f//pX2vEH62/FihUuLjRwOjDGY/etCuondo9+4umnn7bV
q1e7/2ljl156ablr1E+UpSb7CQ9rGHEamefgJz/5iWtfQY0cFX9F+gnqFPtx
Ta0biN2XVfnr7br/tHTaePysTKvdbYRd9UJzW7o6P/L6oVPm2judh1pRSXu9
8eXWtmzN2sS5l1sPtLv+1979z/ecr1eii++p1cFGTJ3n4rz+pfTXbpLBmHP/
/feX+z6VHTk49r3zzju29957u/WgTZs2ufWle++91+bOnevioM8O9hecP/fc
c+23v/2tmycPGjTIPZvwgx/8wG666Sa3jsTzj63sggsucOvOq1atct998803
ibhYk/L5X79+vVuLfvbZZ90aEf9zsKYG6eTNk2rsS3W+Osc+NMLzzz/v5jGj
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
MpeNG/sIx/ry9773vcQ8Pmwfom/HF+/73/++8ytkvPO+t6ny5qnsXhzWN+m3
gkfYDw27DH5enKPPSQX70xnL6XPQDb7/rWyc9InsscZ/k/drsg7Ie35Y2/Tv
+PEkG0cqWg5PVN1hC8F+Ea67qPXJmtyLE3zXWhSMG7yfmHbK2MBYEl4Ppo2S
d/ZQBcFeGC4fB+9ggg4dOrh1Ud6lwP1+6qmnyowx7DX74x//6MaoH/3oR85P
gHES0qk/fArR2OSbMQwfWz/u4uOBvw3neDawYQ0ePLhM/it6v9VP7Nr9BDob
HYjvLW2ROQPv/Ir6/VX1E2WpyX6CeVXUefw6woQ1clX7CcBHCX8MngvaLP1W
kMreb/HdYHPBFudPvCW0flJcvNXZkctcW7jFCkqeG7QzfhPJWLN2+/sHiZt3
XVQX/h1LQarjd/aYgyZ7v3ll4Xn1+9uTwTXMb6N82lLlLdXYx9gf9K+sKLxb
Cj2U7rvX2YcTZceqSpzBd2PFgc0ZDV1daUJV6y5VnmrynU4e7DvJ3quVTvuM
At3GHtqwTTEI6ca9EzUdaPtR++AAGxB72uPWuCtzv9PJj/qJaHZkP4Evyscf
f+z+p01ErTN51E9EU1P9xLdBsn6CZyvumYGa6CfEdxO0M/bhNzt8lvribbzS
ZpDzXa4u6OPD70P8rv8WNWMfdjSe9Siwt+Ivx36MisKeKNZXH3/88apms0bj
ZN0fW0hwHa060qxK3aXKEzYe/DBreuz7LlITbWxXZ3fuJ3g/cdxzFkT9hAii
fkJ8F/iua2R+Q6hOnTrl1pGC0Hcn2zMSB+/K5B206ewJ2pFxsuckmU2qKmlW
tu6S5Yl8cM84/O9UiOqjJtrYro76CfUToizqJ8R3ge+6RhZCCCGEECIMa1Xs
5xNCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQux9PPvmkjR49ekdnQwixg1FfIIQQOzdXXHGF7bnnnu44
4IAD7KKLLrIxY8bs6GwlWLBggX344YdViiMrK8uNRVOmTIm9ZuPGjTZnzpwy
323YsMH69OljDz74oP3973+vUh48xx9/vHXu3Lla4qoIM2fOtC1bttRI3FF1
N2nSJLvlllvs6KOPtvPPP9969OhR4TxxzzjWrFlT7XmGoqIie+mll+zkk0+2
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
knBNNQ==
     "], {{0, 595.}, {713., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->72],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{713., 595.},
   PlotRange->{{0, 713.}, {0, 595.}}]], "Print",ExpressionUUID->
  "9d6ae662-cbb0-46e2-9a98-4fd8bac5c92a"]
}], "ReviewerComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "Signature" -> 
   "OEM6eJxLYywWcMlMzyxJzAnOTM9LLCktSnVk0w1mCaksSA3mdc3JySwoyUx2Li0qS9UN5gTTfo\
m5qcGcxanJBUamZtmGusG8cK1gXQJ++XkuqSWpRbmZeZnFQN1AFR6JxRmZeem+qSUZ+\
SnBbMEejkC9usGMQU4KfNOfaU43XrPJ8cnEO/oZnLXHdde7a6xZE8mm8OhKb3KGAVBVsJOCb/\
Xr4hOMV0qO/TrbbNxox3RywteWj8LrT3ixKs7YOV99BgAfqEy7"},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
         TemplateBox[{"\"bobs@wolfram.com\""}, 
          "ReviewerCommentLabelTemplate"], ShowStringCharacters -> False, 
         StripOnInput -> False], 3.81583929707281`16.334165065395332*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.8158392973816843`*^9, 3.815839322595747*^9}},
 CellTags->{"CommentCell", "ReviewerComment"},
 CellID->953846439,ExpressionUUID->"44a7c20a-bd99-4762-9b0e-bd3bb8b86952"],

Cell[TextData[{
 "Thanks for pointing this out. Now error handling has been added using a ",
 Cell[BoxData[
  FormBox["Message", TraditionalForm]],ExpressionUUID->
  "f030d0de-32ee-48d2-9fa9-ebd3691e730e"],
 "-based approach."
}], "AuthorComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "Signature" -> 
   "OEM6eJxLYywWcMlMzyxJzAnOTM9LLCktSnVk0w1mCaksSA3mdc3JySwoyUx2Li0qS9UN5gTTfo\
m5qcGcxanJBUamZtmGusG8cK1gXQJ++XkuqSWpRbmZeZnFQN1AFR6JxRmZeem+qSUZ+\
SnBbMEejkC9usGMQU4KvJtOmV+p/He4PFbrtd/ewjkp65tXMf3eVHPLlvt2860J1kBVwU4K7ge/\
MuWtWH4s6U/25Nz/vY01ZRsW7nOb89atKujfznP27gC+tlEG"},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
        "\"sunting.05@gmail.com\"", ShowStringCharacters -> False, 
         StripOnInput -> False], 3.816174587966486`16.334203224389075*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellTags->{"AuthorComment", "CommentCell"},
 CellID->524274578,ExpressionUUID->"8fc348ba-b78b-4830-b38b-4a4837f6c766"],

Cell["\<\
You should use ResourceFunctionMessage in place of Message, so that the \
message is well-formatted for the resource system.\
\>", "ReviewerComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "Signature" -> 
   "OEM6eJxLYywWcMlMzyxJzAnOTM9LLCktSnVk0w1mCaksSA3mdc3JySwoyUx2Li0qS9UN5gTTfo\
m5qcGcxanJBUamZtmGusG8cK1gXQJ++XkuqSWpRbmZeZnFQN1AFR6JxRmZeem+qSUZ+\
SnBbMEejkC9usGMQU4KXN9fZBTFOsiskIksK//\
7ca7cSjdfN6O5jh55HLUNXJPTgaqCnRQip9y1SNl1L/T+QrH+T+fvRF7i+Reg78Q1qVPziUn/\
vFlhAOiIS3A="},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
         TemplateBox[{"\"pacoj@wolfram.com\""}, 
          "ReviewerCommentLabelTemplate"], ShowStringCharacters -> False, 
         StripOnInput -> False], 3.8166051587836906`17.334252222142553*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.816605169178111*^9, 3.816605203973996*^9}},
 CellTags->{"CommentCell", "ReviewerComment"},
 CellID->463765816,ExpressionUUID->"83b0112f-826b-4ceb-84e7-913de93a0485"],

Cell["The suggested function has been used; thanks!", "AuthorComment",
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
        "\"sunting.05@gmail.com\"", ShowStringCharacters -> False, 
         StripOnInput -> False], 3.816607862830592`16.334252529838054*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellTags->{"AuthorComment", "CommentCell"},
 CellID->668775811,ExpressionUUID->"e963c924-4551-44e4-8e64-cc81ba1fc80c"],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 CellLabel->"In[10]:=",
 CellID->462042388,ExpressionUUID->"65d934e6-3585-4d2a-b830-5e450e3b85ae"],

Cell[TextData[{
 "Transpose a simple nested ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Association", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Association",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f277c0de-38ec-4c9a-b464-3b05628dd0e8"],
 ":"
}], "Text",
 CellChangeTimes->{{3.815838823104166*^9, 3.8158388344882193`*^9}},
 CellID->1130986996,ExpressionUUID->"882c5f3a-e5e5-4325-9d9d-fa01c1d4ad3a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationTranspose", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"1", "\[Rule]", 
     RowBox[{"<|", 
      RowBox[{"a", "\[Rule]", "x"}], "|>"}]}], ",", 
    RowBox[{"2", "\[Rule]", 
     RowBox[{"<|", 
      RowBox[{"a", "\[Rule]", "y"}], "|>"}]}]}], "|>"}], "]"}]], "Input",
 CellLabel->"In[373]:=",
 CellID->1925016700,ExpressionUUID->"c791bc61-5eab-4073-823f-b8bb084f6984"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"a", "\[Rule]", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "x"}], ",", 
     RowBox[{"2", "\[Rule]", "y"}]}], "\[RightAssociation]"}]}], 
  "\[RightAssociation]"}]], "Output",
 TaggingRules->{},
 CellLabel->"Out[373]=",
 CellID->46495381,ExpressionUUID->"1b9725fe-c9ef-4ac2-a545-5fdb296f441f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scope", "Subsection",
 CellLabel->"In[2]:=",
 CellID->964056545,ExpressionUUID->"8f215134-7a33-4e6e-9852-1b699f5ed930"],

Cell[TextData[{
 "Create a nested ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Association", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Association",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "1110de23-85c6-47cc-8e37-cd5231b72c1f"],
 " with three levels:"
}], "Text",
 TaggingRules->{},
 CellID->13078159,ExpressionUUID->"dbeb9395-a5eb-4bae-9556-9d28f3fe7b53"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"asc", "=", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<AssociationKeyDeflatten\>\"", "]"}],
     "@", 
    RowBox[{"AssociationThread", "[", 
     RowBox[{
      RowBox[{"Tuples", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", "3", "]"}], ",", 
         RowBox[{"CharacterRange", "[", 
          RowBox[{"\"\<a\>\"", ",", "\"\<d\>\""}], "]"}], ",", 
         RowBox[{"CharacterRange", "[", 
          RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<\[Beta]\>\""}], "]"}]}], 
        "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"1", ",", "24"}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dataset", "[", "asc", "]"}]}], "Input",
 CellLabel->"In[379]:=",
 CellID->1387338217,ExpressionUUID->"5f8ce14c-5d55-45b6-8d3c-e2094fc879c7"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      1 -> Association[
        "a" -> Association[
          "\[Alpha]" -> 0.012773794315536824`, "\[Beta]" -> 
           0.02729488718662698], "b" -> 
         Association[
          "\[Alpha]" -> 0.19607374457183857`, "\[Beta]" -> 
           0.4454126720385747], "c" -> 
         Association[
          "\[Alpha]" -> 0.5438479981793103, "\[Beta]" -> 0.7094324458762333], 
         "d" -> Association[
          "\[Alpha]" -> 0.5234066462782068, "\[Beta]" -> 0.4898871898717154]],
        2 -> 
       Association[
        "a" -> Association[
          "\[Alpha]" -> 0.825565059737831, "\[Beta]" -> 0.4490096277207454], 
         "b" -> Association[
          "\[Alpha]" -> 0.23823887678836608`, "\[Beta]" -> 
           0.8825790766029258], "c" -> 
         Association[
          "\[Alpha]" -> 0.27711590557098464`, "\[Beta]" -> 
           0.8931821912287607], "d" -> 
         Association[
          "\[Alpha]" -> 0.29978258233835087`, "\[Beta]" -> 
           0.21783296600256907`]], 3 -> 
       Association[
        "a" -> Association[
          "\[Alpha]" -> 0.3571753355675533, "\[Beta]" -> 
           0.13404915829838626`], "b" -> 
         Association[
          "\[Alpha]" -> 0.05971214775003619, "\[Beta]" -> 0.4630481625459393],
          "c" -> Association[
          "\[Alpha]" -> 0.8837594928251273, "\[Beta]" -> 0.8993894891143113], 
         "d" -> Association[
          "\[Alpha]" -> 0.31576284686906586`, "\[Beta]" -> 
           0.015164209029963072`]]], "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[30]} -> 1, {All, "a"} -> 
        Association[{All, "a", "\[Alpha]"} -> 1, {All, "a", "\[Beta]"} -> 
          1], {All, "b"} -> 
        Association[{All, "b", "\[Alpha]"} -> 1, {All, "b", "\[Beta]"} -> 
          1], {All, "c"} -> 
        Association[{All, "c", "\[Alpha]"} -> 1, {All, "c", "\[Beta]"} -> 
          1], {All, "d"} -> 
        Association[{All, "d", "\[Alpha]"} -> 1, {All, "d", "\[Beta]"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association["a" -> TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`RowShape[
                Association[
                "\[Alpha]" -> TypeSystem`PackageScope`AtomShape[60], 
                 "\[Beta]" -> TypeSystem`PackageScope`AtomShape[60]]], 
               DirectedInfinity[1], 2, {All, "a"}], "b" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`RowShape[
                Association[
                "\[Alpha]" -> TypeSystem`PackageScope`AtomShape[60], 
                 "\[Beta]" -> TypeSystem`PackageScope`AtomShape[60]]], 
               DirectedInfinity[1], 2, {All, "b"}], "c" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`RowShape[
                Association[
                "\[Alpha]" -> TypeSystem`PackageScope`AtomShape[60], 
                 "\[Beta]" -> TypeSystem`PackageScope`AtomShape[60]]], 
               DirectedInfinity[1], 2, {All, "c"}], "d" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`RowShape[
                Association[
                "\[Alpha]" -> TypeSystem`PackageScope`AtomShape[60], 
                 "\[Beta]" -> TypeSystem`PackageScope`AtomShape[60]]], 
               DirectedInfinity[1], 2, {All, "d"}]]], 
           DirectedInfinity[1], 4, {All}]]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"a", "b", "c", "d"}, {
         TypeSystem`Struct[{"\[Alpha]", "\[Beta]"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Struct[{"\[Alpha]", "\[Beta]"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Struct[{"\[Alpha]", "\[Beta]"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Struct[{"\[Alpha]", "\[Beta]"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real]}]}], 3], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[30]} -> 1, {All, "a"} -> 
        Association[{All, "a", "\[Alpha]"} -> 1, {All, "a", "\[Beta]"} -> 
          1], {All, "b"} -> 
        Association[{All, "b", "\[Alpha]"} -> 1, {All, "b", "\[Beta]"} -> 
          1], {All, "c"} -> 
        Association[{All, "c", "\[Alpha]"} -> 1, {All, "c", "\[Beta]"} -> 
          1], {All, "d"} -> 
        Association[{All, "d", "\[Alpha]"} -> 1, {All, "d", "\[Beta]"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association["a" -> TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`RowShape[
                Association[
                "\[Alpha]" -> TypeSystem`PackageScope`AtomShape[60], 
                 "\[Beta]" -> TypeSystem`PackageScope`AtomShape[60]]], 
               DirectedInfinity[1], 2, {All, "a"}], "b" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`RowShape[
                Association[
                "\[Alpha]" -> TypeSystem`PackageScope`AtomShape[60], 
                 "\[Beta]" -> TypeSystem`PackageScope`AtomShape[60]]], 
               DirectedInfinity[1], 2, {All, "b"}], "c" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`RowShape[
                Association[
                "\[Alpha]" -> TypeSystem`PackageScope`AtomShape[60], 
                 "\[Beta]" -> TypeSystem`PackageScope`AtomShape[60]]], 
               DirectedInfinity[1], 2, {All, "c"}], "d" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`RowShape[
                Association[
                "\[Alpha]" -> TypeSystem`PackageScope`AtomShape[60], 
                 "\[Beta]" -> TypeSystem`PackageScope`AtomShape[60]]], 
               DirectedInfinity[1], 2, {All, "d"}]]], 
           DirectedInfinity[1], 4, {All}]]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"a", "b", "c", "d"}, {
         TypeSystem`Struct[{"\[Alpha]", "\[Beta]"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Struct[{"\[Alpha]", "\[Beta]"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Struct[{"\[Alpha]", "\[Beta]"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Struct[{"\[Alpha]", "\[Beta]"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real]}]}], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 4, "DataRowCount" -> 
     3, "DataColumnCount" -> 4, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["a", 
                  Style[
                  "a", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "a"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "a"},
                 "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["b", 
                  Style[
                  "b", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "b"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "b"},
                 "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["c", 
                  Style[
                  "c", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "c"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "c"},
                 "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["d", 
                  Style[
                  "d", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "d"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "d"},
                 "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], 
            SpanFromLeft}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Alpha]", 
                  Style[
                  "\[Alpha]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "a", "\[Alpha]"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "a", "\[Alpha]"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Beta]", 
                  Style[
                  "\[Beta]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "a", "\[Beta]"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "a", "\[Beta]"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Alpha]", 
                  Style[
                  "\[Alpha]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "b", "\[Alpha]"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "b", "\[Alpha]"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Beta]", 
                  Style[
                  "\[Beta]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "b", "\[Beta]"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "b", "\[Beta]"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Alpha]", 
                  Style[
                  "\[Alpha]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "c", "\[Alpha]"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "c", "\[Alpha]"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Beta]", 
                  Style[
                  "\[Beta]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "c", "\[Beta]"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "c", "\[Beta]"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Alpha]", 
                  Style[
                  "\[Alpha]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "d", "\[Alpha]"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "d", "\[Alpha]"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Beta]", 
                  Style[
                  "\[Beta]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "d", "\[Beta]"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "d", "\[Beta]"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0127738"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["a"], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0272949"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["a"], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.196074"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["b"], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.445413"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["b"], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.543848"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["c"], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.709432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["c"], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.523407"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["d"], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.489887"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["d"], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.825565"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["a"], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.44901"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["a"], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.238239"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["b"], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.882579"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["b"], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.277116"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["c"], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.893182"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["c"], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.299783"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["d"], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.217833"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["d"], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.357175"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["a"], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.134049"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["a"], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0597121"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["b"], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.463048"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["b"], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.883759"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["c"], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.899389"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["c"], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.315763"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["d"], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0151642"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["d"], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{627., {78.134033203125, 83.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{627., {78.134033203125, 83.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{"Magnified" -> True},
 CellLabel->"Out[380]=",
 CellID->197182350,ExpressionUUID->"1d1c7a59-8a14-4290-a807-3133b14d7f0d"]
}, Open  ]],

Cell[TextData[{
 "Transpose an ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Association", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Association",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "d704c4a0-e031-43bd-aff7-8f991d2f48e2"],
 " of three levels using different permutations:"
}], "Text",
 TaggingRules->{},
 CellID->649685796,ExpressionUUID->"50e85d3b-d1f5-44ee-8be9-c33f6126d38b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", 
  RowBox[{"AssociationTranspose", "[", "asc", "]"}]}]], "Input",
 CellLabel->"In[382]:=",
 CellID->561772644,ExpressionUUID->"76df7817-b023-4463-be16-a0c21237c778"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "a" -> Association[
        1 -> Association[
          "\[Alpha]" -> 0.012773794315536824`, "\[Beta]" -> 
           0.02729488718662698], 2 -> 
         Association[
          "\[Alpha]" -> 0.825565059737831, "\[Beta]" -> 0.4490096277207454], 
         3 -> Association[
          "\[Alpha]" -> 0.3571753355675533, "\[Beta]" -> 
           0.13404915829838626`]], "b" -> 
       Association[
        1 -> Association[
          "\[Alpha]" -> 0.19607374457183857`, "\[Beta]" -> 
           0.4454126720385747], 2 -> 
         Association[
          "\[Alpha]" -> 0.23823887678836608`, "\[Beta]" -> 
           0.8825790766029258], 3 -> 
         Association[
          "\[Alpha]" -> 0.05971214775003619, "\[Beta]" -> 
           0.4630481625459393]], "c" -> 
       Association[
        1 -> Association[
          "\[Alpha]" -> 0.5438479981793103, "\[Beta]" -> 0.7094324458762333], 
         2 -> Association[
          "\[Alpha]" -> 0.27711590557098464`, "\[Beta]" -> 
           0.8931821912287607], 3 -> 
         Association[
          "\[Alpha]" -> 0.8837594928251273, "\[Beta]" -> 0.8993894891143113]],
        "d" -> Association[
        1 -> Association[
          "\[Alpha]" -> 0.5234066462782068, "\[Beta]" -> 0.4898871898717154], 
         2 -> Association[
          "\[Alpha]" -> 0.29978258233835087`, "\[Beta]" -> 
           0.21783296600256907`], 3 -> 
         Association[
          "\[Alpha]" -> 0.31576284686906586`, "\[Beta]" -> 
           0.015164209029963072`]]], "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[32]} -> 1, {All, All, 
          TypeSystem`PackageScope`KeyDummy[31]} -> 1, {All, All, "\[Alpha]"} -> 
        1, {All, All, "\[Beta]"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[34], 
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "\[Alpha]" -> TypeSystem`PackageScope`AtomShape[60], "\[Beta]" -> 
                TypeSystem`PackageScope`AtomShape[60]]], 
              DirectedInfinity[1], 2, {All, All}]]], 3, 
           DirectedInfinity[1], {All}]]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Assoc[
        TypeSystem`Atom[Integer], 
        TypeSystem`Struct[{"\[Alpha]", "\[Beta]"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 3], 4], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[32]} -> 1, {All, All, 
          TypeSystem`PackageScope`KeyDummy[31]} -> 1, {All, All, "\[Alpha]"} -> 
        1, {All, All, "\[Beta]"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[34], 
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "\[Alpha]" -> TypeSystem`PackageScope`AtomShape[60], "\[Beta]" -> 
                TypeSystem`PackageScope`AtomShape[60]]], 
              DirectedInfinity[1], 2, {All, All}]]], 3, 
           DirectedInfinity[1], {All}]]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Assoc[
        TypeSystem`Atom[Integer], 
        TypeSystem`Struct[{"\[Alpha]", "\[Beta]"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 3], 4], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     4, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Alpha]", 
                  Style[
                  "\[Alpha]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "\[Alpha]"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "\[Alpha]"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Beta]", 
                  Style[
                  "\[Beta]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "\[Beta]"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "\[Beta]"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["a", 
                  Style[
                  "a", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["a"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["a"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["a"], 
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["a"], 
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0127738"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["a"], 
                 Key[1], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0272949"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["a"], 
                 Key[1], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["a"], 
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["a"], 
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.825565"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["a"], 
                 Key[2], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.44901"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["a"], 
                 Key[2], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["a"], 
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["a"], 
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.357175"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["a"], 
                 Key[3], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.134049"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["a"], 
                 Key[3], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["b", 
                  Style[
                  "b", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["b"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["b"], 
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b"], 
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.196074"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b"], 
                 Key[1], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.445413"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b"], 
                 Key[1], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["b"], 
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b"], 
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.238239"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b"], 
                 Key[2], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.882579"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b"], 
                 Key[2], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["b"], 
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b"], 
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0597121"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b"], 
                 Key[3], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.463048"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b"], 
                 Key[3], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["c", 
                  Style[
                  "c", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["c"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["c"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["c"], 
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["c"], 
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.543848"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["c"], 
                 Key[1], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.709432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["c"], 
                 Key[1], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["c"], 
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["c"], 
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.277116"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["c"], 
                 Key[2], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.893182"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["c"], 
                 Key[2], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["c"], 
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["c"], 
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.883759"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["c"], 
                 Key[3], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.899389"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["c"], 
                 Key[3], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["d", 
                  Style[
                  "d", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["d"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["d"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["d"], 
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["d"], 
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.523407"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["d"], 
                 Key[1], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.489887"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["d"], 
                 Key[1], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["d"], 
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["d"], 
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.299783"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["d"], 
                 Key[2], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.217833"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["d"], 
                 Key[2], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["d"], 
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["d"], 
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.315763"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["d"], 
                 Key[3], 
                 Key["\[Alpha]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0151642"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["d"], 
                 Key[3], 
                 Key["\[Beta]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{246., {178.134033203125, 183.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{246., {178.134033203125, 183.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[382]=",
 CellID->1258173164,ExpressionUUID->"7ce98805-1ab4-4116-839e-ff61a0349e3b"]
}, Open  ]],

Cell[TextData[{
 "The examples below all fail for me:\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
q8v/Al5ea2I=
     "], {{0, 336.}, {745., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->72],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{745., 336.},
   PlotRange->{{0, 745.}, {0, 336.}}]], "Print",ExpressionUUID->
  "3e496cac-192a-4e23-8d34-16258ebdc8d7"]
}], "ReviewerComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "Signature" -> 
   "OEM6eJxLYywWcMlMzyxJzAnOTM9LLCktSnVk0w1mCaksSA3mdc3JySwoyUx2Li0qS9UN5gTTfo\
m5qcGcxanJBUamZtmGusG8cK1gXQJ++XkuqSWpRbmZeZnFQN1AFR6JxRmZeem+qSUZ+\
SnBbMEejkC9usGMQU4Kk2vNb51ZOCGtPc7g9ax/R+rL6gq79Tdnbj7eJ+s96f3yP0BVwU4KAvOv+\
a2IZ3hzI3dXhbB1zPX9/k6ruBKaL9/4K7fmlVfedwC25lBA"},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
         TemplateBox[{"\"pacoj@wolfram.com\""}, 
          "ReviewerCommentLabelTemplate"], ShowStringCharacters -> False, 
         StripOnInput -> False], 3.816605056229041`17.33425221047278*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.816605057194567*^9, 3.816605069428931*^9}},
 CellTags->{"CommentCell", "ReviewerComment"},
 CellID->44787858,ExpressionUUID->"1484c40a-39ca-4846-9e76-1a1d4c0978b6"],

Cell["fixed.", "AuthorComment",
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
        "\"sunting.05@gmail.com\"", ShowStringCharacters -> False, 
         StripOnInput -> False], 3.816607904544469`16.334252534584703*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellTags->{"AuthorComment", "CommentCell"},
 CellID->1980034589,ExpressionUUID->"1f8eec77-9452-4c3d-9098-7cdd9afcf764"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", 
  RowBox[{"AssociationTranspose", "[", 
   RowBox[{"asc", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[383]:=",
 CellID->836153427,ExpressionUUID->"8526cbb2-16e3-49d1-bdfc-ddc967fe77be"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "\[Alpha]" -> 
       Association[
        1 -> Association[
          "a" -> 0.012773794315536824`, "b" -> 0.19607374457183857`, "c" -> 
           0.5438479981793103, "d" -> 0.5234066462782068], 2 -> 
         Association[
          "a" -> 0.825565059737831, "b" -> 0.23823887678836608`, "c" -> 
           0.27711590557098464`, "d" -> 0.29978258233835087`], 3 -> 
         Association[
          "a" -> 0.3571753355675533, "b" -> 0.05971214775003619, "c" -> 
           0.8837594928251273, "d" -> 0.31576284686906586`]], "\[Beta]" -> 
       Association[
        1 -> Association[
          "a" -> 0.02729488718662698, "b" -> 0.4454126720385747, "c" -> 
           0.7094324458762333, "d" -> 0.4898871898717154], 2 -> 
         Association[
          "a" -> 0.4490096277207454, "b" -> 0.8825790766029258, "c" -> 
           0.8931821912287607, "d" -> 0.21783296600256907`], 3 -> 
         Association[
          "a" -> 0.13404915829838626`, "b" -> 0.4630481625459393, "c" -> 
           0.8993894891143113, "d" -> 0.015164209029963072`]]], 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[34]} -> 1, {All, All, 
          TypeSystem`PackageScope`KeyDummy[33]} -> 1, {All, All, "a"} -> 
        1, {All, All, "b"} -> 1, {All, All, "c"} -> 1, {All, All, "d"} -> 1], 
       
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[34], 
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "a" -> TypeSystem`PackageScope`AtomShape[60], "b" -> 
                TypeSystem`PackageScope`AtomShape[60], "c" -> 
                TypeSystem`PackageScope`AtomShape[60], "d" -> 
                TypeSystem`PackageScope`AtomShape[60]]], 
              DirectedInfinity[1], 4, {All, All}]]], 3, 
           DirectedInfinity[1], {All}]]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Assoc[
        TypeSystem`Atom[Integer], 
        TypeSystem`Struct[{"a", "b", "c", "d"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 3], 2], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[34]} -> 1, {All, All, 
          TypeSystem`PackageScope`KeyDummy[33]} -> 1, {All, All, "a"} -> 
        1, {All, All, "b"} -> 1, {All, All, "c"} -> 1, {All, All, "d"} -> 1], 
       
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[34], 
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "a" -> TypeSystem`PackageScope`AtomShape[60], "b" -> 
                TypeSystem`PackageScope`AtomShape[60], "c" -> 
                TypeSystem`PackageScope`AtomShape[60], "d" -> 
                TypeSystem`PackageScope`AtomShape[60]]], 
              DirectedInfinity[1], 4, {All, All}]]], 3, 
           DirectedInfinity[1], {All}]]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Assoc[
        TypeSystem`Atom[Integer], 
        TypeSystem`Struct[{"a", "b", "c", "d"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 3], 2], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 4, "DataRowCount" -> 
     2, "DataColumnCount" -> 4, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["a", 
                  Style[
                  "a", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "a"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "a"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["b", 
                  Style[
                  "b", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "b"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "b"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["c", 
                  Style[
                  "c", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "c"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "c"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["d", 
                  Style[
                  "d", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "d"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "d"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Alpha]", 
                  Style[
                  "\[Alpha]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[Alpha]"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[Alpha]"], 
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]"], 
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0127738"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]"], 
                 Key[1], 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.196074"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]"], 
                 Key[1], 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.543848"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]"], 
                 Key[1], 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.523407"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]"], 
                 Key[1], 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[Alpha]"], 
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]"], 
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.825565"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]"], 
                 Key[2], 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.238239"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]"], 
                 Key[2], 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.277116"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]"], 
                 Key[2], 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.299783"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]"], 
                 Key[2], 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[Alpha]"], 
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]"], 
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.357175"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]"], 
                 Key[3], 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0597121"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]"], 
                 Key[3], 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.883759"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]"], 
                 Key[3], 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.315763"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]"], 
                 Key[3], 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Beta]", 
                  Style[
                  "\[Beta]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[Beta]"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Beta]"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[Beta]"], 
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Beta]"], 
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0272949"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Beta]"], 
                 Key[1], 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.445413"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Beta]"], 
                 Key[1], 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.709432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Beta]"], 
                 Key[1], 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.489887"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Beta]"], 
                 Key[1], 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[Beta]"], 
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Beta]"], 
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.44901"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Beta]"], 
                 Key[2], 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.882579"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Beta]"], 
                 Key[2], 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.893182"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Beta]"], 
                 Key[2], 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.217833"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Beta]"], 
                 Key[2], 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[Beta]"], 
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Beta]"], 
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.134049"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Beta]"], 
                 Key[3], 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.463048"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Beta]"], 
                 Key[3], 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.899389"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Beta]"], 
                 Key[3], 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0151642"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Beta]"], 
                 Key[3], 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{387., {103.134033203125, 108.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{387., {103.134033203125, 108.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{"Magnified" -> True},
 CellLabel->"Out[383]=",
 CellID->140698431,ExpressionUUID->"1a88c8c2-2b50-4536-9391-bc6b301cb556"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", 
  RowBox[{"AssociationTranspose", "[", 
   RowBox[{"asc", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[384]:=",
 CellID->1878883440,ExpressionUUID->"e56ef248-03f5-4ba1-83e3-de13126ee7e6"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      1 -> Association[
        "\[Alpha]" -> 
         Association[
          "a" -> 0.012773794315536824`, "b" -> 0.19607374457183857`, "c" -> 
           0.5438479981793103, "d" -> 0.5234066462782068], "\[Beta]" -> 
         Association[
          "a" -> 0.02729488718662698, "b" -> 0.4454126720385747, "c" -> 
           0.7094324458762333, "d" -> 0.4898871898717154]], 2 -> 
       Association[
        "\[Alpha]" -> 
         Association[
          "a" -> 0.825565059737831, "b" -> 0.23823887678836608`, "c" -> 
           0.27711590557098464`, "d" -> 0.29978258233835087`], "\[Beta]" -> 
         Association[
          "a" -> 0.4490096277207454, "b" -> 0.8825790766029258, "c" -> 
           0.8931821912287607, "d" -> 0.21783296600256907`]], 3 -> 
       Association[
        "\[Alpha]" -> 
         Association[
          "a" -> 0.3571753355675533, "b" -> 0.05971214775003619, "c" -> 
           0.8837594928251273, "d" -> 0.31576284686906586`], "\[Beta]" -> 
         Association[
          "a" -> 0.13404915829838626`, "b" -> 0.4630481625459393, "c" -> 
           0.8993894891143113, "d" -> 0.015164209029963072`]]], 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[35]} -> 1, {All, "\[Alpha]"} -> 
        Association[{All, "\[Alpha]", "a"} -> 1, {All, "\[Alpha]", "b"} -> 
          1, {All, "\[Alpha]", "c"} -> 1, {All, "\[Alpha]", "d"} -> 1], {
         All, "\[Beta]"} -> 
        Association[{All, "\[Beta]", "a"} -> 1, {All, "\[Beta]", "b"} -> 
          1, {All, "\[Beta]", "c"} -> 1, {All, "\[Beta]", "d"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association["\[Alpha]" -> TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`RowShape[
                Association[
                "a" -> TypeSystem`PackageScope`AtomShape[60], "b" -> 
                 TypeSystem`PackageScope`AtomShape[60], "c" -> 
                 TypeSystem`PackageScope`AtomShape[60], "d" -> 
                 TypeSystem`PackageScope`AtomShape[60]]], 
               DirectedInfinity[1], 4, {All, "\[Alpha]"}], "\[Beta]" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`RowShape[
                Association[
                "a" -> TypeSystem`PackageScope`AtomShape[60], "b" -> 
                 TypeSystem`PackageScope`AtomShape[60], "c" -> 
                 TypeSystem`PackageScope`AtomShape[60], "d" -> 
                 TypeSystem`PackageScope`AtomShape[60]]], 
               DirectedInfinity[1], 4, {All, "\[Beta]"}]]], 
           DirectedInfinity[1], 2, {All}]]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"\[Alpha]", "\[Beta]"}, {
         TypeSystem`Struct[{"a", "b", "c", "d"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Struct[{"a", "b", "c", "d"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real]}]}], 3], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[35]} -> 1, {All, "\[Alpha]"} -> 
        Association[{All, "\[Alpha]", "a"} -> 1, {All, "\[Alpha]", "b"} -> 
          1, {All, "\[Alpha]", "c"} -> 1, {All, "\[Alpha]", "d"} -> 1], {
         All, "\[Beta]"} -> 
        Association[{All, "\[Beta]", "a"} -> 1, {All, "\[Beta]", "b"} -> 
          1, {All, "\[Beta]", "c"} -> 1, {All, "\[Beta]", "d"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association["\[Alpha]" -> TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`RowShape[
                Association[
                "a" -> TypeSystem`PackageScope`AtomShape[60], "b" -> 
                 TypeSystem`PackageScope`AtomShape[60], "c" -> 
                 TypeSystem`PackageScope`AtomShape[60], "d" -> 
                 TypeSystem`PackageScope`AtomShape[60]]], 
               DirectedInfinity[1], 4, {All, "\[Alpha]"}], "\[Beta]" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`RowShape[
                Association[
                "a" -> TypeSystem`PackageScope`AtomShape[60], "b" -> 
                 TypeSystem`PackageScope`AtomShape[60], "c" -> 
                 TypeSystem`PackageScope`AtomShape[60], "d" -> 
                 TypeSystem`PackageScope`AtomShape[60]]], 
               DirectedInfinity[1], 4, {All, "\[Beta]"}]]], 
           DirectedInfinity[1], 2, {All}]]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"\[Alpha]", "\[Beta]"}, {
         TypeSystem`Struct[{"a", "b", "c", "d"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Struct[{"a", "b", "c", "d"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real]}]}], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     3, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Alpha]", 
                  Style[
                  "\[Alpha]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\[Alpha]"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\[Alpha]"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Beta]", 
                  Style[
                  "\[Beta]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\[Beta]"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\[Beta]"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["a", 
                  Style[
                  "a", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\[Alpha]", "a"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\[Alpha]", "a"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["b", 
                  Style[
                  "b", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\[Alpha]", "b"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\[Alpha]", "b"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["c", 
                  Style[
                  "c", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\[Alpha]", "c"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\[Alpha]", "c"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["d", 
                  Style[
                  "d", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\[Alpha]", "d"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\[Alpha]", "d"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["a", 
                  Style[
                  "a", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\[Beta]", "a"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\[Beta]", "a"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["b", 
                  Style[
                  "b", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\[Beta]", "b"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\[Beta]", "b"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["c", 
                  Style[
                  "c", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\[Beta]", "c"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\[Beta]", "c"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["d", 
                  Style[
                  "d", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\[Beta]", "d"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\[Beta]", "d"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0127738"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["\[Alpha]"], 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.196074"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["\[Alpha]"], 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.543848"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["\[Alpha]"], 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.523407"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["\[Alpha]"], 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0272949"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["\[Beta]"], 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.445413"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["\[Beta]"], 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.709432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["\[Beta]"], 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.489887"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["\[Beta]"], 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.825565"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["\[Alpha]"], 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.238239"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["\[Alpha]"], 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.277116"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["\[Alpha]"], 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.299783"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["\[Alpha]"], 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.44901"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["\[Beta]"], 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.882579"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["\[Beta]"], 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.893182"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["\[Beta]"], 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.217833"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["\[Beta]"], 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.357175"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["\[Alpha]"], 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0597121"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["\[Alpha]"], 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.883759"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["\[Alpha]"], 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.315763"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["\[Alpha]"], 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.134049"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["\[Beta]"], 
                 Key["a"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.463048"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["\[Beta]"], 
                 Key["b"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.899389"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["\[Beta]"], 
                 Key["c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0151642"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["\[Beta]"], 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{627., {78.134033203125, 83.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{627., {78.134033203125, 83.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{"Magnified" -> True},
 CellLabel->"Out[384]=",
 CellID->1936255262,ExpressionUUID->"97e3a3d4-bb8f-45b3-a82f-9057ed88d43c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", 
  RowBox[{"AssociationTranspose", "[", 
   RowBox[{"asc", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[6]:=",
 CellID->1267361642,ExpressionUUID->"023f50d2-2d3e-4a79-925d-90ffcfda8321"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Xu8TdX+x//tngi5yyX3kEpJim/kKEod4qiOlNxVZJ9sqXRSEbnTSUql
pFw6USGF6JtCVHKv4y78tsuOTZG7/Rs/63H2b3zHWGuusdacY665V6/nH+dx
zjHnWHN91niPOT97rTVXla6p7XrmTklJSbtI/Ee7Lk8269evy9N/Kyb+xz19
0x7p1bdH9zv69u/Rq0e/G7vmEf/nLeI/rs6XkvL//fcsAAAAAAAQDOfPnz95
8uTRo0czMjL27dv3/wAAAAAAAI1omUXjLNpn0USLVjruHvz48eP79+9P9LMB
AAAAACAnEa20aKhj7cfPnDlz8ODBRB87AAAAAAA5lWirRXNt2IafOHEiPT09
0YcMAAAAAEDOJppr0WKbtOH6vocOHTp+/Ljo5c+dOxfTe+sAAAAAACQ90SyL
llk0zqJ91ntq52Zc7Ki8Gy4GMX8zHQAAAACAPznRRCv9uGi0I3XW58+fV74b
/vvvv/t8wAAAAAAAJAHRUMv9tWi3w97A7fjx47ThAAAAAAB44rfffpO7bNF0
KxuI3lz+wbJDhw4l5DgBAAAAAEga8sfURdOtvC1+8uRJuVXnu+EAAAAAALgk
mmu51xatt/yvR48e5Q1xAAAAAAC8Jb8tLlpv+Z8yMjIcPrsOAAAAAADiIN+T
TbTe8j/t27ePj6YDAAAAAOAt+QPqovWW/0n+4Pq5c+cSdYQAAAAAACQT0WLL
Hbf8T5H+fwAAAAAA4AadOAAAAAAAfqITBwAAAADAT3TiAAAAAAD4iU4cAAAA
AAA/0YkDAAAAAOAnOnEAAAAAAPxEJw4AAAAAgJ/oxAEAAAAA8BOdOAAAAAAA
fqITBwAAAADAT3TiAAAAAAD4iU4cAAAAAAA/0YkDAAAAAOAnOnEAAAAAAPxE
Jw4AAAAAgJ/oxAEAAAAA8BOdOAAAAAAAfqITBwAAAADAT3TiAAAAAAD4iU4c
AAAAAAA/0YkDAAAAAOAnOnEAAAAAAPyU8E78fwEAAAAACAyrLXAInTgAAAAA
ANmstsAhdOIAAAAAAGSz2gKH0IkDAAAAAJDNagscEqhO/DdcQE3MUStARy4A
HbkAdOQCkNGJg5qYo1aAjlwAOnIB6MgFIKMTBzUxR60AHbkAdOQC0JELQEYn
DmpijloBOnIB6MgFoCMXgIxOHNTEHLUCdOQC0JELQEcuABmdOKiJOWoF6MgF
oCMXgI5cADI6cVATc9QK0JELQEcuAB25AGR04qAm5qgVoCMXgI5cADpyAcjo
xEFNzFErQEcuAB25AHTkApDRiYOamKNWgI5cADpyAejIBSCjEwc1MUetAB25
AHTkAtCRC0BGJw5qYo5aATpyAejIBaAjF4CMThzUxBy1AnTkAtCRC0BHLgAZ
nTioiTlqBejIBaAjF4COXAAyOnFQE3PUCtCRC0BHLgAduQBkdOKgJuaoFaAj
F4COXAA6cgHI6MRBTcxRK0BHLgAduQB05AKQ0YmDmpijVoCOXAA6cgHoyAUg
oxMHNTFHrQAduQB05ALQkQtARicOamKOWgE6cgHoyAWgIxeAjE4c1MQctQJ0
5ALQkQtARy4AGZ04qIk5agXoyAWgIxeAjlwAMjpxUBNz1ArQkQtARy4AHbkA
ZHTioCbmqBWgIxeAjlwAOnIByOjEQU3MUStARy4AHbkAdOQCkNGJg5qYo1aA
jlwAOnIB6MgFIKMTBzUxR60AHbkAdOQC0JELQEYnDmpijloBOnIB6MgFoCMX
gIxOHNTEHLUCdOQC0JELQEcuABmdOKiJOWoF6MgFoCMXgI5cADI6cVATc9QK
0HmVi8OHD//6X4cOHfLq8ICE4HwB6BKYC3FayT7FZGZm+vzoQFh04qAm5qgV
oPMqFyVLlkz5r3z58nGlhByN8wWgS1Qutm3blitXruxTzJVXXunnowOR0ImD
mpijVoDOq1xccsklKRLeFkeOxvkC0CUqFz/99JN8fqlevbqfjw5EQicOamKO
WgE6OnFAx/kC0NGJAzI6cVATc9QK0NGJAzrOF4COThyQ0YmDmpijVoCOThzQ
cb4AdHTigIxOHNTEHLUCdHTigI7zBaCjEwdkdOKgJuaoFaCjEwd0nC8AHZ04
IKMTBzUxR60AHZ04oON8AejoxAEZnTioiTlqBejoxAEd5wtARycOyOjEQU3M
WarVnj17Vq9evXDhwvfee++NN96YPXv28uXLt23bduTIEQ8fBbDEn078u+++
mzFjxvjx44cMGTJx4sRPPvlEnC/cHThgke1z6/r16xcvXjxz5sx33313yZIl
u3btsvEogLes5mLVqlXTpk0bNWrUsGHDpkyZIgKyZcuWo0eP/kYnjqCiEwc1
MedVrTZu3Dh27Nj777+/bt26+fPnT4kgd+7cNWvWFOeU9PR0r54C4Dmrnfi+
ffuefvrpatWq6QEpUKBAmzZtVq9e7dHzALxk6dw6Z84cce4oU6aMnohLL720
fv36/fv3X7dunYePCHjIRi5E7/DUU09VrVo17KVUlSpVBg8evHTpUjpxBBCd
OKiJOa9qlZaWFqn7Dqto0aKpqakZGRlePRHAQ/Y68VmzZlWsWNE5HaIfHzNm
jFfPBfCK5+dW0Uo0btzY8KzRpEmTt99+25PHBTzkeS7eeeed0qVLx3RNlUIn
jsCgEwc1MZeoTjykY8eOXj0RwEOWOvE2bdqYp2PcuHFePR3AE96eW998802H
D1CFlS9fPvePC3jL21w899xzMYUiG504AoJOHNTEXGI7cWHEiBFePRfAK5Y6
8ZjkypXr+++/9+oZAe55eG4dPXp0HKGgE0cAeZiLl19+Oe5TBp04AoJOHNTE
nI1OvHz58p07d37ppZemTZu2dOnS9evXr1ixYt68eU888UTNmjWVc0eePHlW
rlzp1dMBPOFDJ161atU+ffqMHz9+3LhxXbt2rVevnr7N/fff79UzAtzzKheL
Fi3KmzevMtuLFi3as2fPCRMmiLPGTz/9JP5TdOvNmzcX54jsbejEEUBe5eKX
X34pXry4kosiRYq0b99+yJAhc+bMWbJkyYwZM0QuWrZsqSeIThwBQScOamLO
q1qJbqJBgwbPPPPMsmXLnLfs16+fcvp48skn3Tw04Dmrnfg111yzYMECfeNJ
kyYpF1fif4qWxM0BAB7yJBe//vprhQoVlFCI08fGjRvDbr9q1apbbrmFThyB
5dX54uGHH1ZyceWVV65duzbsxrt27XrxxRfpxBFAdOKgJuYSUqv7779fPn3c
eOONvj00YMJSJ168ePF//etfDr/lN3v2bPkdQOGRRx5xcwCAhzzJxSuvvKK0
Gw8++ODhw4ed95o+fXrlypXpxBFAnuTiu+++Uxb/1q1b79+/32EXfsUMwUQn
DmpiLiG1mjFjhnz6qFKlim8PDZiw1Inv3Lkz6i6tWrWSd7n44oszMzPdHAPg
FU9yUaNGDeXPU3v37jXZMSMjY9GiRXE/LmCJJ7lo2bKlnIvChQvv2rXLeRc6
cQQTnTioibmE1Grbtm3y6aNIkSK+PTRgwlInHvo9cWfK36mEn3/+2c0xAF5x
n4s1a9Yo03vw4MHeHiTgM/e52Ldvn/LVpH79+kXdi04cwUQnDmpizmqt9uzZ
s2jRorfffnvUqFFPPfVUjx492rVr17Rp07p168qnj4IFC3r+0IAbCezEDx8+
XLJkSXkv3gdEQLjPxYQJE5Q3xA8cOODtQQI+c5+Ljz76SLkoMvkAFZ04golO
HNTEnOe12rdv35QpU9q0aVO+fPkUM3TiCJoEduLCjTfeKO/19ttvuzkGwCvu
c9GlSxd5bt98883eHiHgP/e5eOqpp+Rc1K9f32QvOnEEE504qIk5D2u1f//+
J554QrTVhg04nTgCK7GdeJs2beS9+PguAsJ9Lu666y55bj/wwAPeHiHgP/e5
6Nq1q5yLu+++22QvOnEEE504qIk5r2q1fPnyihUrxtqD04kjmBLbiffs2VPe
S/xPN8cAeMV9Lho3bizP7YEDB3p7hID/3OdCtN5yLlJTU032ohNHMNGJg5qY
86RWq1evVr7ZKitbtuwNN9zQrl27hx9+WFx3jR49+u2336YTR5AlthNX3h/p
1auXm2MAvOI+F1dddZU8t1955RVvjxDwn/tcNG3aVM7F8OHDTfaiE0cw0YmD
mpjzpFai0dYb8CuuuOKdd97Zvn172F3k382kE0fQBKoT79Kli5tjALziPhfK
yeLFF1/09ggB/7nPxR133CHnwvAbSXTiCCY6cVATc+5r9cUXXyg9eNmyZV95
5RXnH0GmE0eQJbYTb9GihbxXWlqam2MAvOI+F8qPJvPNCyQB97no0aOHnIs+
ffqY7EUnjmCiEwc1Mee+Vo8++qh8LhBt9bp166LuRSeOIEtsJ167dm15r2HD
hrk5BsAr7nPRoUMHeW6LxtzbIwT85z4XgwcPlnPRvn17k73oxBFMdOKgJubc
10q5F67h33LpxBFkCezEMzMzCxcuLO/16aefujkGwCvuc/H000/Lc7tKlSre
HiHgP/e5mDJlipyLBg0amOxFJ45gohMHNTHnvlb16tWTzwWvvvqqyV504giy
BHbib7zxhrxL/vz5Dx486OYYAK+4z8Vnn32W8n9Nnz7d24MEfOY+F0uWLFFy
YfLZQjpxBBOdOKiJOfe1uvrqq+VzwciRI032ohNHkCWqE8/MzKxWrZq8y803
3+zmAAAPuc9FRkZGgQIF5Blep06do0ePmu8e3+MC9rjPxbZt25RO/PHHH4+6
F504golOHNTEnPta3XffffK5oG3bts7bb9q06c4775R3oRNH0CSqE58wYYJy
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
KQLbiQcqF1anbo4b3PbCK3fihQsXFs3Rhg0bTp8+rWwm2pZFixZdeeWVyqtf
rFgx5xthifNd2Da8Xr16oovMzMxUthcPPX/+/FmzZjmM6Swpc2F7+bL6TG0M
bvU6ypmbE3RCrqPoxOFtTW688cZI8z8bnfiSJUuUmjj84frAgQNlypSRN77u
uuvcPLpOuT65++67PRlWrGnKH1HFeuu8y7Zt20qUKCHvEukerSNHjtTnlcMf
Ub/88ktlqb/iiivC/hXa3shxE4+ufHSwQ4cOwRk5WXMRlnhl27ZtmxJZfJ24
V6HLslnGUCcuriGnTp0a9ceMBgwYoByG2D3SxlbXipD/+Z//cXjVQoLZiQct
F/ambo4ePCbmC2+oExdT/YUXXoj6Y1KixatZs6YyWxYvXuywyzPPPKNsL05n
gwYN0pt9ryRfLmwvX1afqaXBE3Ud5dUJOiYur6PoxEEnbs6rvHTu3FkuSJUq
VZzvn/nee+8pNVy/fr2bA1BYuj6ZNWuWcth79+6NuldaWpq8yy233BJ2s0qV
KsmbibPD0aNHnUceO3ascjyzZ8/2c+S4TZ8+XR48T548Dp/A9H/kZM1FWOIq
RX7ESy+9tGTJkvL/k/BO3F4ZxSX9nDlzDD80KK7kr7/+ennYK6+8MtLGVteK
kJzbiQctFzm3WQ5OJ26+8O7YsWPSpEnHjh0zHFm5QW6K43uLGzduVD4/XLFi
Rdu/9pV8ubC9fFl9ppYGT9R1lFcn6Ji4vI6iE4e3NWnatGlKNH/yTlxcxyp/
VBTrj/MuZ8+eVb7SOHz48LgPQGfp+mT8+PHysKVLlzbZ6+2335b3KlSokL6N
uH5QJpXzB19DRGtQvnx5ea/27dv7NnLcTp06JU6O8uDdunUL1MjJmgvd66+/
Lj+cuIgVT1lp8RLbiQeqjKNGjZKHFdcnka7x7K0V2Zo3b54STQA78UC9oCE5
t1kOSCdub0kXjhw5oszq0aNHR9pYdH/KxgsXLvTqSCJJvlxYXb6sPlNLgyfq
OsrDE7Q593GmE4e3Nfn111/TNeLyRp6lf/JO/Pvvv5erkStXrj179kTd6847
75T3atKkSdwHoLN0faJ8caZw4cIme82bN0/eq0iRIvo2EydOVNb5gwcPmgw+
dOhQea9y5cr5NnLclD8UX3TRRSYTxs+RkzUXigULFigfn5syZUqW9mZrYjvx
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
vyKNGjUy2evBBx+U92rSpInLw3CPTtycJ3n5+9//LlejV69eJnsdOnRI+brN
ypUr4z4Gl/Qbfeg3Zfr222+Vbcx/9veqq66Sd2zatKlXR96mTRsbC6knIz/0
0EPyCAUKFNi1a5cnx2Zv5JBkykVgO3GT0GX5W8bz588rX9FKufA2gbjEiump
JXCtCH4nHpBcuGE4dZNvcNsLbyQff/yxcth6s6x8ZHfs2LGGgy9cuFDeUUwz
0aHEdHhJlgvby5fVZxqcMoZEvY5K4AnaXpzpxOOm/J6jmD9Rdzl48GCJEiXk
vSZMmODyMNyjEzfnSV6effZZuRq1atUy2Us/tx4+fDjuY3Bp7969ysHMnDlT
2ebdd99VVi3z8ZXvClWvXt2Twxbnx2LFiskjm38kz/bI69atU75mm5qa6smx
2Rs5WzLlIuw7vG6IAd0cTzaT0GX5WMbTp0937NhR2St//vyzZs2K9aklcK0I
ficekFy4YTh1k2xwHxbeSD777DPlsNevX69s06FDB3kD0ZEZDj5//nxl8Fj7
kSTLhe3ly+ozDU4Zs8yuoxJ1grYaZzrxuE2aNEl+UR588MGou4wbN07eRQRW
rPMuD8M9OnFznuRF/y3Cffv2Rd1Lee+pVKlScR+Ae4sWLVKegv5TKUpAUmJZ
q5W/PVapUsWTw1aGLVOmzJkzZwIysvJFs0suueTgwYOeHJu9kbMlUy5EzNfF
qHbt2vIxjBo1Sv7X37TPhcbHJHRZfpXx6NGjLVq0UB6ocOHC5j9HK0vgWhH8
TjwguXDDcOom2eA+LLyRjBkzRjls/dJa+YWpSpUqGQ7+8ssvK4P/8ccfMR1e
kuXC9vJl9ZkGp4xZZtdRiTpBW40znXjcRo4cKb8ud955p/P2mZmZVatWlXe5
7bbbXB6DJ+jEzXmSF7HQKR/sMfkzu3LzSfO/YNug/1ly7969yjb6d6C+/PJL
w/GV3+UUz939Mes/v9K/f3/3w3oysuhflBFiuttVQkaW/clzYftXzEJMQpfl
Sxl/+eWXunXrKgdTsmTJ7777Lr6nlsC1IvideM7NRTbDqZtMg/uz8EbStWtX
+aHF/NE7mrVr1ypH+M0335gM/sgjj8h7VahQIdbDS7Jc2F6+rD7T4JTR3hWa
+xO07TjTicdNuW2FuDJx3l7pRoUnn3zS5TF4gk7cnFd5UX4b5aGHHnLefv/+
/coHYxzuj3Hs2LFv/q///Oc/bo5WkZ6ernyC6KqrrtI3+/HHH5UJr/+WSiTi
5C7v2L59e5fHfOLEiRo1ashjXnzxxZ58x8f9yOfPn1fmQ6lSpX7z4o1UeyMr
/uS58KETNwxdiNUyinZbud1uyoXPNMZ61yZZAteK4HfiWTk2FyExTd3kGNy3
hTeszZs3i3OQ/Oj169fXNzt37pwS5FatWkUdXDRuyk3Xu3fvHusRJlkufFi+
rD5Tq4MbsneFluX6BO1DnOnE47ZixQolfatWrYq08dy5c/Vftw/Cl8R/oxOP
hVd5GTRokFyQPHnyOP8UQrdu3ZTtMzIyIm08ffp0ZaY5v0/Upk2b3r1779ix
w/Dg27Vrp4wvrmb1zcTyVa5cOXkzsXqb/NX99ddfV8Z///33DY8tLFHbBg0a
KGOOHj3azZgejqz//Ov48ePdH5vVkRVJmQtzcZzoLYUuxF4ZZ8+eXbBgQeVI
mjVr5vJLgglcK3JEJx6oXFidujl3cJmHC6+4dKxYseKQIUMMI3b69Onrr79e
eXSxe9iNhw4dqmwZ9UesunTpouwyf/78WJ9UkuXCh+XL6jO1OrgJe1doIS47
cR+uo+jE47Z//37l1enQoUPYLcVKpdyoLYROPMfxKi/p6enKBe3VV1994MCB
sBtPnTpV+TOO8x8tY72yuuyyy0LL6X333bd69WqHLbdt26Z8mEqoWrXq8ePH
w27/+OOPKxtXqVLF+VtIGzZsUCojsvNbvH9+PHPmzLBhwwoUKKAcxnXXXXf2
7Nn4xvR25JMnT1auXFke4fLLLz916pSbY7M9si4pc2EujhO9vdBlWSvjBx98
oP89uXPnzvJv0MQtUWtFjujEA5ULq1M35w6ezduFN/uzl4ULFxYZcb5L+dq1
a2+99VblsEuXLh1pqojuvlChQvLG+fPnnzJlStiNRb8pGhBlajVs2DCOJ5V8
ubC9fFl9plYHd2bvCk3mphP35zqKTtyNa6+9Vpk/3bp1k39V/NdffxUJ1a9e
QsQitmDBgt69ew8YMMDkt8gt8bYm4kyxSdO9e3f5iYvzoL5NEG5eF5WHedF/
/adatWrTpk2TL2u3b9/+2GOPKfMnb968zh8Eje/KKptYtYYMGfLNN9+IORna
QKTyq6++euqpp/QFU1iyZEmkkcX8V350UihatOhrr70mTuvKxmLFGzlypPJp
QGHy5MkOB79x48bq1av37dtXvCJiConV+/fff1+1atXbb7+dlpam/FBLSIUK
FcSFlsOYtkeW6bfWiXQhFCt7I+uSMhfm4u7Es3kYuhAbZVTeOglJjV3Y7yH6
sFZkZmb+onn00UflER544AF9m6NHjzpXO5KkzIXVqZtzB8/m7cKrfAsyX758
rVu3Hjdu3OrVq8X5SGwgTkzipCPWnAcffFD5zHDIvHnzHMYXFdB3admy5c8/
/5y9jXgI0eM3bdpU2SxPnjyGXy1XJF8ufFi+7D1Tq4P7cx3lzE0n7s91FJ24
G3PmzNFnUbly5cRS2aNHjxtvvFH5FfiuXbvqaQ259dZb9+zZ4/6Q4uBtTRo3
bhz2CUYliub+0W3zMC8HDx6sWLGiXociRYqI1alRo0ZVqlQJe2IdOHCg88gu
r6xk+fPnV+awIup3xP7973+HfRZ169YVGRk/frw42hEjRoj/XqlSJX2zDh06
6Ccy2bJly+Ttwz6WTDyK4Rda7Y2cTbQGyoIgynLu3LmYBvF55LCSMhfm3Hfi
Mvehy7JTxrCdeBzatWsXdnzba4XeShj629/+FrXgYSVlLqxO3Zw7eIjnC6/S
iSvEMYve3GGDhx9+2Hl8EZk777wz7L6ikRQXsWIyRKrMK6+8Et+TSspc2F6+
7D1Tq4P7cB0VVdyduG/XUXTiLumfBYpELHfiZXVoVGvUqLF27VpPjiom3tZE
LN2GBdHr4/7RbfM2L+vWrVNufhLVPffc47xcZ3l6ZeXs7rvvNnm36PXXX4+6
/IZ17733Rv0tMGWddyYm586dO6MesO2Rsw0YMEAZZ86cObEO4vPIYSVlLsx5
24k7MwxdloUy2u7EsyyvFcrLZE7U3KTguqTMhdWpm3MHD/F84XXuxJ3ddNNN
Jh+nF9elDRs2jGnkXLlyvfDCC3E/qaTMRZbl5cveM7U6uA/XUVHF3Yn7dh1F
J+7S1q1bmzVr5jy7xKr1zDPPiJVcbD9lypRImxUqVGju3LmeHFVM6MTNeZ6X
FStWVK9e3aQ+Yhb16tXrxIkTUceM9QwSx8cYKlSo8Mknn5g/zbVr1zZv3tx8
/Bo1ahiOb7jOlypVavLkyYanJNsjh+zevVt5r6FRo0axDuLzyJEkZS7MxXGi
9yF0WV6X0YdOPMvmWpHTO/GsYOTC6tTNuYNn2Vl4V65cqdxT2oR49fv3729+
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
+DB1baxgSdOJnz59evjw4YUKFTIZ07kTf//99+M71AYNGqSnp5scbVhJmYus
HN6J27tsSMgFiTwanbiCTjyAEtuJp1w4R+eUr5B7mxdxPo21VmXLlt29e7f7
h1a88847Ud+B0tWuXfs3g48SvfXWW2EHz507d8WKFWvVqnXxxReHHV/805Ej
R9w8rw0bNhQpUkQfOeGduL2CJ6TayZoLZ/HNrpD42hmhfPnyJo2njQmWo3MR
1po1a8QlnzxUkDvxgOTC9tS1tIIlRyd+6NCh+vXrm49pqRMX6tate+LEiagH
HFZS5iIrJ3fi9i4b/L8g8WRVpxO3egB04jqrnXjRokVvuOGGBx98MC0trWPH
jjfddJP+FpJw2223HT161KtnZI+Hefn666/1BapMmTL9+/efPHnyBx98MH78
+NatW4v1StmmYcOGXkTh/yeei/7hNPHCdejQYdiwYR9++OGkSZNSU1OrVq2q
v3Bt27Y9f/68w+CbNm3SP5LUtGnTL7744tSpU9mbidPik08+qf+d/4477oj7
i2n79u27/PLL9WNOidYr3XPPPWH3ilWkE5+9gieq2kmZC2dxz66QsO1MsWLF
xArZrVu3gQMHdu7c+eabbw77qVHxMjmHztIEy7m5UIhJvnHjxhdffFF/pyaw
nXhwcmF16tpbwWzPXveX7j///LNz5UUbfu2110bavUKFCrfffvtjjz0WukVP
6NO5cXTi4oWrU6eOKNczzzwjiixezcqVK4d9RDH3nA84kqTMRZa1OWB76toL
nZ8XJN6u6j7EWUYnDhudeKVKlUaPHr1lyxZ9szVr1rRr106ftxMmTHDz6P7w
MC9NmjRRKpCWliavTiEiztWrV1e2nDNnjstHz3bixAlxBlfGb968uf4X4z/+
+EOslvofUt555x2H8Vu2bKls/+abb0baeP/+/eIaQNl+7ty5cTyv48ePN2jQ
INIi6dwrpaenfx+XESNGyI8S9sRnteCJqnby5cKZm9kVIrcz4kJXrH5hP+25
detWsa7ql5pvvfVWpJHtTbCcm4uQxx9/XDQmotryvcUUge3Eg5MLe1M3y+YK
ZnX2ZmmX7qLRi+lRot5MTAQkbBter1490ddkZmYq258+fXr+/PmzZs1yGFPu
xAsXLiy61w0bNogdlc3Onz+/aNGiK6+8UnnoYsWKxXfXxKTMRZa1OWB76toL
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
iQczF4bMp25IolYwRUyzN0S5dG/cuPGmTZu+/fbbr776Srz6oqE4dOhQHEei
fFhXFDP0aept27bNnDlTzPbOnTuL9ad27dpNmjTp0KFDWlrahAkTTG5SbW7p
0qWtW7dWXhSHX6OLKllzYWkOxCSOqWsvdImKs+eduO2Xkk4cCamJkhRh6tSp
vj163DzJi/KbR+YfNrvmmmvkHV1eKmdpt/XInTu30mI4aNmypbyvw+949unT
R1+NUy58H+G+++4TlQxdWojy/vWvf5U3qFmzpsnx9OvXT96rePHimzdvVrax
1CutW7dO+cVM57fkfCi47WqHlWS5kCVwdmV76aWXlFfzww8/DLulP4mOKoC5
iCT4nXgwc2HIfOpmS8gKJot19oYol+5h5c+fv1KlSrfccou42hF9h8nB9O7d
Wx6hRYsWq1atatu2rXLnNIU4frFNfF/i3rdv37hx44YPHy5eiDZt2tSqVUsf
XxyVm98xT9ZcWJoD5uKbulk2Q5eQOHveidt+KenE4X9NfvrpJ+WGEpUrVw7+
l8R/86gTL1iwoPzcReQNd2zatKm849NPPx33MYSIlkFZW8xPZ02aNJF3dP46
j7g8drhyqFChgliulT9xlytXzuTmS8pdl8XauHTpUn0zS73S7bffLg9btWpV
5+sTfwpur9qRJFkusiV2doXs3r27RIkSyjSL9E1b3xLtLJi5CCv4nXgAc2Eo
pqkr838Fk8U6e0NMLt1lZcuWFXMv6m8ENG7cOKZhZQUKFIjj9771W+nKxKWa
6DtiHVORrLmwNAfMxTd1Q+yFzv84+9OJe/hS0onD55pkZGRcd911yjQePXq0
Dw/tnvu8nD9/XnnuM2bMMNz3tttuk3fs27dvfMeQ7cSJE4ULF5bHFP9zy5Yt
Jvsqb0U531c260L0lHteRSIW7e7du5vcHvazzz7LkyePvG+kiwQbvZJ+T+Bp
06Y57+JbwW1U2/nhkikXIYmdXSEnT55UPrCX4vg2h5+JjiTIudAFvBMPYC4M
xTp1FT6vYNnimL0hsV66h5QpU+aHH35wGLZatWpxDCsbNmxYTBVw6MR79uzp
yYdykzUXluaAobinbjZ7ofM5zv534iFxv5R04vC5JsrtN1Mu3ClXLO8+PLR7
7vNy7Ngx5emb3/akVatW8o7dunWL7xhk999/v3I8pUuXXrZsmcMuq1evFkul
cleQqKezBQsWVKxY0WQ1K1iwoGiCoh75unXrlFsNDBo0KNLGnvdK4kpA+YPS
NddcY3IjWX8K7nm1nSVfLhI7u7Ipt7UUbrjhBue3OXxLdFgBz4Uu4J140HJh
Lo6pK/N5BQuJe/ZmxXvpLhQqVMjh6l35DLasaNGi4vDuvvvuLl26iP9s2LCh
8snkbDHVx/k98bx584pLuKh3wHaWrLmwNAdMuJm62eyFzuc4J6oTT4n3paQT
h5810W+/Kc4mGzZssP24XnGfl8zMTKUCixcvNtz3rrvukneM+00r2c6dO8XS
oa8normYNm3axo0bMzIyjhw5IhqTjz/+eOTIkfrbHCEOfcrJkyfvvfdeeeN8
+fI1b95ceRdM0axZs23btkUaMz09XVnYO3bs6PA0Pe+VRHGUA54/f77JjrYL
bqPaUSVZLhI+u0KUn74VihUrJuaP814+JNpBYHMRScA78UDlwlx8UzckIStY
SNyzN+vCzany5MlTs2bNdu3aDRw4cOzYsVOmTBFdregQJ0+ePHTo0N69eyv3
CstWp04d+bcYZPnz51c2LlKkSJ8+fTZt2qRv/Msvv4iHVm6RJ4jV7Pfffzd8
Ivpbqzpx2RbH596zJWsuLM0BE26mbpbN0CUkzu5XdZ9fSjpx+FYT/eyccuEz
RVYf1Fvu8yISqlRg4cKFhvsqXwJ65JFH4jsGxYQJExyWRENjxowJO/jp06eV
E1+1atW+//77rAs/DjV9+vQ777xT+QxwtlKlSoW2VBw7dqx+/fryljfffLPz
HTO87ZXEi1i5cmV5wCZNmpjvbq/gNqptIplykfDZFaJPkly5cn3yySfx7RuH
SIl2ENhcOAh4Jx6cXJhzM3UTtYJluZ69WRdu/uy8wZkzZz788MOwX/0eN26c
vv2JEyeUzQYMGBD1Vthr165VfoJcePfdd82fyLkLRLe7efPmZcuWjRo1Sr9v
W+7cub/66ivzMWVJnAvP54AJl1PXXugSFWdPVnU/X0o6cfhTk1deeUWfrjnl
6+HZPMmLsvKYX7f/5S9/kXf08G+548ePd74Xa1STJ08OO/IDDzwgbyZWV/2d
kT179oiVU7mJX0ihQoX01Vj5k06NGjWifqvI215JudWzsHz58phGsFRwG9U2
kUy5SPjsEt588019esT0S9n2Eu0gsLlwEPBOPCswuTDkcuomagXL8mL2GhJN
rv6jYDfccIO+pf7Or+FE+vLLL5UdxSO6POx58+YVKFBAHrN8+fLxfZ/3T5gL
hfkcMOFy6toLXaLibHVVV3jyUtKJw4eaTJo0ST87Dx482NLD2eNJXpTvn86e
Pdtwx5tuukneMb6Pj0Yyf/78evXq6YuhrnDhwj179lT+z7Df6Fy5cqWy2ddf
fx3pAA4fPpyampovXz5ll0aNGilbDhs2TN5g0aJFO6O5+uqr5V0mTpwo/+uJ
EyfMCyWujpSzRnwXOZ4X3FK1TSRTLhI7u4SpU6fq3/ccOXJkrE/ERqIdBDYX
zoLfiQckFyZcTt0ErmBezV5Dx48f1+9bm56ermx25swZZRvziaT0m2IWuT9s
/eehH3/88TjG+bPlIizDORCVy6lrL3QJjLOfnXiWFy8lnThs12TChAn62fmp
p56y8Vi2eZIX5ZNjb731luGONWvWlHccMWJE3McQyYIFC2655ZaUcPLkyVO9
enXRp4g1c+nSpfI/idc37EfmlNsai/8Z9QC++OIL/QtEyklW6ZXci6mSAwYM
UJ77xo0bzXdXeFhwS9U2kUy5SOzsmjx5sv5pveeeey7up+Ntoh0ENhfOgt+J
ByQXUbmfuglcwbydvSZee+015bBXrFihb6b0m3PnzjUcv3///sr4sUYjLOV2
Z5UrV45jkD9VLhwYzgFnLqeuvdAlMM4+d+JZrl9KOnFYrYmSiBBxdvb8gfzh
SV6Ub6Gav2Wg/OXzvffei/sYnIlT9ubNm5csWfLuu+++8cYb4qp469at8m1v
hw8fLh9JnTp19EHEdbLyun/++ecmj/7JJ58oO/bo0UPewPNeyfx3Xnbv3q3c
q7lTp06G+zpwX3B71TaRTLlI4Ox66aWX3OzuwJNEOwhsLqIKficekFw4cz91
E7iCWZq9zn744QflsD/66CN9M+XWkeYv4tSpU5Xxt2/f7v6wxcWbMqy4Lop1
kD9PLpwZzgEHLqeuvdAl9oLE/07c5UtJJw5LNTl69Oijjz6qTM5cuXL961//
8vBRfOZJXv7+97/LNenVq5fJXocOHVI+4b9y5cq4j8GlNm3aRF38v/32W+XV
N/9O2VVXXSXv2LRpU/lfE9grPfTQQ/KOBQoU2LVrl+G+bkQtuL1qm0imXCRk
dp0/f15cLSg75s6dW7Sfbp6LOZNEOwhsLqIKficekFxE4tXUTeAKlpDZq99z
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
Bn0fidm1a5dx+6w1ule3bt1+++035zYsLKxe7tChg7AZKyhc/i1S+MHxwoUL
R0REzJ07l5UeLHSOBlmy2N1swIABwoe6HTZt2mSuuwIvFzn6x4CT2qGrL3T2
xFnHXd22l9IJlTjoq8RNeOqppxRemnIK83Lt2rXq1avTHggJCWELzrZt29as
WdPl9DdhwgTjlk1UHPv37+e3d3lcXlhYmORXAr/55huXrTVu3Hjo0KGxsbHs
bKdPn87+N2uTbhYVFUVv2iaYrsTZfV6YTdiZZ2dnWzwfTR3uq94O1FxIUlKJ
mxAZGenuEPoS7ZC7cuFAixRJzzzzjLnLCbxc6B669tzBlI9eYenOCwoKot/a
48l8g5td1BNPPOFyd1batG7dmr1k7o7yj3/8w2WbQiUuYK2x2txgg1deecV0
dwVeLnL0jwEHHTdefaGzIc467ur2vJQ8VOKASlye2rzExcUJj1XxqE+fPh5v
TdYrcWNs3j9//rz8ZS5cuNDjitqlvn37mnguq0umK/GYmBjhrDZs2GD9fPR1
uE96O1BzIcn/K3Fj3iY6JxfmIoe8TPJ69epl7nICLxc2DF0b7mDKR6/B0t0Y
G1qSn7hgJVirVq28ajx//vyTJk1y16BxJW6sTZs23n7+lhd4ucixZQzkaLvx
6gud7jjruKvb81LyUIkDKnF5yvPy448/hoeHy/QMm1WHDRuWnp7usU19lXiF
ChWWLFli4s+mR48e7dSpk/wwqFOnzvr16709igFzlfilS5eE9z/btm2r5Hy0
drj9vR2ouZCUeytxcwMsl+Yit1fiOX6QCxuGbo7mO5iO0duuXTtveyA0NNTb
u252dnZsbGxwcLBM+6VLl/72228NWjt48KDwAwQy2LgaN26cxccCBF4ucmwZ
A/puvDk6Q6c1zjru6vbEmYdKHJT0yaRJk8zFQdCvXz+Fl6acjrykpaXFxMTQ
X39zYnMHu9/Kf/eE/pKjx9u18QI4KCioa9eu8+fPT05OtnKlmzdvbtiwofEA
KFOmzNy5c5U/uoqdP38UyZ+2nDZtmnB6e/bsUXI+NnS4nb0dqLmQ5O3oouPK
nP79+7s7hNYBlktzIbxM8p577jlzlxN4ubBh6DppuoNpGr2sGBw9enSDBg08
XnuxYsWio6Md38U24eLFi08++SR9bp5TSEjIhAkTJJ+IzhL3+uuvN2nSxONp
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
yiuvdO/evX79+sWKFXM2GxIS8tBDD7G+mjRp0s2bNyUb3LFjh5XecFq/fr1X
F3Lv3r2tW7cOGzasRYsWYWFhrE/4F7d27dpvvvmmt53jFNi5cGnBggWj/mvL
li1e7WvzGDh//jw7yQ4dOlStWpXvxsKFC4eHh3ft2nXKlCks+6a64X9Y6RM7
Gz9+/PiECROaN29eqFAhZ29UrFixY8eOI0eOXLx4sao3HvNCLrR2ptahq69x
2waYYOXKlfz9ISkpyUpr+uKcF3KRS4cupWkYWFyQ2DmH2hBnVOKgqk9u3bq1
fPnyTp068cPVWM2aNadOnXr16lVV16Kbjrxs2LChcuXKHvuqZ8+eV65cUXVQ
XmZm5tq1a7t168Zu45IvHLtPzpkz586dOzLtf/rpp5LNunPy5EmPR1Hbjdeu
XZs+fXqDBg0kz7BUqVJs7pN5x6B3797WOuP/17ZtW5nOZxISEgYNGsTO0LjB
Rx55RLJBKiBzYSArK4t/g/Hvf/+7V7vbNgauX78eHR0dFBTksany5cuzZYlk
onX0iT2Nnz17tm/fvvza1aW6dev+8MMP1k87sHOhtTO1Dl19jds8wHiLFi0S
jvLdd9+Zbk1rnAM7F7l06LqkYxgoWZDYM4faFmdU4qCqTz777DNzWWjWrNkf
f/yh6nK0Up6X0aNHy3cUu7UeOnRIyXF5K1asMPfCtWjRIjEx0WP7NlTiyrux
f//+Js6zSpUqBw4cMG7Zzko8IyNj2rRpJUqUkGnQrypxf8iFAXaZ/An4ZyW+
dOnSkiVLetVg1apV2a3YJ31iQ+ObNm3yuPzjDRw40OKnEAM4F1o7U+vQ1de4
/QPMadu2bfQvIFYqcd1xDtRc5NKh647aYaBwQWLDHGpnnFGJg88rcaZBgwbX
rl1TdUX6qM0Luyl521GVK1e+dOmS9UPzTFfiTOPGjdPT043b112J6+hGc5U4
U61aNeO7sW2V+M2bN5s3by7foP9U4n6SC3eOHDnCljf80f2wEl+8eLHLd/IL
FChQvXr1+vXrFy9e3GWb7D+lpKTY3ye6G//iiy88/mmDYhPTfyx8yDNQc6G1
M7UOXX2N+2SAORw/fjwkJIQ2broS1xrnnMDNRS4duu6oHQZqFyS651Cb44xK
HLRW4oUKFapXr16vXr3GjRvHUvz888+HhYW5HMOjR49WdUX6KMzL3r17adIr
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
UljJ8+23386YMYN+ysXBoAJyJ/ByYUNnah26OhrX1yeJiYlC2fX8888bXF3e
qcT9LRcOuW7oemRlGPhwQeJgbg71yXyBShx090nKXy5dunT48OHt27dPnjyZ
Prctf/7833//vY6jq2U9L+x2Klz7tm3bJPcVvvDy6quvmjsHSdl/YVPeqVOn
9u/fP3PmTPrctgIFCuzevdtjUx4fwpaZmblmzRqXXyyaO3cu3d7n3Thv3jw6
htevX2+iKQG7tBo1avAtt2/f3uNe6enpwvnExMR4fMj20aNHhV/8ZL788ktv
zzlP5SJHfyVubgw4ZWRkCKvN2rVr//LLLzl//RDSV1999cQTTwifd3WqUKGC
Y0tv+W0lnuMqrSbMnj3b29MOyFxo7UytQ1df4zr6hN29mzdvzm/w6KOPGs+k
eacS98Nc5NKha8zK14KE07BzQZJjbQ61f75AJQ4+6ZPVq1cL75hVqVLl/Pnz
tp2AOUryItww5afLv/3tb/yONvztj9q0aVORIkX406hWrZrF7yI5scKf/lBa
y5YtXW7sw2787LPP6INTlHw9PIc8vZM5cOCAx73o3wgkh+gPP/wg7MheAm/P
Oa/lQnclbm4MOPXv35/fl63E6Ec1EhIS2FWULVs2H1GiRAkTKzd/rsSZ2NhY
42f2erRkyRJvDxqoudDXmVqHrtbGlfeJ8JmrOnXqeJxn804lnuN/uci9Q9eA
6WHg2wVJjuU51Ob5ApU4+KpPWDkjDN0RI0bYeQImKMmL8LWvdevWSe7Ypk0b
fkcTn5ZUgv605Wuvvaaq8bS0NOGrPUxiYiLd0lfduGzZMvqdphkzZnjViDts
/hJmUslpKDMzUzgl+SEqrExYx3p72nktF1qXqabHgMPBgweFkbB37153G9+6
dSs6Orpw4cLCLm3btvX2tP28Emc2b9780EMP5ZMQHBz88ssvC//S+KuCLgVw
LnR0ptaha0Mu1PbJ1KlT+f+6ffv28540bdqU32X+/Pn8f01PTzc4eYH/V+J+
lYvcPnTdMT0MfLsgsTiHOtg5X6ASBx/2SdeuXfmhGxYWZvMJeEtJXoSP3yxe
vFhyx7p16/I7Tp8+3fQ5WCQ886RGjRoKG1+wYIFwT/vxxx/pZj7pxiVLltDP
gL377rvyLRiLiYnhW2Ylf3x8vOS+wspk48aNkjuOGzdOuCKPnyIT5LVcaF2m
WhkDOeQJruz/etxlx44d9MuG8itbB/+vxB22bt362GOP5XOFRTs8PJxVQGw1
u2fPHuFV8DYUOXkgF2o7U+vQtS0XqvpEqMSt82oA+H8l7le5CIyhS1kZBj5c
kFicQ3n2zBeoxMGHffLGG28IY5sNAJvPwStK8iJ8+Uv+z6nCu3zLly83fQ4W
sdpTeOFY56hq/NdffxUa/+c//0k3s78bP/zwQ3o3tv5DG06XLl0SHr85cOBA
+d2FZ/vIX9eyZcuEizp79qxXZ57XcqFvmWpxDLAlgfBSbtmyRWbH9evXCzsO
HTrUqzPPLZW4A1smnTp1ateuXV9++eWnn37KllunT5/mf/Vg2rRp/BEbNmxo
4ih5JBdKOlPr0LU/F9b7RHkl7tVU5f+VuP/kIsCGLs/KMPDVgsTiHOqS7vkC
lTj4sE+++uorIXFxcXE2n4NXlOTl2Wef5S952LBhMnvdvHlT+N7KwYMHTZ+D
Rd9++62VW6Ux+jAWl09Cs7Mb79+/z+Yg4awKFCjA7sleX557L7zwAt9+kSJF
Lly4IL+78NHEOXPmSO64bds2fkfWP2wu8+rM81ou9C1TLY6Bn376SRil8s9w
aNKkCb9jhw4dvDrz3FWJe9SzZ0/+iObWcnktF+7IdKbWoevDXLjjsU9QiRvz
n1wE8NC1Mgx8tSCxOIeaY3G+QCUOPuyTtWvXCjcZdtux+Ry8oiQv77zzDn/J
9evXl9mLFr+3bt0yfQ4Wff/998LJHDt2TFXjly9fFhpftWoV3cy2bszIyHj+
+eeFvYKCgtjoNXN5bsTFxQlfP4+OjvaqhaioKH53tlCR3HHz5s3C1Xk7c+W1
XGhaplofA19++SW/O1uEyO8rfNMtPDzcq0MHUiXO1rqlS5fmjyj/0UpeXsuF
S5KdqXXo+jAXLsn0icuPYFnBGpQ/Q/+vxP0nFwE8dK0MA58sSKzPoSZYny9Q
iYMP+2TKlClC4k6dOmXzOXhFSV7orxwmJSV53Ev4m2yFChVMn4B1s2fPFi5B
YXK3b98uNO7yh9Ls6cbU1FThaQb5/npAh/yvl0oSvgtWsmTJa9euedWC8NMb
YWFhkjt+9NFHwgXeuXPHq0PntVxoWqZaHwOLFi0S+lB+nSn8KaFmzZpeHTqQ
KnGhKypVqpSZmWminbyWC5ckO1Pr0PVhLmTadNknbL0R56UGDRrwzc6cOZP/
r//x5htk/l+J+08uAnjoWhkGPlmQWJ9DTbA+X6ASBx/2yYABA+hNxuZz8IqS
vLD5Qvh8lMu/+QqEpzjKv8Gow0svvcSfDLsccytVl+jfAi5fvkw3s6EbL168
2LhxY+Fkypcv//PPP5u/PFdYXS8cxcRT4I4ePSo0sm/fPpkdX331VX6v0NBQ
bw+d13KhY5mqZAzQ7wb+8MMPkvsKv1fLOtarQwdMJU5/RmfcuHHmmspruaDk
O1Pr0PVhLiiFA0yQp37FzH9yEcBD18owsH9BomQO9ZaSOKMSB1/1yeHDh4sV
KybcKOw8ARNU5UX4oa4XXnjBePsrV64IH7kxePzF7du39/2v33//3crZCk6d
OlW8eHH+ZJo3b66q8cTEROFzPk2aNHG3sdZuZOW28HTWfH99BE7hN+Id7t+/
L1xIhQoV/uP9E/Cys7OFE+7Ro4fHvdh6RnjG6ZAhQ7w9dF7LhfJlqqox8O9/
/1sYsfK/MMgWPPyOvXv39urQgVGJp6en16lThz8Wu9eZ/pphXsuFwKvO1Dp0
fZgLgdoBJshTlXiO3+QigIeulWFg84JE1RzqFVVxRiUOSvpk1apV1apVe/vt
ty9evCiz/c2bNx9++GHhDsN2N30C9lCVl4kTJ/IXXrBgQeMfWRg8eLCw/fXr
191tTJ+DZ/Be6MaNG6tXrz558mTJjzxlZGQ88sgjQvtsd3fb9+zZc8SIEefO
nZNpnImMjBQaZ3OBu431deO6deuEt4mYjh076viuJf199tjYWHNN0a97ePxt
lxdffFHYZfPmzd4eN/ByYUz5MlXVGGCrkSpVqvDtsJWnzF8iFi5cKJwAOyWv
Dh0AlTgbbC1atBD6YdasWaYbzGu54HnbmVqHrg9zwVM+wAR5rRL3k1wE8NC1
OAzsXJAoXEdJUhhnVOKgpE+cX2YpUaIEq7xOnjxpsPGBAwfoL/SVL1/+7Nmz
pk/AHqrykpiYKBR6TZs2vXr1qsuNly1bJnwKy/i9X69WVs4fjAgODn7ttdeM
n1F59OjRzp07C41XrFjR3ZkzVatWzffXlNevX7/Dhw8bNH7mzBnhw1RMrVq1
0tLS3O2iqRtXr14tbMkMGjSI/9EKVe7evVujRg3+QA888MC9e/fMtXbr1i0W
QL61oKCgpUuXutyYTfFsqhKutFWrViaOG3i5MKZ2map2DLAUC5dZs2ZN429Q
Hj9+XOj2cuXK/cfLvybk6ko8MzNz6tSpRYoUEbquWbNmWVlZppvNa7lwMN2Z
Woeur3LhoGmACfJaJe4/uQjUoWtxGNi2IFE7h3qkPM6oxEFtJe5QqFChHj16
fPjhh3v37mV3S7ZBcnIyq+O++eabZ599lpY5DCt/1F2TLgrzQn8Vq3bt2itX
ruTLvbNnz44aNUroLta3xh+QNleJOxQuXDgiImLu3Lmsav7zzz/ZBuzGwmpk
NqcPGDBA+GSXw6ZNmwxOxlGJO7GlwuTJk/ft25eSkuLYgEV+9+7db7zxBr2t
Mbt27bK/G4V32h2ivSfztTX67Dt385Qk1r305Lt16/bbb785t2GvKQtjhw4d
hM0KFiwo+U0uQeDlwonduC4Sw4cP59vp378/3SY1NVXyktWOgRs3bgg/mMuU
KlVqwYIFbKkjbMwWMDNmzBC+D8IsWbLE4BBa+0RT4/Hx8eHh4aNHj2ZD9PLl
yywC7P526NChzz//fOzYscIP7jiEhoayW59Mn7sTqLnQ1Jlah67uXPhkgAnM
VeI23OIEgZeLXD10HTQNA3sWJMrXUTbHGZU46KjEBazIYvc9gw1eeuklhVek
j8K8XLt2rXr16rQrQkJCWMzbtm1bs2ZNl5XvhAkTjFu2UokLihYtympzgw1e
eeUV45MRKnFeUFAQa9+gcZnvB+noRpeVuAmRkZHGJ8/mPmGGbdy4cXZ2tser
NsCm5ieeeMLl+bC5u3Xr1mwwuOv2f/zjH+YOGni5cKLLA0nPPPOMzPXqGAPf
fPONyy5iLQ8dOjQ2NpZ1xfTp09n/DgsLo5tFRUXRBZ5tfaKp8f379/Mbu+wf
HusZ60+ECNRc6OtMrUNXa+M+GWACc5W47lscFZC5yL1D10HTMLBhQaJjDrU5
zqjEwYZK3FjLli2vXLmi8Ir0UZuXuLg44dkUHvXp08fjHVVhJW6sTZs2Bh8d
dzCoxI316tVL8i135d1oWyUeExMj7LJhwwaZSzbGJqZWrVp5dar58+efNGmS
6SMGXi6chMWtPDaAZS5W0xhYuHChx8WDS3379vX4Owha+0RT48LKyhhbH54/
f96rDncpUHOhtTO1Dl19jftkgAnMVeK6b3FUoOYilw5dB33DQPeCRMccanOc
UYmDkj7ZtWtX7dq1vcqaw+jRo2/evKnwcrRSnpcff/wxPDxcpqPYrWnYsGHp
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
4LcPCgpaunSpy43ZdMkmFKEnW7VqZXBKLlmc+Fg/CNdYs2ZN4y+4HT9+XBgt
5cqV+w95j1pfyx4FXi4Ed+/erVGjBr/vAw88cO/ePW8v0GH16tXCmTODBg1i
q2hzDcrz20pcX58gF2pzUbVq1Xx/VTH9+vU7fPiwwZZnzpwRPnzL1KpVKy0t
zSdXKs/bBba+09Y3hyIXCnPhw85Ue0tXO9NpXaH5ZPknQCVujsKqc9OmTflc
YeX2+fPnhY33798vDG82JNauXWvxHJRQW4mzmeIEMWTIEP7a2QxOt7l8+bL1
o+umMC/0B3pq1669cuVKfuV59uzZUaNGCXePQoUKGX9W01wl7lC4cOGIiIi5
c+eyJdaff/7JNsjKymILKnaHGTBggPDJLgcWBJ807jB58mS6V7du3X777Tfn
NuwobInSoUMHYTO2mDR+4zo5OfkiMXz4cL6R/v37021SU1PdtXnjxg3h90zz
/fWm3IIFC9hkIWzMpsUZM2YIn+3M99dnb+xs2aPAy4WAPgHJ3YwvQ/hTjkO0
94y/F6lj9OprWV+fIBdqc+GoxJ3YWpTdhNmNNCUlxbEBW8Xt3r37jTfe4H9Z
xmnXrl2+ulJ5JhbYmk5b3xyKXCjMhT2dqe+W7qR2psvRvELT2rgMVOLmKKw6
hUeg8ypVqjRhwoTVq1evX7/+nXfe6dy5c1BQkLANW3goqQ2tU1uJt2vXzl23
GGPzi/Wj66YwL9euXatevTrth5CQkKZNm7Zt27ZmzZouJ1Y2tIxbtlKJC4oW
LcqmfoMNXnnlFYMz0dq4A5vmnnjiCZe7s3mwdevW7NrZgVxu8I9//MO4cXr3
lvTMM88YNPvNN9+4fGUbN248dOjQ2NhY9gpOnz6d/e+wsDC6WVRUFJ3cdbds
LPBywWPrH2GVxfozOzvb9DW6rDpNiIyMNDiKptGrqWWtfYJcGLBYifPYOsfd
zdZB5luZ+q5UnokFtqbT1jqHIhcGvM2FDZ2p75buoHymy9G8QtPauAxU4uYo
rDqFAeDybuASm61mz56tpDBUQm0lzga/ZD8IWH9aP7puavMSFxcnPD7Coz59
+ni8XSusxI21adPG4HOGuht3YtNHq1atvGo8f/78kyZN8tiycJuV16tXL+OW
Fy5c6HLW9qhv377Gj6nX17KBwMsFLyYmRthxw4YNVi7Qnkpc3+jV0bLuPkEu
3FFYiRtjr77k3+Y0Xak8cwtsHaetew5FLtwxMV/o7kx9t3QH5TOdg74Vmu7G
PUIlbo7CqpN/cF+RIkUuXrwo/D6CSzVr1tyzZ4+SqlAVVOLylOflxx9/DA8P
l+kfdvcYNmxYenq6xza9mkEOHjxYp04db18sdjLjxo3z+BVOrY3zsrOzY2Nj
g4ODZdovXbr0t99+K9Os1onv6NGjnTp1km+T9eT69etlTltfy+4EXi6cLl26
JLyp3rZtW4tXh0rcJ32CXLjkbS5MfOwtNDTU257UcaXyTC+wlZ+2DXMocuGS
uflCa2dqXZDomOmcNK3QbGjcGCpxc1RVnSdPnuT7v2XLluxfXr16tX///u7e
E2Pz17Jly27duqWoKFRGbSX+t7/9TSYOVJ8+fawfXTcdeUlLS4uJialYsaK7
nmFzB7slevx6nRP9dUuPd9T9+/e//vrrTZo08fgyFS9efOjQofzXcDzS2jjv
4sWLTz75JH3uk1NISMiECRPkH8UsPGJR3nPPPSd5iM2bNzds2NC4tTJlysyd
O9fbR1fpa5kK1Fww06ZNE/bas2ePtStz0aY5bLoxOIq+0aujZXv6JAe5IEzk
ghU+o0ePbtCggceXo1ixYtHR0Y5vNPv8SuUJI1z+56E1nbYNcyhyITA3Xzho
6kytCxIdM51A+QrNtsbdsXKj4KESN0d4zv+rr77q/E9nz5795JNP3n777eHD
h48YMWLmzJlr1649fvy45SpQF7WVeGDTl5esrCyW4smTJ7NhExkZ2b17d7ak
ZJPv/PnzExIS1B7LQEpKytGjRzds2PDxxx+PHTu2d+/ePXr0YMP4o48+2rp1
67lz56x8aUhr4063b9/++eefP//8c3YIdmeOiIgYMmTIe++9t3v3bhueTW0C
e+l///337777js3L7NXv0qVL69ato6KiJk2atGrVqiNHjty5c8ffWhYEfC4g
kCAXqiQlJR04cGD16tWzZ88eM2ZM3759u3Xrxv7Jzur9999nV3337l2Lh/CT
K/WWptPWOociF2rPxJ7OzHW0rtBy3fLPAZW4OcIDGxcvXqyq1rMfKnF5NucF
IFdALgAo5AKAQi4AeKjEzRG+HXDkyBFVtZ79UInLwwwCQCEXABRyAUAhFwA8
VOImpKSk8A8HKFOmjMJaz36oxOVhBgGgkAsACrkAoJALAB4qcRMOHTrE/0G8
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
16ZPn96gQQPJUVGqVClWF7i891KZmZlr167t1q0bqykk22eL9jlz5ty5c8dE
DyQkJAwaNIidofEhHnnkEYNGevfuLXmqxtq2bevzDnHKO7lQMgZ4169fj46O
DgoK8nil5cuXZysHr14prY3r6xO1jWtNnLG8kwuHrKysMmXKOM/h73//u5XW
lF+p1slIhok51IejV5/Ay4XWl8mHY8B6oj/99FOLp33y5Elf9cnZs2f79u3L
v6vjEqt6fvjhB297hodKHFT1Sb9+/UwEoVKlStu3b1d1Lbopz8vo0aPl+4qt
lg8dOqTkuN7atm0b/36gg0wl3r9/fxOjokqVKgcOHPDY+IoVK0w0zrRo0SIx
MVH+8jMyMqZNm1aiRAmZxn1YidvWIYK8kAuFY8Bp6dKlJUuW9OqVqlq16h9/
/OHzxvX1ifLGA6kS98Nc8Nhl8idgpRLXcaVaJyOPzM2hqMRl+DwXgVqJW090
7q3EN23a5PEdYN7AgQNNf2odlTj4thLP99dMl1u+Qq42L2yd6W1fVa5c+dKl
S9YP7ZXjx4+HhITQk9FXiTPVqlXzeFszXXgyjRs3Tk9Pl7n8mzdvNm/eXL7l
3FiJ5/OmQ6iAz4XaMeCwePFil2+2FyhQoHr16vXr1y9evLjLxtl/SklJ8WHj
+vpER+MBU4n7YS54R44cqVq1Kn9005W4pivVOhkZMz2HohL3yB9yEZCVuJJE
59JK/IsvvvD4p3CqQYMG/zH1PS9U4qC1Ei9VqlTLli0HDBgwduzY559/vk2b
NvRtYaZLly6pqamqrkgfhXnZu3cvTXqlSpXGjRu3ZMmS1atXx8bGRkREsJWz
sE2rVq1UREFWUlLSAw884PK2Y7oSL126NBsJgwcPnjBhwqBBgx599FGXn6Z+
/PHH79+/b9C4y8KTNdWwYcM+ffq89dZb48ePZ+3XqFHD5fmzrvZ4/qwiePjh
h13uzoSGhnbv3n3UqFGOpyI4PsdlXHGwE3PXmlfkK3G1HeJSYOdC+RhgTpw4
QT803qFDhx07dty7d8+5GVsuspeM/l2YRcPgC/5aG9fXJ5oa15o4Y4GdCwc2
VOLj4z/44AP6AQxzlbi+K9U6GRmwMof6cPTqE3i50Poy2TwG1CbaeiX+22+/
2dwnbFjSmwCrZaKioqZOnbpmzZpFixZFR0fXqlWLNvj000+buFGgEgcdlXhY
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
q+UDv//++032ysnJOeGEE+QdFyxY4LkPcR04cEB5Ro24bZB/1iqESrxXr17y
S4giIqiWn3zyyUJ/NXfu3Lhbfvvtt8qW4v8JqhuubNy4UTnp4iiCatx8QBKK
Xi6szgFxP68/tf7MM89cuXJlfrusX79efpRZ4cKFs7KyQm7c6pikSOiCTVz0
cuHM5317qh2ph8UouWuo1fUiQAUtFwqrpynYxqNRiZuPyR133CFv1qJFC/NX
UX4W9rnnnjPfl0ocSRmTTZs2KY/OaNWqVWiv7lkgealXr5584E888YThjsqv
HE6YMMFzH3RihVL+LiZuPHbu3ClvY7sSz87OVj7U16ZNG//NLl68uG3btoX+
yuEnaZRP6oouxT7AtmbNmmnTpolreLdu3cRQNGzYsHnz5p07d+7fv7+46po8
odqtrl27yj2pUqWK+XPRHbgdkISilwvbc0D+5fc8RYsW7dOnj/67pYcPH1Z+
krh9+/bhN251TFIkdMEmLnq5cObzvj2ljtTDYpT0NdTSehG4gpYLhdXTFGzj
gVfizZo1+/7777/44otFixaJs5+VlbV7927P3TNkPibKn84bNWpk/ipNmzaV
93X1BgiVOJIyJkrAhcmTJ4f26p4Fkhfld0zMP4R53nnneU56Qvfff7/cePny
5VevXq1sY7sSf+qpp5RZ8c4777htZOvWrePGjRsxYsS9997brl27Bg0aFNL0
7t3b4eeJxb/KG7dq1erLL7+84YYblIebKYoUKSK28fY967gyMzOVH4Z29S5r
Hv8DklD0chHCHBCnI24jxYoV69SpkxjJWCkqLjvXXXedvEH9+vWV2/twGrc6
JqkQuqASlyd6uXDm8749pY7Uw2KU3DU08NlrT0HLhczqaQq88cAr8bhKlChR
o0aNyy+/XFQBhw8f9tNhnasxUZ7qJnZMuNTmad26tbyvw0/b66jEEf6Y/PDD
D8rDE2rWrJn6XxL/LaBKvFSpUvKxiyuV4Y4tWrSQd3z44Yc990GhPDFSXBgX
L16sb2b7k3UVKlSQ269du7aHL4nrTwJUZpq42ju30KxZM4cWnJUsWdLbT3Lr
rrrqKmU0vBXL/gckoejlIpw5IBZrh0qzWrVqoqBW/vRTtWpVw0fBBN641TFJ
hdAFlbg80cuFM5/37alzpB4Wo6SvoYHPXnsKWi5kVk9T4I2HU4nLqlSpIl7U
8InlJlyNicij0h/zd3iaN28u75jfg1ziohJHyGOyc+fOxo0bK7N9zJgxIby0
f/7zcvz4ceXY33rrLcN9r7zySnnHvn37euuD4oMPPihatKjccn6lmb27iEOH
DikfkS3k9e1ch8JTXBtNPgpVp06d/FowNHz4cA89l+mP7Z06daq3pvwPSELR
y0Voc0CMmPJ8p/yIsvrOO+909eydYBu3OiZJD12AicsTvVw483PfnjpH6mEx
SvoaamP22lPQcpHH6mmy0Xj4lXhM5cqVv/nmG5+dz3U/JgcPHixTpoy8vfif
P//8s8lrKX8Td/W8eipxhDwmyuOaC/35fEJRDoTw0v75z8v+/fuVwzd/TFab
Nm3kHbt37+6tD7LMzEzlC/uDBw/Ob2N7lbjy+D7hoosusvEn4GLFiokZ6Pwo
aeVjb7Jy5cqdd955119//T//+U/xnxdffLHywac84t7M62D8v9sM5d0q8aLe
nmqeG8SAJBS9XIQ2B+bPn1+9enWHE5SnVKlSbidVsI1bHZPkhi7YxOWJXi6c
+blvT50jdbsYJX0NtTR77SlouYixeposNZ6sSlwoXbq0z2Lc25jccsstSk8q
Vaq0ZMkSh11WrFghLhrKQ+FcvcNDJY4wx0R/XLO4y/ruu+9sv25Q/Odl7969
ygh88sknhvtee+218o7+f4Byy5Ytyo36rbfe6rC9pUpc+YlP4eSTT16/fr23
1vR3QXVi1jl8nLVEiRLK9mXLlr333nu///57feMNGzYMGjRIebaPIAb2999/
93YIU6dOVVqbN2+et6ZygxiQhCKWi9xQ5sChQ4c6duwob1+8ePGWLVsq78kr
rrjiijVr1iTsv43GrY5JckMXbOLyRC8Xzvzct6fIkbpdjFJhDbU0e+0paLmI
sXqaLDXuvxJ/4403ihYtWr9+/fbt24uL9tNPPz1p0qQ5c+bMnTs3IyNj2LBh
vXv3Vp6hl6dRo0by7w645W1MRNhLly6td0YkVzSYlZW1c+fO7OzszMzM9957
b9SoUfrnZ2Ic3o7TUYkjtDHR17hCf36myOqLBst/XsSFRRmBjz76yHBf5Qsv
99xzj7c+xOzfv79JkyZyg5dddpnz4zJs3EU899xzyoAULlx41qxZftrM+ZNY
rFevXr1kyZLRo0frjykrUqTIokWL9H0PHjyobDlw4MCETx9duXKl8mvIwuuv
v+6h82KG1KxZU26nefPmHtqR+RkQE1HKRW4oc+DIkSPKDWGdOnW+/vrr3D9/
COnNN9+85pprlM+75qlYsWJsy/zYaNzqmCQ3dDYSFxOxXCTk5749FY7U7WKU
CmuovdlrT0HLRa7l02Svcf+VeO6fP8/hvMHRo0ffeeeduI8KGTdunKeO+xoT
/TrgwdixY817SyWOcMbk3//+tz5X0+Xr4XkCyYtyD2y+Fv/973+Xd/T5Xq7y
xki9evUSfgU18LuIl19+WX+olKUnvs6dO7dkyZLyC51++un6Ietvthue608/
/VTZsW3bth76qTy9U1i6dKmHdhIyHBATUcpFbihzoEuXLvJmov7V/+62adMm
cSOkPNwypnTp0g7FuI3GrY5JckNnL3ERy0VCPu/bk3ukHhajVFhDQ1svAlTQ
cpFr+TTZazyQStxQTk6O/uOqF110kbfWfI7J+PHjnX+2I6GMjAzzl6MSRwhj
MnHiRH1WP/HEE5Zezp5A8qJ8p2zmzJmGO1566aXyjq4+/aIbPny43NqCBQvW
J3LuuefKu0yYMEH+14MHD7rqwOTJk/Xve44aNcrPQTnTf2f5vvvuU7Y5evSo
so35uVaWeHGi3fZQlCRKceStnDdkMiAmopSLXPtzYPny5Ur7n332WX4N7tmz
p1+/fsWLF1d2adq0adztLTVudUySGDqriYtYLhLyed+exCP1thglfQ0Neb0I
SkHLhdXTZLXxMCvx3D8/sqU/z3nLli1u2wlkTObNm3f++ecXMlCmTJm77rpL
+T+dv1quoBKH7TF57rnn9DXuoYcesvFatgWSF+UTla+88orhjvXr15d3HDly
pOc+5Gp3Ef656k9GRob++djHHnvMzxGZUJ7WUrNmTX0bZYmfM2eOYeMDBgxQ
jijhJ2wVAwcOlHcXwcnKynLVglsmA5JQlHIRY3UOKA9ZFf8zYbMff/yx/hXv
uDef9hq3OibJCp3VxEUvF8583rcn60g9L0bJXUNzk7FeBKKg5cLqabLaeMiV
uPDCCy8ooVi2bJnbRgIck/nz519++eVx0youGnXr1hUXgT179ixevFh5RVfL
EJU4rI6JEuQYscYF/kLhCCQvyjfLzP8KrLzLN2XKFM99yLVwF2H+K0JPPfWU
n939EHNPeV1xWpVtlCfwmI/z5MmTlcbXrl1r3reNGzcqj9+8/fbbzXf3xmRA
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
gv/777+LDcQlUVzeRSdvu+025TNpMXPnznXo/NChQ/VdWrdu/eOPP+ZtI15C
lLQtWrRQNhNLj+G3XPUHpuVXeiRke0AcRDUXlubArl27lN+0FcqVK/fCCy+I
AlPZWNxjjBo1SvnMnpCRkRF+4/bGJITGYwJMXEJRzYWwd+/eDRrld0u7dOmi
b7Nv376kHKnVxcicz0o8zNlrT4RzEWP1NFlq3EaiY5V4HjH5xRVeXKWzs7Nj
G4iKb9GiRQ899JBe1QoLFy5M1phkZWXVrVu3b9++Yopu3rxZLDriJurLL798
9dVX+/fvr/zmZky1atXE/ZW3l6MSh71K3IPrrrsuwEMLXIB52bFjR/Xq1fUR
KFu2rIh506ZNa9WqFbdcGjRokHPLKV6Je9C+fXu9caXwVJxwwgmiFHXY4O67
73buvChbrrnmmrj7irrmkksuEaOqfx0j5t///rfJeIq1Tymazj777JycHJN9
wx8QB1HNhb058Pbbb8c9CjEBevToMX78eNHbkSNHiv9eo0YNfbPOnTvrZXU4
jVvNhe3QBZu4hKKaC0F/J8TQjTfemJQjtboYmfNTiYc8e+2JcC5yLZ8me43b
SLRSictKlCiR35U8xvAxO5bGZMmSJXKDcaeQTKykfp41QSUOKnFzweYlMzNT
edxQQjfddJPDTXIMlXhCl156qcmnnsQV/uKLL3bVcuHChYcMGWI4ngMHDlR2
nz17tuG+SRmQ/EQ4F/bmwIsvvphwfY+rY8eOCZ9vb7Vxq7mw2niwiUsowrlQ
1gJz119/fVKONAKVeMiz154I5yLX8mmy17iNRDtU4gnbTPjhGatjolTizi65
5JL169f7eTkqcVCJmws8L8uWLatbt67JyIi7zZ49ex48eDBhmwWkEl++fLny
1EoTYhgHDBhg/t3AnJyc8ePHlylTxqTxk08++b333jNseePGjcp7wk2bNjXc
N65wBiSuaOfC3hxYuXJly5YtzU+WOL+zZs1KhcbtjYm9xgNPXEIRzoXVStzG
kaZ7JR7+7LUnwrmwepqsNm4j0c2aNXPbWrVq1cyXoVxrY2JYiVesWDEjIyPh
uzoJUYkjkDEZMmSI28TF1alTpwAPLXA28nLgwIGBAwfqv/6WR6wd4tpi/pUZ
/TeFg7pct2rVSm424U8VjxgxIpBZ0aVLl/xeQlwwH3jggXPOOSdhIyeeeGKP
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
y5Yte/755994441DhgzZvXu356NYv359nz59WrRocdppp8nDWLx48bp167Zq
1WrYsGHiJLpqU2w/c+bMAQMGiO41btxYzF55MleoUOHcc88VJ+7999/Pycnx
3PP8TJ06VR5nUY/4ae2FF17o878+/PDDoDqZa20dSWIuPv74Yz+JyDNr1izn
F0q7XKTdtSK0U6mLXi50Nq66+Qn2Cmav5999992gQYOaNGlSrFixvGYrVap0
xRVX3Hvvva+88or5u7hhzt4Au+2MXPjMRVqELuQLb9otczIqcQQ1Jnv27Jky
ZUrLli3ly7izWrVqDR8+fPv27UEdi2028jJ79uwqVaokHKt27dpt27YtqBdV
vPTSS4anLD8//PBD3JZ37NgxcuTIhg0bGrZTrlw5ccF0dRETdu7c2a9fvxIl
SiRs/9RTTxXXyT/++MO5waNHj86YMaN169biMm7Y8zp16jz99NMJWzY3ceJE
5SVEve+5tWPHjsnvif33f/93UP3MtbOOJDcXHTp0MDzvzpo2bRq3/TTNRW4a
Xitsn0oH0cuFzMbschDgFcxez9euXduxY0e5EIirfv36n376qUmD4czewLvt
jFzEeMhFGoUutAtvei1zcVGJI6gxefnll73N2MaNG//8889BHY5Vgeelb9++
5gMlLiNffvllIK+rsHfZ6dKli4fWqlatunTpUsPOT5o06aSTTnLV/mmnnSam
nEObb7zxhoduCxdeeOGWLVtcnwDNRx99pL+j5acSFzNWbirFK/Gk58L2XUSa
5iI3Da8VUarEk56LPJZml4OgrmD2ej537txy5cqZN3v77bcn/Ph3CLPXRred
kQuZeS7SK3ThXHjTbpmLi0ocSa/EhYYNG+7YsSOoI7In2LyMGDHC7UBVqVJl
48aN/l9akWp318Lpp59usty/8sorcd/JL1KkSPXq1Rs0aHDiiSfGbV/8U3Z2
dn7Neq7EhbPPPvvgwYPeT8afnxIsW7as3rLnSvzbb78Vq4/cVCpX4qmQi9Ss
xAslOxe5aXitiEwlngq5iLE3u/IT1BXMXs9fe+21hH9T1ok7n98cPzFre/Za
6rYzcqEwyUXahS6EC286LnNxUYnDaiVerFixM8888/rrrx8wYIBI8a233lqj
Ro2487Zv375BHZE9Aebls88+068hlStXFgOVkZExffr08ePHt23bVlxSlG0u
vvjiIKLwF/4vOz/++GPcluPeXZ988smXXnpp9+7dBw0a1K1bt8suuyzuh8Cv
vvrq48ePO3T7+++/1z+S1KJFi48//vjw4cN5m4k198EHHyxdurTefn5f7o5b
iYtONmrU6KabbvrXv/4lGhQ9r1mzZtzRECfR87nYunXrGWecEbdZt5W4OLqs
rKwnn3xSf9M4ZSvxFMmFOMtxT4Fbrirx1M9FbhpeK2yfSgfRy0Wu5dmlCPYK
Zq/n4vzq07JcuXKdO3cePnz4O++8M3HixH79+tWuXVufVzfccINDnK3OXnvd
dkYu3OYiHUNn+8KbpstcXFTisFGJi2kvKuvly5fv3r1b2Wzfvn2zZs1q0KCB
Mm/F9T/1n6weYF6aN2+ujED//v3lC0iMiHPdunWVLWfPnu3z1RXKZUcsUl+7
4fAgFPnuWtStzz33XNwPb//yyy+dOnXSl9RXXnnFodutW7dWtheTML+Nt23b
JupoZfs5c+bE3ViuxMuUKSOW9e++++7IkSPKZuJWZMGCBWeddZbSrCgfvD3c
5sCBAxdeeGGhfBhW4vfdd98FF1wgRlt+1JUiZSvxFMmFmKWuIpBn5MiRcpdM
KvE0ykVuGl4rbJ9KB9HLRa7l2RVj6QpmqecHDx6sVq2asmXLli31v7r+8ccf
oijQv3b02muv5dcNe7PXaredkQu3uUjH0Nm+8KbpMhcXlTiCrcTLly8/aNCg
DRs2OG+8Zs0a/cIocuGnAyEIKi8LFy5Ujt3hr6jbt2+vXLmyvHHjxo39vLpO
uexcf/31QbUcu7sW18DJkycfPXrUeeOBAwcqwyJ2z29jcZ1X3ugWdwvO7YtZ
V6FCBXmXhx9+OO6WsUpcbDxkyJCEP4MiLvL169dXev7JJ58476XLycm54YYb
CuXPsBL/29/+5tBITGpW4qmWC7eOHz/epEkTuUudO3eOu2Wa5iI3Pa8VHpif
SgfRy4Xt2RVj4wpmr+ejRo1S+tarVy+Hvxd/+umnSlV75plnBvvTGyazN4nd
Jhe5bnKRvqHzwPDCm77LXFxU4ghqTFatWvXMM89s3brVcPt33nlHifmECRP8
dCAEQeWlW7du8oHXqlXL+XGOU6ZMUcZKjLafDijsXXZEQTp79mzDj7EdOXLk
ggsukHty1lln5bfxjBkzlDHZvHlzwpfo37+/vMvll18ed7N169ZNnDhx//79
Jt0W5s2bp3TGw98LxF2E3MIpp5xy6qmnyv9P5CvxVMuFW2+++abcmaJFi+b3
EbU0zUVuel4rPDA/lQ6ilwvbsyvGxhXMXs+VL9yJcm/fvn3OzT799NNKZ2bO
nOnqcJyZzN4kdptcxBjmIn1D54HhhTd9l7m4qMSRrDHZtGmTEqUnn3wyzA54
EEhexK2m8t6sWOCcdzl27JjynZ0RI0Z47oAu5MuOg9GjRyvX4fzW1vHjx8tb
VqpUyaT9V199Vd6rdOnSgXQ7Oztbmcxjxoxx1cKLL74o7168eHExx5TF0bAS
b9myZaFEUrAST8FcuHL48GFxKyh3pnv37kE1njq5SMdrhVtBncro5SKcq66N
K5ilnmdlZSkdc/7mSMyRI0dOP/10ea8OHTq4OhwHJrM3ud0mFzGGuUjf0Lll
fuGN2DJHJY5kjcn27duVmE+ZMiXMDngQSF6+/vpr+agLFy68adOmhHtdc801
8l7Nmzf33AFd6txdz58/X5kVmZmZcbdUvkxUpkwZk/bnzp0r71W2bNlAui1K
AOWLqzNmzDDfXRy18sG/SZMm5WpvUxtW4mI5+13z4IMPyk2lYCWegrlwRfmD
0QknnGDSf0Opk4t0vFa4FdSpjF4uwrnq2riCWer5hAkTlEm4Y8cOk5aHDRsm
71W1alVXh+PAZPYmt9vkIsYwF+kbOrfML7wRW+aoxJGsMVmwYEGhvxL3UWF2
wINA8vL888/LR127dm2TvcaMGSPvVbJkyQC/WZY6d9effPKJMivWrVsXd8tp
06YpWyZ8JomQkZEh73LhhRcG0u0lS5YonVm7dq3hvqtWrVJ+s+yRRx6J/ZO3
Sjyuxx9/XG4qBSvxFMyFub1795YvX17uSf/+/QNsP3VykY7XClcCPJXRy0US
r7o+r2CWev7oo4/KG5QrV86wP8uXL0/i7E1ut8lFjGEu0jd0rri68EZsmaMS
R7LGpHPnzvJUP+200/bt2xdmBzwIJC/9+vWTD/zaa6812WvFihXKlefXX3/1
3AdF6txd6x/SPnbsWNwtlbfEhbp1627bts25fXFo8i533XVXIN2+/fbb5War
Vatm+HXXLVu2KN/XE7nI27dAVeIpmAtzyt8OxJ3trl27Amw/dXKRjtcKVwI8
ldHLRRKvuj6vYJZ63rNnT3mDJk2aGPbn8OHDogyU9xXFhasjistw9ia32+Qi
xjAX6Rs6V1xdeCO2zFGJIyljorwlK0yfPj20V/cskLxcffXV8oHff//9Jnvl
5OSccMIJ8o4LFizw3AdF6txd9+rVS7m65reluOvWn1h+5plnrly5Mr9d1q9f
L/98auHChbOysvz3+cknn1S6MXfuXJMdDxw4oDx1SpTe8s+fFahKPAVzYWjj
xo1KH8SUCPYlUicX6XitMBfsqYxeLpJ41fV5BbPU8zvuuENusEWLFuZdUn7+
8rnnnnN1RDrz2ZvcbpOLXDe5SN/QmXN74Y3YMkcljpDH5MMPP2zTpo2SoE6d
OoXw0v4Fkpd69erJx/7EE08Y7qj8+ueECRM890GhXHaaNWv2/ffff/HFF4sW
LRJHKq5Xu3fvDuq1HGRnZyuf0xZTxWF7+Ve/8xQtWrRPnz76j6IePnxY+anu
9u3b++zw4sWL27Ztq3TA8NeUxC2B8g6tKCV27twpb1OgKvEUzIWhrl27yh2o
UqWK+VP3TaRULtL0WmEo2FMZyVwk66rr/wpmo+fKH/IaNWpk3p+mTZvK+/p/
+8589ia32+TCbS7SN3SGPFx4o7TMUYnD6pj88ssvTz311JAhQ+666y5xp6Rc
PGN69OghZnXgL21DIHlRfpoq4QM/85x33nnyjgH+3U257MRVokSJGjVqXH75
5ZMnTxaXtaBeWiamivKi77zzjvMu9957b9zeFitWrFOnTuI0xb4FJs7ddddd
J29Qv359pexNaOvWrePGjRsxYoR40Xbt2jVo0EB/3d69ex85csSktfvvv1/e
sXz58qtXr1a2KVCVeArmwkRmZqbyw6b+/7alSKlcpO+1IqHAT2VUcxHmVTdP
IFewwHuuPGNKzB/zA2zdurW8r8NvYZtwNXuT221y4SEX6Ru6hDxfeCOzzFGJ
w+qY6M9VkIlpPHHixMBf1J5A8lKqVCl5EETkDXds0aKFvOPDDz/suQ8Kk8uO
rEqVKuISbfi0VUMbN26sUKGC/Cq1a9c2+eKnuBNQnlsuq1atmrhcK28BVa1a
1cNzZubMmeMwJjVr1hQXZMOmlEfXikv64sWL9c0KVCWegrkwcdVVVymT1vCt
GEOplou0vlY4C/xURjgXoV118wR1BQu25+KarLRgXhI2b95c3tHnQ0tczd7k
dptcGM6uMBuPK5xK3M+FNxrLHJU4klWJd+vW7ddffw38Fa3yn5fjx48r4/DW
W28Z7nvllVfKO/bt29dbH3RuLzsxlStX/uabbwLpwKFDh5TPDhVy8wcpcTqU
557lR1y077zzTm+PYHKoxMXdiPmnlT744IOiRYvKu+dXwhecSjw1c5GQ/vju
qVOnBth+CuYi3a8V+bFxKqOdi3CuunkCvIIF2PODBw+WKVNG3kX8z59//tmk
G8ofl/382oLb2ZvcbpMLw9kVcuO6ECpx/xfeCCxzVOJIViVe6M/vdHTu3HnN
mjWBv64l/vOyf/9+ZRAMn+4lKN+v7969u7c+6LxddoTSpUsHcoMtLo9Kyxdd
dJH5+6Lz58+vXr26SYdLlSolCmFvnXT+m3ixYsVuv/32hE/vzMzMPOmkk+Qd
Bw8enN/GBacST81cOBN3g40bN5Zf+rzzzjN8Zr6hFMxFul8r4rJ0KqOdi3Cu
unkCvIIF2/NbbrlF2atSpUpLlixx2GXFihViGiuPqPJcEnqbvUnsNrkwn11h
Nq6zXYkHcuGNwDJHJQ6rY+JcvMSULVt2woQJgb+0Df7zsnfvXuXwP/nkE8N9
r732WnnHAH+w+I033ihatGj9+vXbt28/aNCgp59+etKkSeLcidUtIyNj2LBh
vXv3Vp5zkqdRo0by4749UH7iUzj55JPXr19vsq946Y4dO8r7Fi9evGXLlsob
/oorrrhizZo1bvupv3mrK1eu3GuvvZZfC1u2bFGWjFtvvdXhFQtOJZ6auXA2
depUpc/z5s0LsP3UzEX6XiscWDqVUc1FmFfdPIFcwWz0XEw/cfut7yWu3mJe
ZWVl7dy5Mzs7OzMz87333hs1apT+iY4Yh7dknXmbvUnsNrmQGeYifUPnwOeF
NzLLHJU4bI9J9p82bty4YsWKBQsWDB06VH9uW+HChT/44AMbrx4s/3kRCVWO
/aOPPjLcV/k2zT333OOtD3ElfOLE0aNH33nnnWbNmulXnnHjxnl+3eeee06f
DLNmzTLZ98iRI8qqWqdOna+//jr3zx8Ie/PNN6+55hrlc+B5KlasGNvSlZw/
iduA1atXL1myZPTo0fpz24oUKbJo0SJ93/379zdp0kTe8rLLLnMe9oJTiads
LvIjOlyzZk35dZs3bx5g+6mci3S8VjiwdyojmYvwr7ox/q9g9nquz0wPxo4d
62FY/MzeZHWbXCgS5iJ9Q+fA54U3SssclTiSMibTp08vUaKEPHWrVq26fv36
0DrgTSB5US4O5uXV3//+d3nH0P72JxN1qP67XRdddJG31l5++WX9aRvmX/ns
0qWLcnXV/zq2adMmsZqUL19ev1qWLl3a8wolmzt3bsmSJeWWTz/9dP27SMqf
8+rVq5fw+0oFpxLPTbdcKA8fFpYuXRpU49HIRUpdKxzYO5WRzEWyZpf/K5jV
no8fP97hyVEmMjIy3B5Rru/Zm5Rukwt9GJ1nV/qGzoHPqRulZY5KHMkaE3Fn
pcze3r17h9kBDwLJi/I14ZkzZxrueOmll8o7ev4wm08HDhxQvtojbNmyxW07
kydPVn66Qhg1apTh7suXL1f2/eyzz/LbeM+ePf369StevLiyS9OmTd12Oy79
py3vu+8+ZZvhw4fLGyxYsGB9Iueee668y4QJE+R/PXjwoHkPU78ST6Nc7N27
V1ncxVocVONRykWKXCscWD2V0ctFEmeXzytYCD2fN2/e+eefX8hAmTJl7rrr
LuX/dP6OdlyBzN7wu00uXM2u9A2dA59TN2LLHJU4kjgmrVq1kqdujRo1Qu6A
W4HkpUqVKvJRv/LKK4Y71q9fX95x5MiRnvvg0wsvvKBcdpYtW+aqhYyMDP2D
Q4899ph5C8oTXMX/TLjLxx9/rH+ByHwFd6Y8B6ZmzZrKBkol7p+rCZD6lXga
5WLgwIHyK4oiMSsrK5CWo5eLVLhWOLB3KnOjmIskzi6fV7DQej5//vzLL7+8
UDxiGtetW1csBKI0WLx4sTLx9u/f7+qIcgOdvWF2m1zkupld6Rs6Bz6nbsSW
OSpxJHFMHnroIWX2igkQch9cCSQvypeFzf+yo7yFOGXKFM998Ombb75RTty7
775rvvtTTz1VSCMWevMWxC2BsvuHH35osuOsWbOUHXv06GH+ug5EaaC0LCaM
vEHglbirEUv9SjxdcrFx40bl6cG33357IC1HMhdJv1Y4sHcqYyKWi+TOLj9X
sPB7LurT1atXL1y48PXXX3/ppZdEnfvLL7/IT/gfMWKE3GyjRo3MDyfGxuwN
odu55OJ/mcyu9A2dA59TN3rLHJU4kjgmb775pjJ7MzMzQ+6DK4Hk5eabb5YP
uWfPniZ77d69W/k+1/Llyz33wSf9eSmGz006fvy4uJgr+xYpUkQs+q468MUX
XyiNmP9u5jnnnCPv2KJFC1cvnZ/33ntP6dLatWvlDajEnaVLLrp27Sq/XMmS
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
d9/tfILMeavEW7RoYTauqhtvvNFbPyOZizziFkVZ9MUEy8nJ8XyMaZqL3HS+
VsQEfiqdRTIX9mZXHktXMKs9X7Jkibxx3BeSiZdw+/QDG7M3hG7ryIW+mfPs
St/QxdiYuum4zOWHShwhVOLOLrroom3btgV4RPYEm5fMzMyTTjrJ1VjddNNN
Ca+oAVbizq6//nrnt0NDuLt+8cUXE948xNWxY8f8nm3uXIk7u/TSS91+MMmB
t0pc2cucOKHe+hnJXOQZOHCgsuPs2bP9HGCa5iI3za8VuRZOpbOo5sLS7Mpj
7wpmr+dKSevskksuWb9+fcJxUNiYvSF0W0cuFCa5SN/Q5Vq78KbdMpcfKnEE
MiYLFy6sU6eOh6nbt2/f3bt3B3g4VgWel2XLltWtW9dkoAoXLtyzZ8+DBw8m
bNPtCtKsWTO3Z61atWqzZs1K2JNw7q5XrlzZsmVL89bq1avn3Pnly5crz4k1
IU7QgAEDgv1aa8GsxHNTIxcxGzduVN4Db9q0qc+jS9Nc5Kb5tcLGqXQW4VzY
mF15rF7BLPXcsKStWLFiRkZGwjJQZ2n22u52XOQij6tcpGnorF5402uZyw+V
OAIckwULFvTr169Ro0YJ522pUqW6du36zTffBHIIobGRlwMHDgwcOLBSpUr5
jZVYO8SFy/y7J/qPLSa87omFrG/fvg0bNjQ5ceIUx74undCIESMSNmiiS5cu
CV9r3rx5CSfeKaecMm7cOMNiWdyiPPDAA+ecc07C7p144ok9evT48ccfTZp1
pVWrVvILGf5oprKXuVtuucVbP6Oai9x4c3jx4sX+jiy9c5G+1wobp9JZhHMR
E/jsignhCmZjvXBoqkSJEuKgJkyYsHfvXvNxkFmavba7HRe5cDu7QmjcXuhC
uPCmyzKXHypx2BiTTZs2LV269K233ho1alSfPn3atWsnYi6qlZEjR7777rur
Vq3Kzs4O6rXCZC8vx44dE3XW0KFDe/Xq1b59+6uuukrcUopKUCyCYjCDfS0H
W7duFSdu+vTpY8eOvf/++zt27Ni6dWvxn6JXTzzxhDjqQ4cOhdYZt8QY/vTT
T++//7643ooOX3nllZdccknnzp2HDBkybdq0b7/99o8//vDQrJirK1eunD17
9rPPPtu/f/8OHTq0adOmd+/ezzzzzPz589etW2fve6bpIvK5SGuWcpHW14pw
FIRcWJpdIQi252Jj0dRjjz3Ws2dP0YhYJsR/GTx48PPPPy/WDs8Pw7QtKd0m
Fz5zkb6hsyetlzkqcTAm5kLOC5AWyAWgIxeAjlwAMipxMCbmWEEAHbkAdOQC
0JELQEYlDsbEHCsIoCMXgI5cADpyAcioxMGYmGMFAXTkAtCRC0BHLgAZlTgY
E3OsIICOXAA6cgHoyAUgoxIHY2KOFQTQkQtARy4AHbkAZFTiYEzMsYIAOnIB
6MgFoCMXgIxKHIyJOVYQQEcuAB25AHTkApBRiYMxMccKAujIBaAjF4COXAAy
KnEwJuZYQQAduQB05ALQkQtARiUOxsQcKwigIxeAjlwAOnIByKjEwZiYYwUB
dOQC0JELQEcuABmVOBgTc6wggI5cADpyAejIBSCjEgdjYo4VBNCRC0BHLgAd
uQBkVOJgTMyxggA6cgHoyAWgIxeAjEocjIk5VhBARy4AHbkAdOQCkFGJgzEx
xwoC6MgFoCMXgI5cADIqcTAm5lhBAB25AHTkAtCRC0BGJQ7GxBwrCKAjF4CO
XAA6cgHIqMTBmJhjBQF05ALQkQtARy4AGZU4GBNzrCCAjlwAOnIB6MgFIKMS
B2NijhUE0JELQEcuAB25AGRU4mBMzLGCADpyAejIBaAjF4CMShyMiTlWEEBH
LgAduQB05AKQUYmDMTHHCgLoyAWgIxeAjlwAsoJciQMAAAAAkFxWS+AYKnEA
AAAAAPJYLYFjqMQBAAAAAMhjtQSOoRIHAAAAACCP1RI4JumVOAAAAAAABQqV
OAAAAAAAYaISBwAAAAAgTFTiAAAAAACEiUocAAAAAIAwUYkDAAAAABAmKnEA
AAAAAMJEJQ4AAAAAQJioxAEAAAAACBOVOAAAAAAAYaISBwAAAAAgTFTiAAAA
AACEiUocAAAAAIAwUYkDAAAAABAmKnEAAAAAAMJEJQ4AAAAAQJioxAEAAAAA
CBOVOAAAAAAAYaISBwAAAAAgTFTiAAAAAACEiUocAAAAAIAwUYkDAAAAABAm
KnEAAAAAAMJEJQ4AAAAAQJioxAEAAAAACJNJJZ6Tk5Os7gEAAAAAECWixM6v
Et+6dWve/3/06NFk9RAAAAAAgCgRJXZeuS1Kb/mfdu7cmfdPBw4cSFYPAQAA
AACIElFi55XbovSW/2nfvn15/7R79+5k9RAAAAAAgCgRJXZeuS1Kb/mfDh06
JH9wnQ+oAwAAAADgk/zRdEGU3vK/Hj9+fNu2bfxZHAAAAACAoMh/EBdFtyi9
lQ3kz64Lv//+e1L6CQAAAABABPz2229ylR33mWyiNt+xYwfFOAAAAAAAPomC
Wq6vRbmt/0E85ujRo1u2bJE33r17N98ZBwAAAADAkCii5Q+lC6LQdq6sDx48
+H80opEDBw6IHXNyckLrPAAAAAAAaUEUy6JkFoWzUoPHiEI7YQtiG+Uv4wAA
AAAAwC1RXJuU4TGille+Mw4AAAAAAMyJstrt172PHz9+4MAB+afNAAAAAABA
QqKUFgV1fo9oM6nHDx06tG/fvp07d27dujXZRwMAAAAAQCoSJbMonEX5LIpo
zzU4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAkND/BYlN+es=
    "], {{0, 416.}, {663., 0}}, {0, 255},
    
    ColorFunction->RGBColor,
    ImageResolution->144],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{331.5, Automatic},
  ImageSizeRaw->{663., 416.},
  PlotRange->{{0, 663.}, {0, 416.}}]], "Output",
 TaggingRules->{"Magnified" -> True},
 CellLabel->"Out[6]=",
 CellID->695960409,ExpressionUUID->"bd50db5b-4cd3-45c4-ada4-88ea26233594"]
}, Open  ]],

Cell[TextData[{
 "Exchange levels 1 and 3 of an ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Association", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Association",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "11e564d9-59c0-4bc2-9d2e-04a4a3a4935e"],
 " of three levels using ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TwoWayRule", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/TwoWayRule",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "1b18323b-7ac3-450c-b948-9d7a37ce9e8d"],
 " to express a permutation:"
}], "Text",
 TaggingRules->{},
 CellID->897630874,ExpressionUUID->"2648a975-2bce-452c-9bc4-cf5e040fbc3f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", 
  RowBox[{"AssociationTranspose", "[", 
   RowBox[{"asc", ",", 
    RowBox[{"3", "\[TwoWayRule]", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[7]:=",
 CellID->664521864,ExpressionUUID->"5945cb67-249f-44d5-a687-8718749e5999"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsfXm8jdX+/y5E5nkoIhKZZyG3VMosQ4qi4kqGBoqoNCkkQyHdiIylLiFp
MHZ/yFhokLnv5RwOxzld5+t7COc8v/d93q+9Xsse1lnPdji7sz/vP85rn2ev
Zz2ftdZ7fdb7s5611r6x99OdH7/a5/M9mwd/Oj/2fIshQx4b0aUw/rn/qWf7
93uq799bP/Vc3359h9zaOwcuzr7K56uJD//97FyMc+fOpaam/p9AIBAIBAKB
IJMAcQWJ5YTH2bNnExMT4+Li/v3vf/+PQCAQCAQCgSCTAHEFiQWhBbkVrMFO
nz4dHx9/5MiRhISEP/74I0UgEAgEAoFAkEmAuILEgtCC3ILoCpgHi3Nx6tSp
tLQ0w4yZQCAQCAQCgSACQGJBaFFxqTmx9PT0xMTEw4cP46usNU8gEAgEAoEg
ewNyC6IL0ov/njt3DqosISEBeixrDRMIBAKBQCDI3oDcguiC9OKK/dTU1H//
+9//+c9/stougUAgEAgEguwPiK7Dhw9zhdj//d///c///E9KSkpWGyUQCAQC
gUCQ/QHR9e9//5vSS2SYQCAQCAQCwRWDyDCBQCAQCASCLIHIMIFAIBAIBIIs
gcgwgUAgEAgEgiyByDCBQCAQCASCLIHIMIFAIBAIBIIsgcgwgUAgEAgEgiyB
yDCBQCAQCASCLIHIMIFAIBAIBIIsgcgwgUAgEAgEgizBpcuwCwKBQCAQCASC
CxeusAzDEzdu3Pivf/3r/wkEAoFAIBDEKqCFoIi8KrFLl2F47po1a/4VBVjr
IqutEEQvhCECM4QhAjOEIQIDqIWuvAyjAkxOTv5PliIpKYn1gA9Za4kgOiEM
EZghDBGYIQwRGAAV9C/3zWBWybBTp06dPn36f7MIeDQqgR0EH7LQEkF0Qhgi
MEMYIjBDGCIwAHyACspaGQZawpKULAIe/ccff7CD4EMWWiKITghDBGYIQwRm
CEMEBoAPVOkiw6SDCEJCGCIwQxgiMEMYIjBAZJh0EIEZwhCBGcIQgRnCEIEB
IsOkgwjMEIYIzBCGCMwQhggMEBkmHURghjBEYIYwRGCGMERggMgw6SACM4Qh
AjOEIQIzhCECA0SGSQcRmCEMEZghDBGYIQwRGCAyTDqIwAxhiMAMYYjADGGI
wACRYdJBBGYIQwRmCEMEZghDBAaIDJMOIjBDGCIwQxgiMEMYIjBAZJh0EIEZ
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
catWrWI1BTiJjsB5WoqH22MlBu6//36M12pel18gwxNPPIHh2JP40ksvZWRB
ITGqGnImMKyrqLl3796xksG2fPHFF04Me27mamFgiKVelB7h8d544438F+mr
VasG35s/YZpWrFihZGP6iRMnqmzhIVeuXFllDscJjNLpZymJ0p3j2lL43pEt
MH78eMf10PzSydNiwhAdWVlZrGnLli0VfxIrlJLDW47VbuDV4sWLnWhLZo7R
mnHeKTdK94VCyxBeRwIYgbhNjcCNd+VGL2b68Tt8MHPme/bsSUySjIyMWEpE
HAHWRW0rccNs3DB8IjxBS6KFn3vuubfffvvDDz986aWXFLXg6qNGqEuypIrb
QXj9888/pwBXX311amoqjAy87ttuu40XX3jhBSeGgTLkCYcEPvyf/vSnCy+8
sGjRotu2bXNyumH169dH5nDGRo0aNXfu3I8//nj06NGIUvVC1b6ddevW4SIC
qPvuuw/R06JFiyDh8OHDMRxfcMEF+AtiO67BpOcGwDdjVhUrVnzsscemTZu2
dOlSjJhPPvkk2a4cvEGDBg0ePHhQTiA2QUoICfmhNeWG3XnnncizUaNGzzzz
zIwZM+AM4LNdu3aoKa7XqVOHkVTUPhLXhBZghtjrJTu8ux7RH5JBv08//XR6
ejoMNWwj0sPFwvVKlSodPHjQCY+SqAWzbdiwIZRy0kVaWhpcel5HMzrhjSiW
khBqxqNUqVJMf+utt4Kr77///vz588GcZcuWKTF80SkBN6xgMwSfGLnefPPN
lJQUerzQ/i233KInSKBQqmbOnDkh1z/HQDZp0iSkhNnp1q0bDQhiKIxEUZXi
xLZmCdiQvHbDCjZDxo4di1Z99NFHPe2MKz179oRq0NRTp05lYl96oSot6cfv
99xzD3KoWrUqMtRL4fchQ4YcP36c6S0l4dgBef785z+jdPAN/IRR2rx588yZ
M6+55hq21ciRI6O2lbhhcRcl2UGGDh0KBqotK1T9hg0bypUrB43Xrl0bikvW
8r1NB6EAHTt2hMbLlCnz7bffqr9AhhtvvJErO8eOHXPsDAgL2rlzZ5UqVUJu
mIlPcGzr1q1OziXv559//t133/XkCQFgJ1Fo3bp19RnaH374AaRlJjree++9
iy66COnhnjma24aAiIxt06YNVxwSANoQEQoy6dKli4qpx40bh8w924fQfVq3
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
sMzZL1eFIVFLTC5D8loSXxCGRGbiV4mWKX1lnnca95uzMCQyE19KzCM6+ULe
WSdxwyzdMPSF48eP841gp06d+vXXX/GJ73xHatKl8tVBItPgii+eZMeDnhg8
/P3336OKEavQcy7iis2LkdeRrSU/lbRJ7CaWXC3ADIlLDw9J8pQhecdVX3X0
5FbIGULYKzEB+Mo8MnGs6vhVenaELYq8EglhCOFLiVEbNmoOkTea/8290g2S
JGBDxA2zccPQL06fPg2x0S/QTdLT03fs2JGRkZGVlYWLZ86cwb3Jlcq+gyi1
QkiKpG7x20f8Aq2RmZm5f/9+ECBSHgXFVbThgQMH9u7dC8NiSE/A/iDx4cOH
9czNsK+vr5ax4aowJCrylCF5IUliEIY4uVCiTRG+MleJoWskRmur6uTyHdbq
dnw5duwYMqdO49ZCGOIkqkRcR6F79uw5evQoWsbzbyxRk2jZEpbEHuKGxXXD
0PKo4M6dO1977bVOnTo1aNCgXLlyl1xySfny5evXr//YY49t27YN1UlitGLf
QciBhQsX3n777RUqVChWrFjp0qWbNm36+uuvo9s6FmxkgjFjxvz1r3+96667
7o4ALvbo0QNDmCpu+/btKSkpd9xxB6pftmzZ4sWLX3755e3atZsxY4aepy5h
Wlpar169kKxIkSIXXHBBxYoVkX7WrFme9KjssmXLBg0a1KZNm5o1a5YoUaJk
yZI1atTo2LHj/PnzIzOPbArYLkiL1pg0aVJkYuT/22+/MeU999zTqlWrr776
yonXleJytcAzZNiwYahXly5dotKjc+fOIMPKlSuRmFNPecSQPOIqU65duxYV
iVpHgHV85JFHYk3hFmaG+FKi3miWndFX5kz85Zdf3n///dWrV0cjo6mbNWv2
1FNPIaZTCRJQOm+BCzFu3LjmzZujlZB5rVq1oNAlS5aY20cY4kuJ/AJ6TJ48
uUWLFui5oVAIrVG7du3+/fvDO43kCW6B8aF3BHXgLmg8Ugxf1kxN99lIwpTQ
4J133okBK9JAdevWDX/R8kRO1YobZnbDICG0cO+994ZiAD0FzgM4kKxoxbKD
UJUvvvhiVKnQZRBrcCHboAj+i3EtVu0IhABOeLoVBjNWMhAYHUFNvfJz4sSJ
6HSqrSpXrqzSd+3aFekhJKv59ddfG2SAXYUios7rsppot5tuuomJYdid2P4V
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
    
    "], {{0, 208.}, {406.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{406.5, Automatic},
  ImageSizeRaw->{813., 416.},
  PlotRange->{{0, 406.5}, {0, 208.}}]], "Output",
 TaggingRules->{
  "Magnified" -> True, "AttachedInlineCell" -> CellObject[100209]},
 CellLabel->"Out[7]=",
 CellID->2088496196,ExpressionUUID->"96edd61b-7915-4581-a26a-f7ffd6c8cf5e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Possible Issues", "Subsection",
 CellLabel->"In[8]:=",
 CellID->92483860,ExpressionUUID->"85af6a05-0ea0-49a8-9255-822f6a652638"],

Cell["An invalid permutation specification would cause error:", "Text",
 TaggingRules->{"CompatibilityTest" -> HoldComplete[
     BinaryDeserialize[
      ByteArray[CompressedData["
1:eJwBBQL6/SFib1JiAQAAAPgBAAA4Qzp4nI1STW/aQBAtASpU0ahEOeW0Bw6t
VPXSH9CmhkiRGoQwSa8s67FZsbtj7YwB/7L+vY5NaPNxqWV51zvvvZl5s3kn
79DgpgqGLYb8jM5uc/l2r0MmS+8nENH5+AEiSXhW+TXE+LV9Pn4X5jDZoDUw
sdphkf7uLDeWVECGNeJW6bIEHUkxqjUoE0EzZCqP6JVWAfYQ1e6o/FkRyutB
5QKqIpDyum6U1B6jKJGCQwlG+F/UBFWNldpb2jTSHGulK0av2RrtXK0MBtFl
GwrFzwoStJaoLwW6dnDK/k1a7f9waLZ5V3q2xDQYJxgYDkzD026ueUPn82gD
L8GXGHWs8z5dJKKHVcimh1LqpqON3RRYlmFSxQiBH7SrQPzqpQ456bTWNmmG
S10UUueickDp+5SleboTFV008NE8YtGI3oZMemOMDbMFv7tuzdXBQDqYgdk6
bYQipLdp7dfo0qu5Ng74TgcRi6vj332ZyRDSywUQVlG4NTH4xFkp8r/ZH073
5aQivP4MIKN0/DK0mkBug22OZo9jWOX9J4k+vWIcs7zmPfevcSEdJe2lmsH+
BKL+jXYEfxFXC/C4g6kvuZ4etC/lDNp89BJ62Vgasvuw0SFzkCXgHFFvGat/
mNGxuF82ZLhfWpZJPKq8oYvpTsasn5b8B2TRNlzeQf98
       "]]]], 
   "CreationTimestamp" -> 3.814386052099982`16.333999634821186*^9, 
   "ResourceCreateNotebook" -> True, "ResourceType" -> "Function", 
   "SubmissionReviewData" -> {
    "Review" -> True, "SubmissionID" -> "8710", "OriginalName" -> 
     "AssociationTranspose", "Internal" -> 
     "$fHy+A4fUAg17FbKajJeN8oHC28QcscUBFgiknY631zE=$fNNU433U6RarlNyHQvVDhQ=="}\
, "ToolsOpen" -> True, "UpdatedTimestamp" -> 
   3.8166052859557391`17.33425223661356*^9, "TemplateVersion" -> "1.3.4", 
   "StatusMessage" -> ProgressIndicator[Appearance -> "Necklace"], 
   "AutoUpdate" -> True, "AttachedInlineCell" -> CellObject[97777]},
 CellID->1407232590,ExpressionUUID->"2228a719-f032-46ac-9c1f-ab2518f5e259"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"asc", "=", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<AssociationKeyDeflatten\>\"", "]"}],
     "@", 
    RowBox[{"AssociationThread", "[", 
     RowBox[{
      RowBox[{"Tuples", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", "3", "]"}], ",", 
         RowBox[{"CharacterRange", "[", 
          RowBox[{"\"\<a\>\"", ",", "\"\<d\>\""}], "]"}], ",", 
         RowBox[{"CharacterRange", "[", 
          RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<\[Beta]\>\""}], "]"}]}], 
        "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"1", ",", "24"}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"AssociationTranspose", "[", 
  RowBox[{"asc", ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "3", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->2143997017,ExpressionUUID->"7d29927f-1216-4916-98d3-319bfa8e31f9"],

Cell[BoxData[
 TemplateBox[{
  "ResourceFunction", "usermessage", 
   "\"\\!\\(\\*TemplateBox[List[StyleBox[RowBox[List[\\\"AssociationTranspose\
\\\", \\\"::\\\", \\\"perm2\\\"]], \\\"MessageName\\\"], \\\"\\\\\\\": \\\\\\\
\"\\\", TemplateBox[List[\\\"\\\\\\\"Entry \\\\\\\"\\\", \\\"4\\\", \
\\\"\\\\\\\" in \\\\\\\"\\\", RowBox[List[\\\"{\\\", RowBox[List[\\\"4\\\", \
\\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"1\\\"]], \
\\\"}\\\"]], \\\"\\\\\\\" is out of bounds for a permutation of length \\\\\\\
\"\\\", \\\"3\\\", \\\"\\\\\\\".\\\\\\\"\\\"], \\\"RowDefault\\\"]], \
\\\"RowDefault\\\"]\\)\"", 2, 2, 8, 30523654552268079490, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->"During evaluation of In[1]:=",
 CellID->1697777240,ExpressionUUID->"bb537f8d-1fd3-44ac-b04e-4b65ae01ffda"],

Cell[BoxData[
 RowBox[{"AssociationTranspose", "[", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"a\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", "0.7209542620642693`"}], 
           ",", 
           RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", "0.2307601396328447`"}]}], 
          "\[RightAssociation]"}]}], ",", 
        RowBox[{"\<\"b\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", "0.09192704423149234`"}], 
           ",", 
           RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", "0.6353009018727083`"}]}], 
          "\[RightAssociation]"}]}], ",", 
        RowBox[{"\<\"c\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", "0.9778879383061807`"}], 
           ",", 
           RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", "0.0025520675622956457`"}]}],
           "\[RightAssociation]"}]}], ",", 
        RowBox[{"\<\"d\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", "0.721322992203637`"}], ",", 
           RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", "0.6297085385937686`"}]}], 
          "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}], ",", 
     RowBox[{"2", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"a\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", "0.342002398042071`"}], ",", 
           RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", "0.9002048476881122`"}]}], 
          "\[RightAssociation]"}]}], ",", 
        RowBox[{"\<\"b\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", "0.32073359691793546`"}], 
           ",", 
           RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", "0.29433837930988616`"}]}], 
          "\[RightAssociation]"}]}], ",", 
        RowBox[{"\<\"c\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", "0.61236135179349`"}], ",", 
           
           RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", "0.18752591391571172`"}]}], 
          "\[RightAssociation]"}]}], ",", 
        RowBox[{"\<\"d\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", "0.3376993041963756`"}], 
           ",", 
           RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", "0.644840844632389`"}]}], 
          "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}], ",", 
     RowBox[{"3", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"a\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", "0.3076413089433634`"}], 
           ",", 
           RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", "0.7314429704547234`"}]}], 
          "\[RightAssociation]"}]}], ",", 
        RowBox[{"\<\"b\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", "0.017930152360113194`"}], 
           ",", 
           RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", "0.6908839269327636`"}]}], 
          "\[RightAssociation]"}]}], ",", 
        RowBox[{"\<\"c\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", "0.2672771091277286`"}], 
           ",", 
           RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", "0.8963358031201463`"}]}], 
          "\[RightAssociation]"}]}], ",", 
        RowBox[{"\<\"d\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", "0.811250635343773`"}], ",", 
           RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", "0.8012084124038437`"}]}], 
          "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "3", ",", "1"}], "}"}]}], "]"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->926854991,ExpressionUUID->"a9634fbc-5b0d-4975-b963-341a141b2b09"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 CellTags->"Source & Additional Information",
 CellID->348526984,ExpressionUUID->"cfde6a92-c99a-4243-8c02-ccfec37b1ffc"],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  TemplateBox[{"Contributed By", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Enter the name of the person, people or organization that should be \
publicly credited with contributing this function.", "MoreInfoText"], 
       Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
       GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", Deletable -> 
     True, CellTags -> {"SectionMoreInfoContributedBy"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "42e23a7f-3304-42f2-b54e-9949184f6515"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 DefaultNewCellStyle->"Text",
 CellTags->{"Contributed By", "ContributorInformation", "TemplateCellGroup"},
 CellLabel->"In[3]:=",
 CellID->581484318,ExpressionUUID->"8cb7db6f-7b4c-422c-bf6e-149b84b42cde"],

Cell["Ting Sun", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->"TabNext",
 CellID->832483124,ExpressionUUID->"d3bf9c49-4f03-4287-b313-bc750ca05490"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  TemplateBox[{"Keywords", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the function in search results.", 
        "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
       FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", 
     Deletable -> True, CellTags -> {"SectionMoreInfoKeywords"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "94fe8930-9df5-479f-bd55-9edcba6eacec"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->234953024,ExpressionUUID->"0ae1c541-2a58-4e13-9b4d-615993a8f348"],

Cell["Association", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->"TabNext",
 CellID->123227828,ExpressionUUID->"3da9e8ac-97b9-4dbc-b693-06ec5265ff04"],

Cell["Transpose", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellID->813976079,ExpressionUUID->"53fc1a82-6da1-441f-bc0e-b52bd193fab8"],

Cell["Dataset", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellID->1941923888,ExpressionUUID->"97a4076a-443b-49b5-8d71-4a6edc955a59"],

Cell["Data manipulation", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellID->1227053678,ExpressionUUID->"3424bc28-2e92-494b-8e13-578050478eb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Categories", "Subsection",
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->360699210,ExpressionUUID->"04502217-7856-42a1-b8b1-0077c9dbfebc"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Cloud & Deployment"}], "\" \"", 
        "\"Cloud & Deployment\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[
        "Core Language & Structure", {False, "Core Language & Structure"}], 
        "\" \"", "\"Core Language & Structure\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[
        "Data Manipulation & Analysis", {
         False, "Data Manipulation & Analysis"}], "\" \"", 
        "\"Data Manipulation & Analysis\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Engineering Data & Computation"}], 
        "\" \"", "\"Engineering Data & Computation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "External Interfaces & Connections"}], 
        "\" \"", "\"External Interfaces & Connections\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Financial Data & Computation"}], "\" \"", 
        "\"Financial Data & Computation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Geographic Data & Computation"}], "\" \"",
         "\"Geographic Data & Computation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Geometry"}], "\" \"", "\"Geometry\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
        "\"Graphs & Networks\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Higher Mathematical Computation"}], 
        "\" \"", "\"Higher Mathematical Computation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Images"}], "\" \"", "\"Images\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Just For Fun"}], "\" \"", 
        "\"Just For Fun\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[
        False, {False, "Knowledge Representation & Natural Language"}], 
        "\" \"", "\"Knowledge Representation & Natural Language\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
        "\"Machine Learning\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
        "\" \"", "\"Notebook Documents & Presentation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Programming Utilities"}], "\" \"", 
        "\"Programming Utilities\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Repository Tools"}], "\" \"", 
        "\"Repository Tools\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[
        False, {False, "Scientific and Medical Data & Computation"}], "\" \"",
         "\"Scientific and Medical Data & Computation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}], 
        "\" \"", "\"Social, Cultural & Linguistic Data\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Sound"}], "\" \"", "\"Sound\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Strings & Text"}], "\" \"", 
        "\"Strings & Text\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Symbolic & Numeric Computation"}], 
        "\" \"", "\"Symbolic & Numeric Computation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "System Operation & Setup"}], "\" \"", 
        "\"System Operation & Setup\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
        "\"Time-Related Computation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "User Interface Construction"}], "\" \"", 
        "\"User Interface Construction\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Visualization & Graphics"}], "\" \"", 
        "\"Visualization & Graphics\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Wolfram Physics Project"}], "\" \"", 
        "\"Wolfram Physics Project\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], "\<\"\"\>"}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   ColumnsEqual->True,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{},
   RowsEqual->True],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellTags->"CategoriesCell",
 CellID->79782627,ExpressionUUID->"ccb37cd2-4cfa-44c5-bc7b-0b0315315c44"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  TemplateBox[{"Related Symbols", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "List up to twenty documented, system-level Wolfram Language symbols \
related to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
       FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
       5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "40586c6d-31b7-4ef0-8012-41eacf1d95a8"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Symbols", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->787980732,ExpressionUUID->"f02f7f20-237b-41db-8b74-de61f621626d"],

Cell["Transpose", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->"TabNext",
 CellID->79477165,ExpressionUUID->"7ec52e44-fd20-49ce-8717-d5f7e8b2e8ca"],

Cell["Permute", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellID->1226349555,ExpressionUUID->"9ae03840-9e39-45db-9c2e-27f6e1807596"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  TemplateBox[{"Related Resource Objects", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "List the names of published resource objects from any Wolfram \
repository that are related to this function.", "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "04b841c5-603b-4ee1-9b5c-b16f8f8cff9c"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->202501204,ExpressionUUID->"06ee6767-4637-4ef0-a69f-cea9ddb9104b"],

Cell["AssociationKeyFlatten", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->"TabNext",
 CellID->960273585,ExpressionUUID->"35376f17-652f-4fc0-8bd0-279fe3990d64"],

Cell["AssociationKeyDeflatten", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellID->1600413283,ExpressionUUID->"9c85169f-689a-42bb-98bc-d0a4a80a4f6e"],

Cell["AssociationMapAt", "Item",
 CellChangeTimes->{{3.8166052207832136`*^9, 3.8166052491207905`*^9}},
 CellID->12476345,ExpressionUUID->"9a20b265-448e-4ac2-8e50-3426d79b0dc0"],

Cell["KeyIndex", "Item",
 CellChangeTimes->{{3.8166052207832136`*^9, 3.8166052740299835`*^9}},
 CellID->5300774,ExpressionUUID->"a812569f-01c8-485a-a82e-a0777bbea01e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source/Reference Citation",
 Cell[BoxData[
  TemplateBox[{"Source/Reference Citation", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Give a bibliographic-style citation for the original source of the \
function and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
       20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], 
     "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "4ac8b762-3aad-4ed0-a540-8a96a0efc3cc"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 DefaultNewCellStyle->"Text",
 CellTags->{"Source/Reference Citation", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->720896096,ExpressionUUID->"0ab59a3b-ff5c-47cf-894f-b73b2917b952"],

Cell["Source, reference or citation information", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->"TabNext",
 CellID->343081869,ExpressionUUID->"291c34b6-0df1-4e66-8b65-9c1f964f0636"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  TemplateBox[{"Links", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "List additional URLs or hyperlinks for external information related \
to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
       FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
       5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoLinks"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "5d170a84-1449-4470-b2bb-692606fbd250"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->282884713,ExpressionUUID->"7184cb16-1f07-4f27-ba0d-a6936b7f38d0"],

Cell["Link to other related material", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->"TabNext",
 CellID->485448166,ExpressionUUID->"d5c59a83-aad5-4458-a237-dfb6812ee067"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tests",
 Cell[BoxData[
  TemplateBox[{"Tests", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "Specify an optional list of tests for verifying that the function \
is working properly in any environment. Tests can be specified as \
Input/Output cell pairs or as symbolic ", 
          Cell[
           BoxData[
            StyleBox[
             TagBox[
              ButtonBox[
               StyleBox[
               "VerificationTest", "SymbolsRefLink", ShowStringCharacters -> 
                True, FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  "Link", FontColor -> RGBColor[0.8549, 0.3961, 0.1451]}, {
                  "Link"}]], ButtonData -> "paclet:ref/VerificationTest", 
               ContentPadding -> False], 
              MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
             FontFamily -> "Source Sans Pro"]]], 
          " expressions for including additional options."}], "MoreInfoText"],
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
       GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", Deletable -> 
     True, CellTags -> {"SectionMoreInfoTests"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "b2e4d69e-426c-427d-b636-f280f2557263"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 DefaultNewCellStyle->"Input",
 CellTags->{"TemplateCellGroup", "Tests", "VerificationTests"},
 CellLabel->"In[1]:=",
 CellID->306156040,ExpressionUUID->"296cb605-1d29-4b72-839a-107544a4c0fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyFunction", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->667877521,ExpressionUUID->"9f52bbd6-d4c7-448f-b940-1881fa2f377e"],

Cell[BoxData[
 RowBox[{"MyFunction", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Output",
 CellLabel->"Out[1]=",
 CellID->556536639,ExpressionUUID->"00020c52-daea-47e3-a6b4-380318620ba1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Author Notes", "Section",
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->871584409,ExpressionUUID->"ae4311c7-3ae7-4394-bca1-c29752172896"],

Cell["Additional information about limitations, issues, etc.", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->"TabNext",
 CellID->567921317,ExpressionUUID->"89f5124f-76b0-4fca-bd14-7fb2beb28b18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  TemplateBox[{"Submission Notes", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Enter any additional information that you would like to communicate \
to the reviewer here. This section will not be included in the published \
resource.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
       20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], 
     "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "306429c6-0204-4216-8a70-14fca55ccd4e"]
}], "Section",
 Editable->False,
 Deletable->False,
 DefaultNewCellStyle->"Text",
 CellTags->{"Submission Notes", "TemplateCellGroup"},
 CellID->22658912,ExpressionUUID->"3b72ef46-16a7-42ac-91af-ab41fa35148f"],

Cell["Additional information for the reviewer.", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->"TabNext",
 CellID->920818074,ExpressionUUID->"e5393409-3cdc-456f-a685-8ded224b05ec"]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{854, 1412},
WindowMargins->{{853, Automatic}, {Automatic, 0}},
WindowTitle->"AssociationTranspose | Definition Notebook",
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
   RGBColor[0.9216, 0.3412, 0.1059], CellTags -> {"MainDockedCell"}, 
   CacheGraphics -> False], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", TaggingRules -> {}, 
   CellTags -> {"ToolbarDockedCell"}, CellFrameMargins -> {{39, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CacheGraphics -> False, CellOpen -> 
   Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      DynamicModuleBox[{Typeset`var$$ = False}, 
       InterpretationBox[
        StyleBox[
         PaneSelectorBox[{False -> GridBox[{{
               OpenerBox[
                Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                Automatic, AutoAction -> False, ContinuousAction -> False], 
               TagBox[
                GridBox[{{
                   StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.816610896144883`16.334252875000875*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False], "\"   \"", 
                   TagBox[
                    
                    GridBox[{{
                    "\"Your update has been submitted for review.\"", 
                    "\"\""}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   TagBox[
                    GridBox[{{"\"Submission ID:\"", 
                    
                    TemplateBox[{
                    "\"8710\"", 
                    "OEM6eJxLYyzmCEosd8qvSC0OZlOyMDc0UAIAPlgFew=="}, 
                    "ClickToCopyTemplate"]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], "\"\"", 
                   TagBox[
                    ButtonBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], 
                    ButtonFunction :> (CurrentValue[
                    EvaluationNotebook[], DockedCells] = DeleteCases[
                    Flatten[{
                    CurrentValue[
                    EvaluationNotebook[], DockedCells]}], 
                    Condition[
                    Pattern[
                    ResourceSystemClient`DefinitionNotebook`Private`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    ResourceSystemClient`DefinitionNotebook`Private`c$, 
                    "d92a5769-44e2-4046-a167-12e1fd6aee87"]]]]), Appearance -> 
                    None, BoxID -> "d92a5769-44e2-4046-a167-12e1fd6aee87", 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                   "Rows" -> {{Baseline}}}, AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {
                    Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                   "Rows" -> {{Automatic}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False,
              GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               OpenerBox[
                Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                Automatic, AutoAction -> False, ContinuousAction -> False], 
               TagBox[
                GridBox[{{
                   StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.816610896144883`16.334252875000875*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False], "\"   \"", 
                   TagBox[
                    
                    GridBox[{{
                    "\"Your update has been submitted for review.\"", 
                    "\"\""}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   TagBox[
                    GridBox[{{"\"Submission ID:\"", 
                    
                    TemplateBox[{
                    "\"8710\"", 
                    "OEM6eJxLYyzmCEosd8qvSC0OZlOyMDc0UAIAPlgFew=="}, 
                    "ClickToCopyTemplate"]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], "\"\"", 
                   TagBox[
                    ButtonBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], 
                    ButtonFunction :> (CurrentValue[
                    EvaluationNotebook[], DockedCells] = DeleteCases[
                    Flatten[{
                    CurrentValue[
                    EvaluationNotebook[], DockedCells]}], 
                    Condition[
                    Pattern[
                    ResourceSystemClient`DefinitionNotebook`Private`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    ResourceSystemClient`DefinitionNotebook`Private`c$, 
                    "d92a5769-44e2-4046-a167-12e1fd6aee87"]]]]), Appearance -> 
                    None, BoxID -> "d92a5769-44e2-4046-a167-12e1fd6aee87", 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                   "Rows" -> {{Baseline}}}, AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {
                    Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                   "Rows" -> {{Automatic}}}], "Grid"]}, {"", 
               PaneBox[
                TagBox[
                 GridBox[{{"\"\"", 
                    StyleBox[
                    TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Submission result:\"", 
                    
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your update has been submitted. Your submission id is \
8710.\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Name\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"AssociationTranspose\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your update has been submitted. Your submission id is \
8710.\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Name\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"AssociationTranspose\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"42b9b7f5-455c-4ffd-b4c0-0ecf535d601d\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"SubmissionID\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"8710\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Function\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SubmissionDate\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{"\"Sun 15 Nov 2020 00:51:17\"", 
                    StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "11", ",", "15", ",", "0", ",", "51",
                     ",", "17.707369`8.000729022073202"}], "}"}], ",", 
                    "\"Instant\"", ",", "\"Gregorian\"", ",", "0.`"}], "]"}]},
                     "DateObject", Editable -> False], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ResourceSubmission\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztWEtv20YQNq2XJTu2kzgtml4EwuipMijHipIAhSvTliMgcgSt0\
geKAl6RS3lTcslyl07Uoj+hp1576L9qj0Xbe39CO8uXaMoOXMcIerAOprWzO/PtPL4ZylL40hC/\
2nNfE26V+O0eE8T3fCKwoC6DZUvh5aErN1hFXnxGubAWeXmEJ7CCKigwDMI5WkaB42B/+\
pRgEylfWQW+vj9l2KFG3zUDm8jji+\
nxAiKCr46mHuFEHLseYZubvNTFNieJdCOREmdMTARwyOYmKg1B/xT2LI+\
I49mwGCGMFBf42gAzgohNDOH6Z20WhwAjMVLilUOfmmcPJ8+\
KVCJFZV7dC4RI3FCLbxTpvd89GPj0FCAcd32XiQNmDgl3A98gqNo92KPCwR5HG+\
jbAPtkYAe8Z7isT0waOPICEs4+sfGUmHw1MtMNmCG9fpGHiiM/\
IOlVah3PI9jHDAJQPHLZTFLdw5wgMbWJtZC7f/XgFNsBBu/waicQrgNhNlJpuU/\
EiWui2sAn4F9BTzNKOzadMIcwkTiVl3UisyV5zrb2HDwhiH5HwGuV2GvpqYzdAi+NqEO4vxB+Vj6F/\
St64Pug7zPASdCtLrhWx95TQicn0nJp4L4CUwrf6Iy5aweCZPfzW308YdSiRpi++\
j8Q6aWuj50wngW+FHpFZm5J/ePnn1RQWN2nPqSLvCrIh4d7umu7vv9++Pl1178bfv7c9b8IP7/t6h+\
kF11Bwqfec9ZjXiBmCRwJV3WADsAG2DQpm+TFtRBWiCcXvpVQ0sf+hDKezWD51Bf0hfz/F2Mpz/\
I80aOkz6SsC/myztdXfBRV1T7UOoRWRUX1SV1FNdCwTywc2ALdixmgJ4jTYcyNCAQV/v7xlwxhfKJ+\
CSVSDzwTdNdPMK+PCWF1HowdKgQxt+\
qhPPzOOSioU7NOef1Ru6ltqSnNSCNvc5OyegQuvvo13lM7nLsGDYUjqEHuuZzk8CWRWY9DMFdAyQ5U\
gZwLHAi2cjZI8JdYs21FwDm/55w6rsklIBciSD7t1mIwEmFYoZfGMm/n8oASq8jDhqyFS1vVF/+\
7sQz9FXP0t4FO3FeyUNhEPwHuNCR95V20fBRAz/GhAL+\
Zk60C50NJA2NQmZ16YRblUPWUCfw6Kur80fk0UHJOOP+GhZHr/\
X8juy6dbVNGBi6ncfOKIqfoSror6lzvruvei7pun7JraLt54r7puzd99/\
J9t3LTd99x330rfC9e9Pavju8jdWd7/\
HjctlqNnVbLaOxYltkY7xhaQyOG1XrQMh9qTfP68K6qKI3Y2+AuqzLQ14krYWXJpVfHVVMTcr4+\
bOsZn+2D7MrowOR5BjKYEpP3wSSrN1v1I/\
e0vq1ta3VNe9JqPmm2JRNmyfGwP1JnfB6SsKRF0Fk99PH0GTkldszav+/Ov5qjmrzR8/\
FLYFb5Gj7bULnIYUj5PrO4HC8WJUqkfIwWm83o0ZIPJVprhWsfNttbba394OHj40dbmqa1tx9r29uw\
AGeR8oPcUlV7jAvMhCq/LauHPpm4PsUs/\
F7Qto6R8nUWdHr3pQOTCjxOX9mvLfwlFeRXz8iNNLNnWXQz99/M/Tdzf3bun42f+\
Wn6nGE1ox6txIUkXwbs/Lx+\
98xPitHgmUzawCOwPf098s58lXYqDbQWD1IJMaCDq41Fx9m2e7zVQLdjxQMsZ0iZXR2lIW8z24aKss\
c2UFGOQGjjvEEGhHL+QJuXmSIuUL+\
S7bxoKemfDbR6tu1BjWR5txy58eVfFX1ZX4MJ98HwjfxeiYkdVVNOj/vSwmw2rkU/xWZo/EJ+\
TwV3ojOfU3ESD/I8en38F6mJln8="}, "ClickToCopyTemplate"]}, {
                    "\"\[FilledVerySmallSquare]\"", "\"Resource:\"", 
                    TemplateBox[{
                    TagBox[
                    TagBox[
                    FrameBox[
                    PaneBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    AdjustmentBox[
                    "\"[\[FilledSmallSquare]]\"", BoxBaselineShift -> -0.25, 
                    BoxMargins -> {{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                     FontColor -> GrayLevel[0.15]], ShowStringCharacters -> 
                    False, FontFamily -> "Source Sans Pro Black", FontSize -> 
                    0.65 Inherited, FontWeight -> "Heavy", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}], 
                    
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    "\"AssociationTranspose\"", "ResourceFunctionLabel"], 
                    " "}], ShowAutoStyles -> False, ShowStringCharacters -> 
                    False, FontSize -> 0.9 Inherited, FontColor -> 
                    GrayLevel[0.1]]}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], Alignment -> 
                    Left, BaseStyle -> {
                    LineSpacing -> {0, 0}, LineBreakWithin -> False}, 
                    BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 0}, {0, 0}}], Background -> 
                    RGBColor[0.968627, 0.976471, 0.984314], BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, 
                    FrameMargins -> {{0, 0}, {1, 1}}, FrameStyle -> 
                    RGBColor[0.831373, 0.847059, 0.85098], RoundingRadius -> 
                    4], {"FunctionResourceBox", 
                    GrayLevel[0.15], "\"AssociationTranspose\""}, TagBoxNote -> 
                    "FunctionResourceBox"], Short[#, 0.75]& ], 
                    "OEM6eJyVVM9PE0EUbrWlLSBWBS942BCvmyigUD3UtqTYBIF0UA/\
GhOn2tR3dzjQzs2C96M2LV2PEv8KbJCbGeNXEk4kniPGkRhP/AHBmt/vDSonOZV/\
evH3ve9973zTiIl3Fm0V2D0TjqDhRoRJ4h4PEkjCq3Mo5tIab2kqJdJnjNmg7KVKrmLrmEZFa5KSuz\
bhILBEhlcv7Dok0kl0bvDxR+1ihfscRsg1UKgdKTd36/\
PTV7Sn9Z9WxQWSVt4gF2IQCapGG5DH3fHgdhAyrkGuYNwkVQcHetxQrxQJ7v7SPxqsgmMMtKDvU0p1\
VLEaDTJkyo7LEbMZVB5lFjrtLsAE2n3HP23wQOI5abBNJTmiz1MIcW4osIZJlbAsIcelsZdwmdhdNI\
LeqgTAVxipnRtHG1t0gNK1DEbmvf06ukTYI/v6dPl/\
yIlOhLeBEQv3PzDeBNFsSJa8C3ugGVydXOdnAEnTESkd3KKLT0DFofKUDHEvGkVMTkkjHDeuhT0bGE\
xdDVbbpzdZPEdyi01MFIZhF3A1Z46qzDhMwhSb6OV7CNbBR3AhAjmn6Co5kbq6/\
iPsndgdS9v1AygaNduuZPtvhaI/3dhh1sKUA/M1eSmVx2hFae19/\
McNUmYJNmlSvtoqAhgwv9Ea7vUcX1r0aWdKL7tXu32IPnw4ocsB3bxLZIrSfl6yvllUmiDvYtO8JYk\
Zd+Q7SzNGIZqKVh4tqZZucObSuRVxdLLp88lPbu6N7ez/yfOfNypkr+Z95/uTjzsmHD37m/\
wtUdgEa2LFlyE2sj5vDYUelHi/FI2LRf3kZo7Af7b58/Hzra57/ynzqTk5+y/\
PC1ovWpcvfQthjVd2smkQV14kjSgmVwC2ATvm77e+6J5cD3oxBMgnxea/qMpMwKG22X1HKN+\
b7Vmp3wJKFtIkSy7rR8YPKmSijRMXlYRGJ69crC+gs1Gdy5xpz0+\
Y8XDxvzl7MTZu5C7V5czY3f27OUlKeOz9tolG//\
Fq3AyjtAzNR6oYSq55wYplRlXVkAYTFifsUoVxQzpAtMGzNlDBYw8DUiIAyNtVqGxSEUnAvyETDqNu\
uMdvtoBLy1NEbxXh3PQCucWvYGnUU9PrBbWeDZ4pZ7p2HPJwPAlsRjGvK9rT2G98qh3E="}, 
                    "ClickToCopyTemplate"]}, {
                    "\"\[FilledVerySmallSquare]\"", "\"Resource object:\"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[
                    RasterBox[CompressedData["
1:eJztmzFvEzEUxyNg6JiNtUysmRADQ7qA2KJWrEitCBUMAaVFiO0GRoZILIyV
+gGQGJkqBmZgR06FKoRQRRAghBA6/JI7al585+fzc85X50n/Km3vzu8X28/2
s+/C1r3122dardbOivyxvvlwbTjcfLTRlr/cGOzc2R70b10f7Pa3+8PLW2fl
H69kOieVpqkXiWsrHan7UntSB1KpQQfZtXBPx5dfzIy9zOcJgc+kSfasXt1c
iLEtlUiNGRiLNM7KaNfMmjDVpU2dJzVwdj3XJ6W+uwtqu6MaObFGvtq4fO6q
1JsAGLHAp1Vm1o5YbD+1FfjGMoY1gJWNuUGszsxi1l+bxKoyW/VnMYvDIcYm
qsB3ctwWYY05VTUisnYD8JVLXQJvnfMmbo0NrEkAPnIrKYlRTYzHJgHTXOw6
pXVbWMeC0G8/Prhq1OHG+bn7ju5eKrye4i8806Y8jcaItUcpl2I6hp/vXhVe
TykXnmlTXoH+5UnELG9ivOfL/uNC33+8fjH9/4ebF428f75Ppn+D6ynlwjO/
vdzXlm3Bu6fwkuMUtB9sv96/Lb1H9fP3p0Onvvj5Sb8q7yQ9WRNYlYnt6/On
ZF747MKLv28L3lSc5EydeE3tUuU1fTe25Vvy5vnhhfFS+6wnXmou3Atv2ThT
Nm458FqzcvKWjTPYmHid29OSd8m75OUrf8nLIxg7wFcQtnwuDDp+tlvKC/Ps
JvDCnB3m+RTDazTO+ST44chLHoPh2ab61a2RVF74znRrKKpw+RXmG9bzSVzP
Nv03N1gnUesa8gVwvc4qzCet1wvY/yq8uVHbVZFVWC9YrwdhjWPDG5Cme0vC
Mi+JY0ZDeKfr/dQin6MKxp3c8jUtxGUYb8A4xh1mqfkcUr4OC3JKucFnHMcg
9xIAZ67/zjWJivsouC87xBKfmttXEQ75duDK2zFu44FIl29n2U9xmUt4knY/
xbWOA5Z2v8y1Hweq0v3QNML97jSy8wxK7IrmvErGHM15JIU5mvNmDWSO6Qwl
GyvqzyHGMPbzwChuhzRWeTvvjbijOM+v4Y7ifQ1NG4/ifRwN+6l/36qEPcj3
6f4CgLLCWA==
                    "], {{0, 0}, {60., 60.}}, {0, 255}, 
                    ColorFunction -> RGBColor], {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    AspectRatio -> 1, Axes -> False, Background -> None, 
                    Frame -> None, FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}, 
                    ImageSizeCache -> {45., {0., 9.}}]}], 
                    StyleBox["\"AssociationTranspose\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], Short[#, 0.75]& ], 
                    "OEM6eJztXMtv48YZtyz57fU6idMCOQmE0V4iwNmmu+\
s0B8uytTEabwSNkhyKBDuiRhZ3+\
SqHXK968qHHNliglx4XyB9QoMecghx6bnsvuEFRFEVRZIOkKIoiUGf4kCiKkoYSZVMmB/\
itteRwvu8379f3NTN4tQrPD5UnCDeX8Esnso40VUM61AVFJo+\
bGbxcVWiEZg7n3hWw3lzEyzV4Rp6ArSrCiqHx6L36Q8TrYAMYkgS19jsINkDmZ80s3j5qy1AS+\
FOlYYiIprLYTSULkI63am0VYaQ/UFQk7+7ipTIUMXLf7rhvkVRHDUC0Qru7YKlK0m+\
TOBs1JKkieWgraiecxTcrUEYAiUQlReuXmasSNVwhS3jlniY0+j92/\
67QROirZbx2aOi6mxvrDiM73dfKxxVNeExUeFDWFFk/lhtunoC18vGhoEtQxWAH/\
NyAGqqIBj7hFfkUNQRDogSoOkdIhG3UwFu2mLIh8zTzh+\
VQrqYZqEtlvaiqCGpQ5hHO3Vfk3pu1Q4gR0Nsiai74+K8dP4aiAUnu4LWioSsSKW2++\
3b5FOktpQHWKxoi+\
asLjz2JFkXhTJaQrLuZipdLiFYa928v6okEzxAQfoFIrq04udb9yiM3i5dqgoSwtmCFzQMSf7NkaBp\
J7wOiJwI3yiRrS1B9BwlnLSp5qaKcE1EZvFOsY0U0dOSNj2+\
cwjNZaAq8VYtLneYK3rinQbUl8NiuyWtViImy5D9fbGfffjvX6XQWZgHz3uoegUrwjOBzgs4YfO7Ep\
d/szUqviDlWHJ1fMPAbhxdOWpWr5uXjuE1wQfA8Ao7D8NyRsX3FXC8iKsswZX5xBTwPZlyeLOV9cEl\
19+kV8vTj6azqOEk3T/DHGHD0g+qUj5jrnnm57TQsqG6RjGFzwDUyznPEdWrOpt1e54mrl3Oo9mza/\
XAc+yZWUN2Z+20zXmPOpHjKyPUgBrpGhQMGvlc5b4oaz8dwvYiBjlHjYkQfNY/\
98ThQTgN91zUt26FlbDK0278b5bH4Enx/4Lu/\
Pbw9ND6LvjTNMPIC8NzHtcIilyUEcfjPn78YGp9FLk0zjLwh6O6TmPa+ydhvvvr0l0N1//cffm+9/+\
vHPxzL97tvX1jPaHwWuTTNbz77NFB2CL7PPHyZ+ylaf/zhv3/508hvvHr+7x9fTtUW//\
krNCnfF53emiCUTH/4+ne/YeZLf0/D15/fIfh2zN6e6VR8x9VLL99xeRNWfki+\
7v7wpfFlbbMz4su6Fz4TvqPGmVHj1hR8Q3ONku+occYfIuI7dX1K+aZ8U77RyU/\
5RgM6dlBdKfzBnQtT/Ou3+ki+dJ49D3zpnJ3O81mCf40W5XyS6jElX+\
YxmKY9rnyD1khevjTPgtZQrPDLn2C+EXo+6S/nMO3XDXSdxFrWdL+Axg8KE8wnQ68X/\
PpPwtcNrPVqWJhgvRB6PUjXOGH4xgjW2ZIZcl/S32fMCV9rvd8JsZ/jBR133OCuaWm/\
TMcbGqIYdyKGdz+Hab/OD7qn5Ab629+P0b2XGPB00XevyZzwHMXflqfoS2aJgXMVc4r9dsrLrcf+\
Oh4TBO23R3KeMs1cYkYIPE+ZtoxjjMDzsmnbcUwx8jy0k8Dz7k7C7jN4+\
q7E3FdxOCfmPpKHc2Lum80h5yTdoYyMq689x7EPi/w+sK/\
fjtNYNbP73j7eibjPH8A7EfYaAXU8EfY4Adyvvb3VCO6xtKfzmpjSv6WFUveZY9d4/\
6D7oxfrof2pZTB5o6SIiuaaf+LV6r1D60k3wkYRq4jXq9SqsZTpPs4VnyDcM5x17EIPIf/\
oTFMMueGzC10qa1DyG4uuWw9rAv8I+81Ie2aciyPNOBcHzDjdJ9Hbc7rKbXWVK0G+hfpz/\
KJ84CuChQXnB3fQXO4Z/2b7y85j8pwdMHle5e6TjHorz4FXHWPnEx1JRVlWbJNpkP3q18888b/\
HFTFWeMF6WdOgjFUFI65rKk2/9kRf5AZesehETYTZdVrn3ErWL4zE++QzJok3uSOEeU1QaSLsgn/\
CdXMgr7dQXkSPkYjzSjMP5bwnn/Lngt7KywjrqOFEGqKpVQu2nYIcsE12Y4AV0pAMScZdO2/nL/\
kXNXvRcoTwYJwAE+l1+ugIiUhH/oZ301HGUtNuNYy6DMphV8iVClTIC/\
IZZpZaWgwvzGNZnusXg3dASzkHukZ0KLWgBnlqGe7Poo37hlRH2inUHg2826qQb/\
WKhngB07ae7ZWylXRb1uETS/\
bAp4PVIOPLhGCG2Zqixrdkt2lmi4KMKgoWHL8AdsllvGOA5RTg8hwavGo7NDgV5Ag8GviHrtSlQerS\
4Mqnmdd+ip2kJZSZkCWymZAtEDNBW1xmgrYwzQRtUc8B18g4zxHXqTmbCTpCNBN2RGzGa8yZFKlLg2\
C+ibnCYyboipaZujS4ThgoYzN1aTAAlpC6NEhdGkzQ/\
rpIXRqkLg1GIHVpcIl8U5cGw0NEfKeuTynflG/\
KNzr5Kd9okLo0GB5SlwapS4PUpcHoejUspC4NRiJ1acCI1KVB6tIgdWlwZQjab09dGlwPBJ6XTduOY\
4qR56GdBJ53dxJ2n8HTdyXmvorDOTH3kTycE3PfbA45J+\
kOZerSIBrOibnv7eOdiPv8AbwTYa8RUMcTYY8TwP3a21uN4B5Le7rUpcEcuzRYTl0azKtLg7GabnI/\
Re1zRWtgZjX7fm3UkKSKUEeeigIyr4Ms9zoHbngLl2jIeQp4jTuCOsRI58Ar1s+\
8BGVBNUQn8ktE5Q8JTYBUqFmm2HgJtBRN7ye6wFgD3n//5Ii9IH7AocaP9vead24V7qLbbxTevL1/\
q7D/4/rdwpv7d/fu8LCO7rxxi5tElQ3uA6ThUNXC6nACZKX+KlJ/FUn2V9Fzm+\
D3AhEwOnuSB5tOU6JOLES/n4lXnDRPlQZ5ag+\
wrocIkPmISN1ynVi8V39I5hvF1QJpomTUAztBY1kBrFn91qgYOdo9gV2WTqcANl3xlDNYdceqAlhxe\
hZ7hlIAG55BCOxPPLQUwDpoS3VFtBicuPKqSKWFomjtB13Fqd5Ubaq1V+kHwbS33bTeVeypi3/\
WBUhd5HVYFwfq4+pxQwh88bL9DR06SmQWRVoCth2a/B9WMOF7"}, "ClickToCopyTemplate"]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                    GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
                ImageMargins -> 0]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False,
              GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
          Automatic, ImageMargins -> 0, BaseStyle -> {}, DefaultBaseStyle -> 
          "OpenerView", BaselinePosition -> Baseline], Deployed -> False, 
         StripOnInput -> False], 
        OpenerView[{
          Grid[{{
             Style[
              Dynamic[
               DateString[
                TimeZoneConvert[
                 DateObject[
                 3.816610896144883`16.334252875000875*^9, TimeZone -> 0]], {
                "MonthName", " ", "DayShort", ", ", "Year", " ", 
                 "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
               SingleEvaluation -> True, Evaluator -> "System"], FontSlant -> 
              Italic, FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited],
              "   ", 
             
             Grid[{{"Your update has been submitted for review.", ""}}, 
              Spacings -> 0.25], 
             Grid[{{"Submission ID:", 
                RawBoxes[
                 
                 TemplateBox[{
                  "\"8710\"", "OEM6eJxLYyzmCEosd8qvSC0OZlOyMDc0UAIAPlgFew=="},
                   "ClickToCopyTemplate"]]}}], "", 
             MouseAppearance[
              Button[
               MouseAppearance[
                Mouseover[
                 Graphics[{
                   GrayLevel[
                    Rational[64, 85]], 
                   
                   Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                   
                   Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                  PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                  None], 
                 Graphics[{
                   GrayLevel[
                    Rational[128, 255]], 
                   
                   Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                   
                   Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                  PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                  None]], "LinkHand"], CurrentValue[
                 EvaluationNotebook[], DockedCells] = DeleteCases[
                 Flatten[{
                   CurrentValue[
                    EvaluationNotebook[], DockedCells]}], 
                 Condition[
                  Pattern[
                  ResourceSystemClient`DefinitionNotebook`Private`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   ResourceSystemClient`DefinitionNotebook`Private`c$, 
                    "d92a5769-44e2-4046-a167-12e1fd6aee87"]]]], Appearance -> 
               None, BoxID -> "d92a5769-44e2-4046-a167-12e1fd6aee87"], 
              "LinkHand"]}}, 
           ItemSize -> {{Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
             Automatic}, 
           Alignment -> {{Left, Left, Left, Right, Right, Right}, Baseline}], 
          
          Grid[{{"", 
             Style[
              Grid[{{"\[FilledVerySmallSquare]", "Submission result:", 
                 RawBoxes[
                  TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your update has been submitted. Your submission id is \
8710.\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Name\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"AssociationTranspose\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your update has been submitted. Your submission id is \
8710.\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Name\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"AssociationTranspose\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"42b9b7f5-455c-4ffd-b4c0-0ecf535d601d\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"SubmissionID\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"8710\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Function\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SubmissionDate\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{"\"Sun 15 Nov 2020 00:51:17\"", 
                    StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "11", ",", "15", ",", "0", ",", "51",
                     ",", "17.707369`8.000729022073202"}], "}"}], ",", 
                    "\"Instant\"", ",", "\"Gregorian\"", ",", "0.`"}], "]"}]},
                     "DateObject", Editable -> False], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ResourceSubmission\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztWEtv20YQNq2XJTu2kzgtml4EwuipMijHipIAhSvTliMgcgSt0\
geKAl6RS3lTcslyl07Uoj+hp1576L9qj0Xbe39CO8uXaMoOXMcIerAOprWzO/PtPL4ZylL40hC/\
2nNfE26V+O0eE8T3fCKwoC6DZUvh5aErN1hFXnxGubAWeXmEJ7CCKigwDMI5WkaB42B/+\
pRgEylfWQW+vj9l2KFG3zUDm8jji+\
nxAiKCr46mHuFEHLseYZubvNTFNieJdCOREmdMTARwyOYmKg1B/xT2LI+\
I49mwGCGMFBf42gAzgohNDOH6Z20WhwAjMVLilUOfmmcPJ8+\
KVCJFZV7dC4RI3FCLbxTpvd89GPj0FCAcd32XiQNmDgl3A98gqNo92KPCwR5HG+\
jbAPtkYAe8Z7isT0waOPICEs4+sfGUmHw1MtMNmCG9fpGHiiM/\
IOlVah3PI9jHDAJQPHLZTFLdw5wgMbWJtZC7f/XgFNsBBu/waicQrgNhNlJpuU/\
EiWui2sAn4F9BTzNKOzadMIcwkTiVl3UisyV5zrb2HDwhiH5HwGuV2GvpqYzdAi+NqEO4vxB+Vj6F/\
St64Pug7zPASdCtLrhWx95TQicn0nJp4L4CUwrf6Iy5aweCZPfzW308YdSiRpi++\
j8Q6aWuj50wngW+FHpFZm5J/ePnn1RQWN2nPqSLvCrIh4d7umu7vv9++Pl1178bfv7c9b8IP7/t6h+\
kF11Bwqfec9ZjXiBmCRwJV3WADsAG2DQpm+TFtRBWiCcXvpVQ0sf+hDKezWD51Bf0hfz/F2Mpz/\
I80aOkz6SsC/myztdXfBRV1T7UOoRWRUX1SV1FNdCwTywc2ALdixmgJ4jTYcyNCAQV/v7xlwxhfKJ+\
CSVSDzwTdNdPMK+PCWF1HowdKgQxt+\
qhPPzOOSioU7NOef1Ru6ltqSnNSCNvc5OyegQuvvo13lM7nLsGDYUjqEHuuZzk8CWRWY9DMFdAyQ5U\
gZwLHAi2cjZI8JdYs21FwDm/55w6rsklIBciSD7t1mIwEmFYoZfGMm/n8oASq8jDhqyFS1vVF/+\
7sQz9FXP0t4FO3FeyUNhEPwHuNCR95V20fBRAz/GhAL+\
Zk60C50NJA2NQmZ16YRblUPWUCfw6Kur80fk0UHJOOP+GhZHr/\
X8juy6dbVNGBi6ncfOKIqfoSror6lzvruvei7pun7JraLt54r7puzd99/\
J9t3LTd99x330rfC9e9Pavju8jdWd7/\
HjctlqNnVbLaOxYltkY7xhaQyOG1XrQMh9qTfP68K6qKI3Y2+AuqzLQ14krYWXJpVfHVVMTcr4+\
bOsZn+2D7MrowOR5BjKYEpP3wSSrN1v1I/\
e0vq1ta3VNe9JqPmm2JRNmyfGwP1JnfB6SsKRF0Fk99PH0GTkldszav+/Ov5qjmrzR8/\
FLYFb5Gj7bULnIYUj5PrO4HC8WJUqkfIwWm83o0ZIPJVprhWsfNttbba394OHj40dbmqa1tx9r29uw\
AGeR8oPcUlV7jAvMhCq/LauHPpm4PsUs/\
F7Qto6R8nUWdHr3pQOTCjxOX9mvLfwlFeRXz8iNNLNnWXQz99/M/Tdzf3bun42f+\
Wn6nGE1ox6txIUkXwbs/Lx+\
98xPitHgmUzawCOwPf098s58lXYqDbQWD1IJMaCDq41Fx9m2e7zVQLdjxQMsZ0iZXR2lIW8z24aKss\
c2UFGOQGjjvEEGhHL+QJuXmSIuUL+\
S7bxoKemfDbR6tu1BjWR5txy58eVfFX1ZX4MJ98HwjfxeiYkdVVNOj/vSwmw2rkU/xWZo/EJ+\
TwV3ojOfU3ESD/I8en38F6mJln8="}, "ClickToCopyTemplate"]]}, {
                "\[FilledVerySmallSquare]", "Resource:", 
                 RawBoxes[
                  TemplateBox[{
                    TagBox[
                    TagBox[
                    FrameBox[
                    PaneBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    AdjustmentBox[
                    "\"[\[FilledSmallSquare]]\"", BoxBaselineShift -> -0.25, 
                    BoxMargins -> {{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                     FontColor -> GrayLevel[0.15]], ShowStringCharacters -> 
                    False, FontFamily -> "Source Sans Pro Black", FontSize -> 
                    0.65 Inherited, FontWeight -> "Heavy", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}], 
                    
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    "\"AssociationTranspose\"", "ResourceFunctionLabel"], 
                    " "}], ShowAutoStyles -> False, ShowStringCharacters -> 
                    False, FontSize -> 0.9 Inherited, FontColor -> 
                    GrayLevel[0.1]]}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], Alignment -> 
                    Left, BaseStyle -> {
                    LineSpacing -> {0, 0}, LineBreakWithin -> False}, 
                    BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 0}, {0, 0}}], Background -> 
                    RGBColor[0.968627, 0.976471, 0.984314], BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, 
                    FrameMargins -> {{0, 0}, {1, 1}}, FrameStyle -> 
                    RGBColor[0.831373, 0.847059, 0.85098], RoundingRadius -> 
                    4], {"FunctionResourceBox", 
                    GrayLevel[0.15], "\"AssociationTranspose\""}, TagBoxNote -> 
                    "FunctionResourceBox"], Short[#, 0.75]& ], 
                    "OEM6eJyVVM9PE0EUbrWlLSBWBS942BCvmyigUD3UtqTYBIF0UA/\
GhOn2tR3dzjQzs2C96M2LV2PEv8KbJCbGeNXEk4kniPGkRhP/AHBmt/vDSonOZV/\
evH3ve9973zTiIl3Fm0V2D0TjqDhRoRJ4h4PEkjCq3Mo5tIab2kqJdJnjNmg7KVKrmLrmEZFa5KSuz\
bhILBEhlcv7Dok0kl0bvDxR+1ihfscRsg1UKgdKTd36/\
PTV7Sn9Z9WxQWSVt4gF2IQCapGG5DH3fHgdhAyrkGuYNwkVQcHetxQrxQJ7v7SPxqsgmMMtKDvU0p1\
VLEaDTJkyo7LEbMZVB5lFjrtLsAE2n3HP23wQOI5abBNJTmiz1MIcW4osIZJlbAsIcelsZdwmdhdNI\
LeqgTAVxipnRtHG1t0gNK1DEbmvf06ukTYI/v6dPl/\
yIlOhLeBEQv3PzDeBNFsSJa8C3ugGVydXOdnAEnTESkd3KKLT0DFofKUDHEvGkVMTkkjHDeuhT0bGE\
xdDVbbpzdZPEdyi01MFIZhF3A1Z46qzDhMwhSb6OV7CNbBR3AhAjmn6Co5kbq6/\
iPsndgdS9v1AygaNduuZPtvhaI/3dhh1sKUA/M1eSmVx2hFae19/\
McNUmYJNmlSvtoqAhgwv9Ea7vUcX1r0aWdKL7tXu32IPnw4ocsB3bxLZIrSfl6yvllUmiDvYtO8JYk\
Zd+Q7SzNGIZqKVh4tqZZucObSuRVxdLLp88lPbu6N7ez/yfOfNypkr+Z95/uTjzsmHD37m/\
wtUdgEa2LFlyE2sj5vDYUelHi/FI2LRf3kZo7Af7b58/Hzra57/ynzqTk5+y/\
PC1ovWpcvfQthjVd2smkQV14kjSgmVwC2ATvm77e+6J5cD3oxBMgnxea/qMpMwKG22X1HKN+\
b7Vmp3wJKFtIkSy7rR8YPKmSijRMXlYRGJ69crC+gs1Gdy5xpz0+\
Y8XDxvzl7MTZu5C7V5czY3f27OUlKeOz9tolG//\
Fq3AyjtAzNR6oYSq55wYplRlXVkAYTFifsUoVxQzpAtMGzNlDBYw8DUiIAyNtVqGxSEUnAvyETDqNu\
uMdvtoBLy1NEbxXh3PQCucWvYGnUU9PrBbWeDZ4pZ7p2HPJwPAlsRjGvK9rT2G98qh3E="}, 
                   "ClickToCopyTemplate"]]}, {
                "\[FilledVerySmallSquare]", "Resource object:", 
                 RawBoxes[
                  TemplateBox[{
                    TagBox[
                    RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[
                    RasterBox[CompressedData["
1:eJztmzFvEzEUxyNg6JiNtUysmRADQ7qA2KJWrEitCBUMAaVFiO0GRoZILIyV
+gGQGJkqBmZgR06FKoRQRRAghBA6/JI7al585+fzc85X50n/Km3vzu8X28/2
s+/C1r3122dardbOivyxvvlwbTjcfLTRlr/cGOzc2R70b10f7Pa3+8PLW2fl
H69kOieVpqkXiWsrHan7UntSB1KpQQfZtXBPx5dfzIy9zOcJgc+kSfasXt1c
iLEtlUiNGRiLNM7KaNfMmjDVpU2dJzVwdj3XJ6W+uwtqu6MaObFGvtq4fO6q
1JsAGLHAp1Vm1o5YbD+1FfjGMoY1gJWNuUGszsxi1l+bxKoyW/VnMYvDIcYm
qsB3ctwWYY05VTUisnYD8JVLXQJvnfMmbo0NrEkAPnIrKYlRTYzHJgHTXOw6
pXVbWMeC0G8/Prhq1OHG+bn7ju5eKrye4i8806Y8jcaItUcpl2I6hp/vXhVe
TykXnmlTXoH+5UnELG9ivOfL/uNC33+8fjH9/4ebF428f75Ppn+D6ynlwjO/
vdzXlm3Bu6fwkuMUtB9sv96/Lb1H9fP3p0Onvvj5Sb8q7yQ9WRNYlYnt6/On
ZF747MKLv28L3lSc5EydeE3tUuU1fTe25Vvy5vnhhfFS+6wnXmou3Atv2ThT
Nm458FqzcvKWjTPYmHid29OSd8m75OUrf8nLIxg7wFcQtnwuDDp+tlvKC/Ps
JvDCnB3m+RTDazTO+ST44chLHoPh2ab61a2RVF74znRrKKpw+RXmG9bzSVzP
Nv03N1gnUesa8gVwvc4qzCet1wvY/yq8uVHbVZFVWC9YrwdhjWPDG5Cme0vC
Mi+JY0ZDeKfr/dQin6MKxp3c8jUtxGUYb8A4xh1mqfkcUr4OC3JKucFnHMcg
9xIAZ67/zjWJivsouC87xBKfmttXEQ75duDK2zFu44FIl29n2U9xmUt4knY/
xbWOA5Z2v8y1Hweq0v3QNML97jSy8wxK7IrmvErGHM15JIU5mvNmDWSO6Qwl
GyvqzyHGMPbzwChuhzRWeTvvjbijOM+v4Y7ifQ1NG4/ifRwN+6l/36qEPcj3
6f4CgLLCWA==
                    "], {{0, 0}, {60., 60.}}, {0, 255}, 
                    ColorFunction -> RGBColor], {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    AspectRatio -> 1, Axes -> False, Background -> None, 
                    Frame -> None, FrameTicks -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {45., {0., 9.}}]}], 
                    StyleBox["\"AssociationTranspose\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], Short[#, 0.75]& ], 
                    "OEM6eJztXMtv48YZtyz57fU6idMCOQmE0V4iwNmmu+\
s0B8uytTEabwSNkhyKBDuiRhZ3+\
SqHXK968qHHNliglx4XyB9QoMecghx6bnsvuEFRFEVRZIOkKIoiUGf4kCiKkoYSZVMmB/\
itteRwvu8379f3NTN4tQrPD5UnCDeX8Esnso40VUM61AVFJo+\
bGbxcVWiEZg7n3hWw3lzEyzV4Rp6ArSrCiqHx6L36Q8TrYAMYkgS19jsINkDmZ80s3j5qy1AS+\
FOlYYiIprLYTSULkI63am0VYaQ/UFQk7+7ipTIUMXLf7rhvkVRHDUC0Qru7YKlK0m+\
TOBs1JKkieWgraiecxTcrUEYAiUQlReuXmasSNVwhS3jlniY0+j92/\
67QROirZbx2aOi6mxvrDiM73dfKxxVNeExUeFDWFFk/lhtunoC18vGhoEtQxWAH/\
NyAGqqIBj7hFfkUNQRDogSoOkdIhG3UwFu2mLIh8zTzh+\
VQrqYZqEtlvaiqCGpQ5hHO3Vfk3pu1Q4gR0Nsiai74+K8dP4aiAUnu4LWioSsSKW2++\
3b5FOktpQHWKxoi+\
asLjz2JFkXhTJaQrLuZipdLiFYa928v6okEzxAQfoFIrq04udb9yiM3i5dqgoSwtmCFzQMSf7NkaBp\
J7wOiJwI3yiRrS1B9BwlnLSp5qaKcE1EZvFOsY0U0dOSNj2+\
cwjNZaAq8VYtLneYK3rinQbUl8NiuyWtViImy5D9fbGfffjvX6XQWZgHz3uoegUrwjOBzgs4YfO7Ep\
d/szUqviDlWHJ1fMPAbhxdOWpWr5uXjuE1wQfA8Ao7D8NyRsX3FXC8iKsswZX5xBTwPZlyeLOV9cEl\
19+kV8vTj6azqOEk3T/DHGHD0g+qUj5jrnnm57TQsqG6RjGFzwDUyznPEdWrOpt1e54mrl3Oo9mza/\
XAc+yZWUN2Z+20zXmPOpHjKyPUgBrpGhQMGvlc5b4oaz8dwvYiBjlHjYkQfNY/\
98ThQTgN91zUt26FlbDK0278b5bH4Enx/4Lu/\
Pbw9ND6LvjTNMPIC8NzHtcIilyUEcfjPn78YGp9FLk0zjLwh6O6TmPa+ydhvvvr0l0N1//cffm+9/+\
vHPxzL97tvX1jPaHwWuTTNbz77NFB2CL7PPHyZ+ylaf/zhv3/508hvvHr+7x9fTtUW//\
krNCnfF53emiCUTH/4+ne/YeZLf0/D15/fIfh2zN6e6VR8x9VLL99xeRNWfki+\
7v7wpfFlbbMz4su6Fz4TvqPGmVHj1hR8Q3ONku+occYfIuI7dX1K+aZ8U77RyU/\
5RgM6dlBdKfzBnQtT/Ou3+ki+dJ49D3zpnJ3O81mCf40W5XyS6jElX+\
YxmKY9rnyD1khevjTPgtZQrPDLn2C+EXo+6S/nMO3XDXSdxFrWdL+Axg8KE8wnQ68X/\
PpPwtcNrPVqWJhgvRB6PUjXOGH4xgjW2ZIZcl/S32fMCV9rvd8JsZ/jBR133OCuaWm/\
TMcbGqIYdyKGdz+Hab/OD7qn5Ab629+P0b2XGPB00XevyZzwHMXflqfoS2aJgXMVc4r9dsrLrcf+\
Oh4TBO23R3KeMs1cYkYIPE+ZtoxjjMDzsmnbcUwx8jy0k8Dz7k7C7jN4+\
q7E3FdxOCfmPpKHc2Lum80h5yTdoYyMq689x7EPi/w+sK/\
fjtNYNbP73j7eibjPH8A7EfYaAXU8EfY4Adyvvb3VCO6xtKfzmpjSv6WFUveZY9d4/\
6D7oxfrof2pZTB5o6SIiuaaf+LV6r1D60k3wkYRq4jXq9SqsZTpPs4VnyDcM5x17EIPIf/\
oTFMMueGzC10qa1DyG4uuWw9rAv8I+81Ie2aciyPNOBcHzDjdJ9Hbc7rKbXWVK0G+hfpz/\
KJ84CuChQXnB3fQXO4Z/2b7y85j8pwdMHle5e6TjHorz4FXHWPnEx1JRVlWbJNpkP3q18888b/\
HFTFWeMF6WdOgjFUFI65rKk2/9kRf5AZesehETYTZdVrn3ErWL4zE++QzJok3uSOEeU1QaSLsgn/\
CdXMgr7dQXkSPkYjzSjMP5bwnn/Lngt7KywjrqOFEGqKpVQu2nYIcsE12Y4AV0pAMScZdO2/nL/\
kXNXvRcoTwYJwAE+l1+ugIiUhH/oZ301HGUtNuNYy6DMphV8iVClTIC/\
IZZpZaWgwvzGNZnusXg3dASzkHukZ0KLWgBnlqGe7Poo37hlRH2inUHg2826qQb/\
WKhngB07ae7ZWylXRb1uETS/\
bAp4PVIOPLhGCG2Zqixrdkt2lmi4KMKgoWHL8AdsllvGOA5RTg8hwavGo7NDgV5Ag8GviHrtSlQerS\
4Mqnmdd+ip2kJZSZkCWymZAtEDNBW1xmgrYwzQRtUc8B18g4zxHXqTmbCTpCNBN2RGzGa8yZFKlLg2\
C+ibnCYyboipaZujS4ThgoYzN1aTAAlpC6NEhdGkzQ/\
rpIXRqkLg1GIHVpcIl8U5cGw0NEfKeuTynflG/\
KNzr5Kd9okLo0GB5SlwapS4PUpcHoejUspC4NRiJ1acCI1KVB6tIgdWlwZQjab09dGlwPBJ6XTduOY\
4qR56GdBJ53dxJ2n8HTdyXmvorDOTH3kTycE3PfbA45J+\
kOZerSIBrOibnv7eOdiPv8AbwTYa8RUMcTYY8TwP3a21uN4B5Le7rUpcEcuzRYTl0azKtLg7GabnI/\
Re1zRWtgZjX7fm3UkKSKUEeeigIyr4Ms9zoHbngLl2jIeQp4jTuCOsRI58Ar1s+\
8BGVBNUQn8ktE5Q8JTYBUqFmm2HgJtBRN7ye6wFgD3n//5Ii9IH7AocaP9vead24V7qLbbxTevL1/\
q7D/4/rdwpv7d/fu8LCO7rxxi5tElQ3uA6ThUNXC6nACZKX+KlJ/FUn2V9Fzm+\
D3AhEwOnuSB5tOU6JOLES/n4lXnDRPlQZ5ag+\
wrocIkPmISN1ynVi8V39I5hvF1QJpomTUAztBY1kBrFn91qgYOdo9gV2WTqcANl3xlDNYdceqAlhxe\
hZ7hlIAG55BCOxPPLQUwDpoS3VFtBicuPKqSKWFomjtB13Fqd5Ubaq1V+kHwbS33bTeVeypi3/\
WBUhd5HVYFwfq4+pxQwh88bL9DR06SmQWRVoCth2a/B9WMOF7"}, 
                   "ClickToCopyTemplate"]]}}, Alignment -> Left, 
               ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], 
              FontColor -> GrayLevel[0.5], FontSize -> 12]}}, 
           ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
           Dividers -> {None, {-1 -> GrayLevel[
                Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]},
          False]], DynamicModuleValues -> Automatic], Setting[#, {0}]& ], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]]},
TaggingRules->{"CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     ByteArray[CompressedData["
1:eJwBBQL6/SFib1JiAQAAAPgBAAA4Qzp4nI1STW/aQBAtASpU0ahEOeW0Bw6t
VPXSH9CmhkiRGoQwSa8s67FZsbtj7YwB/7L+vY5NaPNxqWV51zvvvZl5s3kn
79DgpgqGLYb8jM5uc/l2r0MmS+8nENH5+AEiSXhW+TXE+LV9Pn4X5jDZoDUw
sdphkf7uLDeWVECGNeJW6bIEHUkxqjUoE0EzZCqP6JVWAfYQ1e6o/FkRyutB
5QKqIpDyum6U1B6jKJGCQwlG+F/UBFWNldpb2jTSHGulK0av2RrtXK0MBtFl
GwrFzwoStJaoLwW6dnDK/k1a7f9waLZ5V3q2xDQYJxgYDkzD026ueUPn82gD
L8GXGHWs8z5dJKKHVcimh1LqpqON3RRYlmFSxQiBH7SrQPzqpQ456bTWNmmG
S10UUueickDp+5SleboTFV008NE8YtGI3oZMemOMDbMFv7tuzdXBQDqYgdk6
bYQipLdp7dfo0qu5Ng74TgcRi6vj332ZyRDSywUQVlG4NTH4xFkp8r/ZH073
5aQivP4MIKN0/DK0mkBug22OZo9jWOX9J4k+vWIcs7zmPfevcSEdJe2lmsH+
BKL+jXYEfxFXC/C4g6kvuZ4etC/lDNp89BJ62Vgasvuw0SFzkCXgHFFvGat/
mNGxuF82ZLhfWpZJPKq8oYvpTsasn5b8B2TRNlzeQf98
      "]]]], "CreationTimestamp" -> 
  3.814386052099982`16.333999634821186*^9, "ResourceCreateNotebook" -> True, 
  "ResourceType" -> "Function", 
  "SubmissionReviewData" -> {
   "Review" -> True, "SubmissionID" -> "8710", "OriginalName" -> 
    "AssociationTranspose", "Internal" -> 
    "$fHy+A4fUAg17FbKajJeN8oHC28QcscUBFgiknY631zE=$fNNU433U6RarlNyHQvVDhQ=="},
   "ToolsOpen" -> True, "UpdatedTimestamp" -> 
  3.8166052859557391`17.33425223661356*^9, "TemplateVersion" -> "1.3.4", 
  "StatusMessage" -> "", "AutoUpdate" -> True, "AttachedHints" -> {}},
CreateCellID->True,
FrontEndVersion->"12.2 for Mac OS X x86 (64-bit) (December 12, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.9216, 0.3412, 0.1059], CellTags -> {"MainDockedCell"}, 
       CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{39, 5}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    AutoQuoteCharacters -> {}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.4588, 0.4588, 0.4588]], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.0909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcQBxj//Pfjx0tkS
Dp8u+SYJzFB0MORYIxP1RMZhgZT+XRU2BTgNE4epg+nDZe6cIwobijL44Xyg
7hTr+2xw/f2HvmrE9DPAzQcp+1n3xR5mz8MqkXXuD1/Zw+yB8WH2wPgwe2D6
YfbAzIfRMHGYOpg+XOai2wtzF0w/zN0w82H+gtmDKxxg9gAARU63WA==
               "], 
               CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.0458], 
              RGBColor[0.6274, 0.6274, 0.6274, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m0g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0faQfiT4/m0q0IOQNnSwtvSDmxCIvbHYoQcLjHcY+L0knGQ
5n2gO0FByEEnVfJRxHUEvyM59o5bsyycz+jbwuuvLwfXrzL9/4S63XJw86+F
vdHfrS4Pt38x4x5WoSnycPe9e33AUvmUvAPM/TD+46WzjygYiML5+R9aT4Yc
FIXr/7QhIHuWuRjc/LJCoIvWisHt14zpP/T1hRjcfTA+zP0wPsx/MP0w/8PM
h4UPzH5Y+MHcBwtf9PAHAM3Qoi4=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq2R1g/G8aMf2HvrI4KP39
VvrgjgAGH6b+c19wicp0IQf5LzlhtXoccL6BzzIut6WcaPLccP5W0d+n353k
gfM99tfKWqTzwflL9x4UV7vMD+c3FbtN+dYmAOd/2hCQPeu7IJz/KEJ8+8UD
QnC+Jsi5GcJw/uOls48ofEDw571ffsy7XATO/xEMVMEiCudffZ6l/W26qMPh
y9qpkosEHN7Os9G5cgvBXwY0bsMnMQfN0wLHd1mIOQTtkGt9fVHCAehKtvgZ
Yg5XK16qGXYg+DWJRqEGWSJwPsw/MD7MvzD+oi3mPw6l8MH5ORVVS3UO88D5
/1K/P0lU5EaYDw4QTjgfFh/o8QsASQbXkQ==
                "]}]}, {
              FaceForm[
               RGBColor[0.6274, 0.6274, 0.6274, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.0909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcQBxj//Pfjx0tkS
Dp8u+SYJzFB0MORYIxP1RMZhgZT+XRU2BTgNE4epg+nDZe6cIwobijL44Xyg
7hTr+2xw/f2HvmrE9DPAzQcp+1n3xR5mz8MqkXXuD1/Zw+yB8WH2wPgwe2D6
YfbAzIfRMHGYOpg+XOai2wtzF0w/zN0w82H+gtmDKxxg9gAARU63WA==
               "], 
               CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.0458], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcQBxj//Pfjx0tkS
Dp8u+SYJzFB0MORYIxP1RMZhgZT+XRU2BTgNE4epg+nDZe6cIwobijL44Xyg
7hTr+2xw/f2HvmrE9DPAzQcp+1n3xR5mz8MqkXXuD1/Zw+yB8WH2wPgwe2D6
YfbAzIfRMHGYOpg+XOai2wtzF0w/zN0w82H+gtmDKxxg9gAARU63WA==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m0g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0faQfiT4/m0q0IOQNnSwtvSDmxCIvbHYoQcLjHcY+L0knGQ
5n2gO0FByEEnVfJRxHUEvyM59o5bsyycz+jbwuuvLwfXrzL9/4S63XJw86+F
vdHfrS4Pt38x4x5WoSnycPe9e33AUvmUvAPM/TD+46WzjygYiML5+R9aT4Yc
FIXr/7QhIHuWuRjc/LJCoIvWisHt14zpP/T1hRjcfTA+zP0wPsx/MP0w/8PM
h4UPzH5Y+MHcBwtf9PAHAM3Qoi4=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq2R1g/G8aMf2HvrI4KP39
VvrgjgAGH6b+c19wicp0IQf5LzlhtXoccL6BzzIut6WcaPLccP5W0d+n353k
gfM99tfKWqTzwflL9x4UV7vMD+c3FbtN+dYmAOd/2hCQPeu7IJz/KEJ8+8UD
QnC+Jsi5GcJw/uOls48ofEDw571ffsy7XATO/xEMVMEiCudffZ6l/W26qMPh
y9qpkosEHN7Os9G5cgvBXwY0bsMnMQfN0wLHd1mIOQTtkGt9fVHCAehKtvgZ
Yg5XK16qGXYg+DWJRqEGWSJwPsw/MD7MvzD+oi3mPw6l8MH5ORVVS3UO88D5
/1K/P0lU5EaYDw4QTjgfFh/o8QsASQbXkQ==
                "]}]}, {
              FaceForm[
               RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, 
           ImageSize -> {11., 11.}, PlotRange -> {{0., 11.}, {0., 11.}}, 
           AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
           "\"Click for more information\""}, "PrettyTooltipTemplate"], 
         ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ParentCell[
              EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}]]; 
          If[
            And[
             MatchQ[
              CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ParentCell[
                EvaluationCell[]], {
               TaggingRules, "AttachedMoreInfoTag"}] === #], CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ParentCell[
                 EvaluationCell[]], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
          "PrettyTooltipTemplate"], ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] === #],
             CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ReleaseHold[#3], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.0444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{
           ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
clickTime$$ = 0., 
            ResourceSystemClientTools`BuildDefinitionNotebook`Private`timeout$\
$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[
                    AbsoluteTime[] - 
                    ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
clickTime$$ > 
                    ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
timeout$$, 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.65], 
                    Thickness[2/45], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], 
                    Graphics[{
                    RGBColor[0.9882, 0.4196, 0.2039], 
                    Thickness[2/45], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]], 
                    "Click to copy to the clipboard"], 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Graphics[{
                    RGBColor[0, 2/3, 0], 
                    Thickness[2/45], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "Copied"]], UpdateInterval -> 
                    1, TrackedSymbols :> {
                    ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
clickTime$$}], StandardForm], Evaluator -> "System"], 
                 ButtonFunction :> (
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
clickTime$$ = AbsoluteTime[]; CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> RGBColor[0.5373, 0.5373, 0.5373], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain", 
           StripOnInput -> False], Background -> 
          RGBColor[0.9608, 0.9608, 0.9608], FrameStyle -> 
          RGBColor[0.898, 0.898, 0.898], FrameMargins -> 8, StripOnInput -> 
          False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          ResourceSystemClientTools`BuildDefinitionNotebook`Private`$$tooltip,
            "Text", FontColor -> RGBColor[0.5373, 0.5373, 0.5373], FontSize -> 
           12, FontWeight -> "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.9608, 0.9608, 0.9608], FrameStyle -> 
          RGBColor[0.898, 0.898, 0.898], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro", 
               FontSize -> 11, StripOnInput -> False], 
              "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
            With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = ButtonNotebook[], 
               ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$ = \
$ContextPath}, 
              Quiet[
               
               Block[{$ContextPath = 
                 ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                Once[
                  ReleaseHold[
                   CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "CompatibilityTest"}]], "KernelSession"]; 
                Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                 ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb$\
, 
                  
                  ResourceSystemClient`DefinitionNotebook`DocumentationTools`\
TemplateInput[]]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
            Dynamic[
              FEPrivate`If[
               CurrentValue["MouseOver"], {FontColor -> GrayLevel[1]}, {
               FontColor -> RGBColor[0.8275, 0.2078, 0.]}], Evaluator -> 
              "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCj08dhCBkQWRlQKmbsSY3g9WhKNYErhiu7NGRXTeC
1b5ePg63AsgGigDFEcoe3LsZZ/L95nk0xwBFgOJAWYhrgVpuReljdTZQHCjL
AAbEKCPSNOLdRqxPiQ43YmIBDWCNUwCVRq3x
                "], "Byte", ColorSpace -> 
                "RGB", Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCd04cgiBkQWRlQKltPjqbbcQhCMiGK4Yru3Vo92Y7
qZexWn+yTSAIyAaKAMXhyp48uLfNW+tNvDZcDQQBRYDiQFmIa4FattlJoqmB
IKA4UJYBDIhRRqRpxLuNSJ8SH27ExAIxcQoAZdNqHw==
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
              Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqx7vXP18+gSAgG64YruzVq1c/3zy/
m2hx2ZQBgoBsoAhQHK7s2bNnP968uB1tAFcDQUARoDhQFuJaoJYfj++gqYEg
oDhQlgEMiFFGpGnEu41InxIfbsTEAjFxCgDlLITg
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
            GrayLevel[0.9], Method -> "Queued", ImageSize -> {All, 20}, 
            Evaluator -> Automatic], 
           ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
               FontSize -> 11, StripOnInput -> False], 
              "\"Format selection as literal Wolfram Language code\""}, 
             "PrettyTooltipTemplate"], ButtonFunction :> 
            With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = ButtonNotebook[], 
               ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$ = \
$ContextPath}, 
              Quiet[
               
               Block[{$ContextPath = 
                 ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                Once[
                  ReleaseHold[
                   CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "CompatibilityTest"}]], "KernelSession"]; 
                Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                 ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb$\
, 
                  
                  ResourceSystemClient`DefinitionNotebook`DocumentationTools`\
LiteralInput[]]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
            Dynamic[
              FEPrivate`If[
               CurrentValue["MouseOver"], {FontColor -> GrayLevel[1]}, {
               FontColor -> RGBColor[0.8275, 0.2078, 0.]}], Evaluator -> 
              "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCj08dhCBkQWRlQKmbsSY3g9WhKNYErhiu7NGRXTeC
1b5ePg63AsgGigDFEcoe3LsZZ/L95nk0xwBFgOJAWYhrgVpuReljdTZQHCjL
AAbEKCPSNOLdRqxPiQ43YmIBDWCNUwCVRq3x
                "], "Byte", ColorSpace -> 
                "RGB", Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCd04cgiBkQWRlQKltPjqbbcQhCMiGK4Yru3Vo92Y7
qZexWn+yTSAIyAaKAMXhyp48uLfNW+tNvDZcDQQBRYDiQFmIa4FattlJoqmB
IKA4UJYBDIhRRqRpxLuNSJ8SH27ExAIxcQoAZdNqHw==
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
              Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqx7vXP18+gSAgG64YruzVq1c/3zy/
m2hx2ZQBgoBsoAhQHK7s2bNnP968uB1tAFcDQUARoDhQFuJaoJYfj++gqYEg
oDhQlgEMiFFGpGnEu41InxIfbsTEAjFxCgDlLITg
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
            GrayLevel[0.9], Method -> "Queued", ImageSize -> {All, 20}, 
            Evaluator -> Automatic], 
           ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Insert Delimiter\"", "Text", FontFamily -> "Source Sans Pro",
                FontSize -> 11, StripOnInput -> False], 
              "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
            ButtonFunction :> 
            With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = ButtonNotebook[], 
               ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$ = \
$ContextPath}, 
              Quiet[
               
               Block[{$ContextPath = 
                 ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                Once[
                  ReleaseHold[
                   CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "CompatibilityTest"}]], "KernelSession"]; 
                Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                 ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb$\
, 
                  
                  ResourceSystemClient`DefinitionNotebook`DocumentationTools`\
DelimiterInsert[]]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
            Dynamic[
              FEPrivate`If[
               CurrentValue["MouseOver"], {FontColor -> GrayLevel[1]}, {
               FontColor -> RGBColor[0.8275, 0.2078, 0.]}], Evaluator -> 
              "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCj08dhCBkQWRlQKmbsSY3g9WhKNYErhiu7NGRXTeC
1b5ePg63AsgGigDFEcoe3LsZZ/L95nk0xwBFgOJAWYhrgVpuReljdTZQHCjL
AAbEKCPSNOLdRqxPiQ43YmIBDWCNUwCVRq3x
                "], "Byte", ColorSpace -> 
                "RGB", Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCd04cgiBkQWRlQKltPjqbbcQhCMiGK4Yru3Vo92Y7
qZexWn+yTSAIyAaKAMXhyp48uLfNW+tNvDZcDQQBRYDiQFmIa4FattlJoqmB
IKA4UJYBDIhRRqRpxLuNSJ8SH27ExAIxcQoAZdNqHw==
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
              Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqx7vXP18+gSAgG64YruzVq1c/3zy/
m2hx2ZQBgoBsoAhQHK7s2bNnP968uB1tAFcDQUARoDhQFuJaoJYfj++gqYEg
oDhQlgEMiFFGpGnEu41InxIfbsTEAjFxCgDlLITg
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
            GrayLevel[0.9], Method -> "Queued", ImageSize -> {All, 20}, 
            Evaluator -> Automatic], 
           ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Subscripted Variable\"", "Text", FontFamily -> 
               "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
              "\"Insert subscripted variable placeholder\""}, 
             "PrettyTooltipTemplate"], ButtonFunction :> 
            With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = ButtonNotebook[], 
               ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$ = \
$ContextPath}, 
              Quiet[
               
               Block[{$ContextPath = 
                 ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                Once[
                  ReleaseHold[
                   CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "CompatibilityTest"}]], "KernelSession"]; 
                Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                 ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb$\
, 
                  
                  ResourceSystemClient`DefinitionNotebook`DocumentationTools`\
SubscriptInsert[]]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
            Dynamic[
              FEPrivate`If[
               CurrentValue["MouseOver"], {FontColor -> GrayLevel[1]}, {
               FontColor -> RGBColor[0.8275, 0.2078, 0.]}], Evaluator -> 
              "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCj08dhCBkQWRlQKmbsSY3g9WhKNYErhiu7NGRXTeC
1b5ePg63AsgGigDFEcoe3LsZZ/L95nk0xwBFgOJAWYhrgVpuReljdTZQHCjL
AAbEKCPSNOLdRqxPiQ43YmIBDWCNUwCVRq3x
                "], "Byte", ColorSpace -> 
                "RGB", Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCd04cgiBkQWRlQKltPjqbbcQhCMiGK4Yru3Vo92Y7
qZexWn+yTSAIyAaKAMXhyp48uLfNW+tNvDZcDQQBRYDiQFmIa4FattlJoqmB
IKA4UJYBDIhRRqRpxLuNSJ8SH27ExAIxcQoAZdNqHw==
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
              Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqx7vXP18+gSAgG64YruzVq1c/3zy/
m2hx2ZQBgoBsoAhQHK7s2bNnP968uB1tAFcDQUARoDhQFuJaoJYfj++gqYEg
oDhQlgEMiFFGpGnEu41InxIfbsTEAjFxCgDlLITg
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
            GrayLevel[0.9], Method -> "Queued", ImageSize -> {All, 20}, 
            Evaluator -> Automatic], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
               "\"Tables\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\"", "Text", FontFamily -> "Source Sans Pro", FontSize -> 
                11, StripOnInput -> False], "\"Table functions\""}, 
              "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = ButtonNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = 
                  ProgressIndicator[Appearance -> "Necklace"]; Once[
                   ReleaseHold[
                    CurrentValue[
                    ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "CompatibilityTest"}]], "KernelSession"]; 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, Null]; CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = ""; Null]]], 
             FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue["MouseOver"], {FontColor -> GrayLevel[1]}, {
                FontColor -> RGBColor[0.8275, 0.2078, 0.]}], Evaluator -> 
               "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCj08dhCBkQWRlQKmbsSY3g9WhKNYErhiu7NGRXTeC
1b5ePg63AsgGigDFEcoe3LsZZ/L95nk0xwBFgOJAWYhrgVpuReljdTZQHCjL
AAbEKCPSNOLdRqxPiQ43YmIBDWCNUwCVRq3x
                 "], "Byte", ColorSpace -> 
                 "RGB", Interleaving -> True], "Hover" -> 
               Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCd04cgiBkQWRlQKltPjqbbcQhCMiGK4Yru3Vo92Y7
qZexWn+yTSAIyAaKAMXhyp48uLfNW+tNvDZcDQQBRYDiQFmIa4FattlJoqmB
IKA4UJYBDIhRRqRpxLuNSJ8SH27ExAIxcQoAZdNqHw==
                 "], "Byte", 
                 ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
               Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqx7vXP18+gSAgG64YruzVq1c/3zy/
m2hx2ZQBgoBsoAhQHK7s2bNnP968uB1tAFcDQUARoDhQFuJaoJYfj++gqYEg
oDhQlgEMiFFGpGnEu41InxIfbsTEAjFxCgDlLITg
                 "], "Byte", 
                 ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
             GrayLevel[0.9], Method -> "Queued", ImageSize -> {All, 20}, 
             Evaluator -> Automatic], {
            "\"Insert table with two columns\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 Once[
                   ReleaseHold[
                    CurrentValue[
                    ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "CompatibilityTest"}]], "KernelSession"]; 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   
                   ResourceSystemClient`DefinitionNotebook`DocumentationTools`\
TableInsert[2]]; Null]]], "\"Insert table with three columns\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 Once[
                   ReleaseHold[
                    CurrentValue[
                    ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "CompatibilityTest"}]], "KernelSession"]; 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   
                   ResourceSystemClient`DefinitionNotebook`DocumentationTools`\
TableInsert[3]]; Null]]], "\"Add a row to the selected table\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 Once[
                   ReleaseHold[
                    CurrentValue[
                    ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "CompatibilityTest"}]], "KernelSession"]; 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   
                   ResourceSystemClient`DefinitionNotebook`DocumentationTools`\
TableRowInsert[]]; Null]]], "\"Sort the selected table\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 Once[
                   ReleaseHold[
                    CurrentValue[
                    ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "CompatibilityTest"}]], "KernelSession"]; 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   
                   ResourceSystemClient`DefinitionNotebook`DocumentationTools`\
TableSort[]]; Null]]], "\"Merge selected tables\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 Once[
                   ReleaseHold[
                    CurrentValue[
                    ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "CompatibilityTest"}]], "KernelSession"]; 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   
                   ResourceSystemClient`DefinitionNotebook`DocumentationTools`\
TableMerge[]]; Null]]]}, Appearance -> None, Method -> "Queued"], 
           ActionMenuBox[
            ButtonBox[
             StyleBox[
             "\"Cells\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\"", "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, StripOnInput -> 
              False], ButtonFunction :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = ButtonNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = 
                  ProgressIndicator[Appearance -> "Necklace"]; Once[
                   ReleaseHold[
                    CurrentValue[
                    ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "CompatibilityTest"}]], "KernelSession"]; 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, Null]; CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = ""; Null]]], 
             FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue["MouseOver"], {FontColor -> GrayLevel[1]}, {
                FontColor -> RGBColor[0.8275, 0.2078, 0.]}], Evaluator -> 
               "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCj08dhCBkQWRlQKmbsSY3g9WhKNYErhiu7NGRXTeC
1b5ePg63AsgGigDFEcoe3LsZZ/L95nk0xwBFgOJAWYhrgVpuReljdTZQHCjL
AAbEKCPSNOLdRqxPiQ43YmIBDWCNUwCVRq3x
                 "], "Byte", ColorSpace -> 
                 "RGB", Interleaving -> True], "Hover" -> 
               Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCd04cgiBkQWRlQKltPjqbbcQhCMiGK4Yru3Vo92Y7
qZexWn+yTSAIyAaKAMXhyp48uLfNW+tNvDZcDQQBRYDiQFmIa4FattlJoqmB
IKA4UJYBDIhRRqRpxLuNSJ8SH27ExAIxcQoAZdNqHw==
                 "], "Byte", 
                 ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
               Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqx7vXP18+gSAgG64YruzVq1c/3zy/
m2hx2ZQBgoBsoAhQHK7s2bNnP968uB1tAFcDQUARoDhQFuJaoJYfj++gqYEg
oDhQlgEMiFFGpGnEu41InxIfbsTEAjFxCgDlLITg
                 "], "Byte", 
                 ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
             GrayLevel[0.9], Method -> "Queued", ImageSize -> {All, 20}, 
             Evaluator -> Automatic], {
            "\"Insert comment for reviewer\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 Once[
                   ReleaseHold[
                    CurrentValue[
                    ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "CompatibilityTest"}]], "KernelSession"]; 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   
                   ResourceSystemClient`DefinitionNotebook`DocumentationTools`\
CommentInsert[]]; Null]]], "\"Mark/unmark selected cells as comments\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 Once[
                   ReleaseHold[
                    CurrentValue[
                    ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "CompatibilityTest"}]], "KernelSession"]; 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   
                   ResourceSystemClient`DefinitionNotebook`DocumentationTools`\
CommentToggle[]]; Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 Once[
                   ReleaseHold[
                    CurrentValue[
                    ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "CompatibilityTest"}]], "KernelSession"]; 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   
                   ResourceSystemClient`DefinitionNotebook`DocumentationTools`\
ExclusionToggle[]]; Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             GrayLevel[0.9]}}, 
         GridBoxFrame -> {
          "Columns" -> False, "RowsIndexed" -> {1 -> GrayLevel[0.9]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "ColumnsIndexed" -> {1 -> 0, -1 -> 0}, "Rows" -> {{Automatic}}}, 
         FrameStyle -> GrayLevel[0.75]], "Grid"]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           TagBox[
            GridBox[{{
               GraphicsBox[{
                 Thickness[0.0222], {
                  FaceForm[{
                    RGBColor[0.8745, 0.2784, 0.0314], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}}, {{{45., 22.5}, {45., 10.074}, {34.926, 0.}, {22.5, 
                   0.}, {10.074, 0.}, {0., 10.074}, {0., 22.5}, {0., 
                   34.926}, {10.074, 45.}, {22.5, 45.}, {34.926, 45.}, {45., 
                   34.926}, {45., 22.5}}}]}, {
                  FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLckSxqe7SdlhmnN3zvPblg4w/smyffOl/K0cEp5e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcLUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzAHLC+HjtHICGz32fruGQC1Zo57BASv+uCpsW
RP9Me4g9YjoQe3gcHICqlx/z1nNgAAEFB4j6Y/oOQMvOfVd2gLhjlgGEz+zg
oBnTf+irhiFEfw/UvDJDiP2+9g7qhhxrZGYZQtS9sHP48vdKxcs2Q4i72u0c
pEHOSTSEuxfsTiFDiPhCWwcXoHd+rzRwWOS67fPfEFuHx0tnH1EoMHDYUJQx
8a2MrUPQDrnW14IGUPfaOnzTAFq0VR8aXrYOoFA6V64HcccvWwfTuF2ePEy6
UPPtHIC+CH68VBvOP70QaNFeLTg/X6j5wKlELYdPl3yTBCLsIP7U0YK49y3U
PR80HQJ6p+cJHbaB88HqZ1jD1QNdUyWSZwWJH2stiHtuWcLdC+ND4lvfwbzT
MeHpBEt4+IPld1lA4p9DH+LuVgu4eeh8sH18hnA+2J6velB3aUHSyxE9iP8U
9aDpBMH3A/rWskQHYt8JBQw+TD0kPpTh5sHSMzgd/0TwYe6B8WHulY1Ksb7f
rwDng+PHSQES31csIPF7UREePgCOg02w
                    "], {{19.051, 14.242}, {
                    19.051, 27.594}, {23.828, 27.594}, {23.828, 26.543}, {
                    21.426, 26.309}, {21.375, 26.258}, {21.375, 24.219}, {
                    21.375, 17.535}, {21.375, 15.602}, {21.426, 15.547}, {
                    23.828, 15.316}, {23.828, 14.242}}, {{24.578, 18.75}, {
                    24.578, 23.078}, {24.578, 23.539}, {24.953, 23.914}, {
                    25.418, 23.91}, {29.746, 23.91}, {30.203, 23.91}, {30.578,
                     23.539}, {30.578, 23.078}, {30.578, 18.75}, {30.582, 
                    18.289}, {30.207, 17.91}, {29.746, 17.91}, {25.418, 
                    17.91}, {24.953, 17.906}, {24.574, 18.285}, {24.578, 
                    18.75}}, {{31.328, 14.242}, {31.328, 15.316}, {33.684, 
                    15.539}, {33.789, 15.602}, {33.789, 17.641}, {33.789, 
                    24.188}, {33.789, 26.227}, {33.684, 26.281}, {31.328, 
                    26.512}, {31.328, 27.586}, {36.113, 27.586}, {36.113, 
                    14.234}}}]}}, {
                ImageSize -> {Automatic, 32}, 
                 ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                 Scaled[0.25], AspectRatio -> Automatic, Background -> 
                 RGBColor[0.9882, 0.4196, 0.2039], ImageSize -> {45., 45.}, 
                 PlotRange -> {{0., 45.}, {0., 45.}}}], 
               StyleBox[
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"Function Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "ColumnsIndexed" -> {2 -> GrayLevel[1]}, 
                    "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                StripOnInput -> False]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", 
           ItemBox[
            TemplateBox[{
              StyleBox[
              "\"Function Repository \[RightGuillemet]  \"", "Text", 
               FontColor -> GrayLevel[1], StripOnInput -> False], 
              "https://resources.wolframcloud.com/FunctionRepository"}, 
             "HyperlinkURL"], Alignment -> {Right, Bottom}, StripOnInput -> 
            False]}, {
           TemplateBox[{
             
             TemplateBox[{
              "\"Open Sample\"", 
               "\"View a completed sample definition notebook\""}, 
              "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`ViewExampleNotebook[
              ButtonNotebook[]]& , 
             "\"View a completed sample definition notebook\"", False}, 
            "OrangeButtonTemplate"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Style Guidelines\"", 
               "\"View general guidelines for authoring resource \
functions\""}, "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`ViewStyleGuidelines[
              ButtonNotebook[]]& , 
             "\"View general guidelines for authoring resource functions\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             TemplateBox[{
               TagBox[
                GridBox[{{"\"Tools\"", 
                   PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{0., 0.65}, {0., -0.65}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 10, 
                    PlotRangePadding -> None, Background -> None], True -> 
                    GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 10, 
                    PlotRangePadding -> None, Background -> None]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.1]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
               "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`ToggleToolbar[
              ButtonNotebook[]]& , "\"Toggle documentation toolbar\"", False},
             "OrangeButtonTemplate"], 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxDividers -> {
              "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
             RGBColor[0.9941, 0.7098, 0.602]], "Grid"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Check\"", "\"Check notebook for potential errors\""}, 
              "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`CheckDefinitionNotebook[
              ButtonNotebook[]]& , "\"Check notebook for potential errors\"", 
             False}, "OrangeButtonTemplate"], 
           ActionMenuBox[
            
            TemplateBox[{
             "\"Preview \[FilledDownTriangle]\"", Null& , "\"\"", True}, 
             "OrangeButtonTemplate"], {
            "\"In a notebook\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = 
                  ProgressIndicator[Appearance -> "Necklace"]; Once[
                   ReleaseHold[
                    CurrentValue[
                    ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "CompatibilityTest"}]], "KernelSession"]; 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   ResourceSystemClient`DefinitionNotebook`PreviewResource[
                    ButtonNotebook[], "Notebook"]]; 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = ""; Null]]], "\"On the cloud\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = 
                  ProgressIndicator[Appearance -> "Necklace"]; Once[
                   ReleaseHold[
                    CurrentValue[
                    ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "CompatibilityTest"}]], "KernelSession"]; 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   ResourceSystemClient`DefinitionNotebook`PreviewResource[
                    ButtonNotebook[], "Cloud"]]; 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = ""; Null]]]}, Appearance -> None, 
            Method -> "Queued"], 
           ActionMenuBox[
            
            TemplateBox[{
             "\"Deploy \[FilledDownTriangle]\"", Null& , "\"\"", True}, 
             "OrangeButtonTemplate"], {
            "\"Locally on this computer\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = 
                  ProgressIndicator[Appearance -> "Necklace"]; Once[
                   ReleaseHold[
                    CurrentValue[
                    ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "CompatibilityTest"}]], "KernelSession"]; 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   ResourceSystemClient`DefinitionNotebook`DisplayStripe[
                    ButtonNotebook[], 
                    ResourceSystemClient`DefinitionNotebook`DeployResource[
                    ButtonNotebook[], "Local"]]]; 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = ""; Null]]], 
             "\"For my cloud account\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = 
                  ProgressIndicator[Appearance -> "Necklace"]; Once[
                   ReleaseHold[
                    CurrentValue[
                    ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "CompatibilityTest"}]], "KernelSession"]; 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   ResourceSystemClient`DefinitionNotebook`DisplayStripe[
                    ButtonNotebook[], 
                    ResourceSystemClient`DefinitionNotebook`DeployResource[
                    ButtonNotebook[], "CloudPrivate"]]]; 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = ""; Null]]], 
             "\"Publicly in the cloud\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = 
                  ProgressIndicator[Appearance -> "Necklace"]; Once[
                   ReleaseHold[
                    CurrentValue[
                    ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "CompatibilityTest"}]], "KernelSession"]; 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   ResourceSystemClient`DefinitionNotebook`DisplayStripe[
                    ButtonNotebook[], 
                    ResourceSystemClient`DefinitionNotebook`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]; 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = ""; Null]]], 
             "\"In this session only (without documentation)\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = 
                  ProgressIndicator[Appearance -> "Necklace"]; Once[
                   ReleaseHold[
                    CurrentValue[
                    ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "CompatibilityTest"}]], "KernelSession"]; 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   ResourceSystemClient`DefinitionNotebook`DisplayStripe[
                    ButtonNotebook[], 
                    ResourceSystemClient`DefinitionNotebook`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]; 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = ""; Null]]]}, Appearance -> None, 
            Method -> "Queued"], 
           ItemBox[
            StyleBox[
             DynamicBox[
              ToBoxes[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
               StandardForm], Evaluator -> "System", Initialization :> 
              If[CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] =!= 
                "", CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                ""]], "Text", 
             GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
            StripOnInput -> False], 
           DynamicBox[
            ToBoxes[
             If[
              CurrentValue[
               EvaluationNotebook[], {
               TaggingRules, "SubmissionReviewData", "Review"}, False], 
              RawBoxes[
               TemplateBox[{
                 TemplateBox[{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0635], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False]}, ImageSize -> 15, 
                    PlotRange -> {{0., 15.75}, {0., 16.5}}, AspectRatio -> 
                    1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                   "\"Submit changes to update your resource submission\""}, 
                  "PrettyTooltipTemplate"], 
                 With[{ResourceSystemClientTools`BuildDefinitionNotebook`\
Private`nb = ButtonNotebook[]}, 
                  ResourceSystemClient`DefinitionNotebook`DisplayStripe[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb, 
                   
                   ResourceSystemClient`DefinitionNotebook`\
SubmitRepositoryUpdate[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb], "ShowProgress" -> True]]& , 
                 "\"Submit changes to update your resource submission\"", 
                 True}, "OrangeButtonTemplate"]], 
              RawBoxes[
               TemplateBox[{
                 TemplateBox[{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0635], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False]}, ImageSize -> 15, 
                    PlotRange -> {{0., 15.75}, {0., 16.5}}, AspectRatio -> 
                    1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                   "\"Submit your function to the Wolfram Function Repository\
\""}, "PrettyTooltipTemplate"], 
                 With[{ResourceSystemClientTools`BuildDefinitionNotebook`\
Private`nb = ButtonNotebook[]}, 
                  ResourceSystemClient`DefinitionNotebook`DisplayStripe[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb, 
                   ResourceSystemClient`DefinitionNotebook`SubmitRepository[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb], "ShowProgress" -> True]]& , 
                 "\"Submit your function to the Wolfram Function \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
            "System", SingleEvaluation -> True]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.9882, 0.4196, 0.2039], 
             RGBColor[0.9216, 0.3412, 0.1059]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {
            1 -> RGBColor[0.9882, 0.4196, 0.2039], 2 -> 
             RGBColor[0.9216, 0.3412, 0.1059]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "Columns" -> {5, {0.9}, 5}, 
           "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 1.55}}, FrameStyle -> 
         RGBColor[0.9882, 0.4196, 0.2039]], "Grid"]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.0222], {
                FaceForm[{
                  RGBColor[0.8745, 0.2784, 0.0314], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {{{45., 22.5}, {45., 10.074}, {34.926, 0.}, {22.5, 
                 0.}, {10.074, 0.}, {0., 10.074}, {0., 22.5}, {0., 34.926}, {
                 10.074, 45.}, {22.5, 45.}, {34.926, 45.}, {45., 34.926}, {
                 45., 22.5}}}]}, {
                FaceForm[{
                  RGBColor[1., 1., 1.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                  2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLckSxqe7SdlhmnN3zvPblg4w/smyffOl/K0cEp5e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcLUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzAHLC+HjtHICGz32fruGQC1Zo57BASv+uCpsW
RP9Me4g9YjoQe3gcHICqlx/z1nNgAAEFB4j6Y/oOQMvOfVd2gLhjlgGEz+zg
oBnTf+irhiFEfw/UvDJDiP2+9g7qhhxrZGYZQtS9sHP48vdKxcs2Q4i72u0c
pEHOSTSEuxfsTiFDiPhCWwcXoHd+rzRwWOS67fPfEFuHx0tnH1EoMHDYUJQx
8a2MrUPQDrnW14IGUPfaOnzTAFq0VR8aXrYOoFA6V64HcccvWwfTuF2ePEy6
UPPtHIC+CH68VBvOP70QaNFeLTg/X6j5wKlELYdPl3yTBCLsIP7U0YK49y3U
PR80HQJ6p+cJHbaB88HqZ1jD1QNdUyWSZwWJH2stiHtuWcLdC+ND4lvfwbzT
MeHpBEt4+IPld1lA4p9DH+LuVgu4eeh8sH18hnA+2J6velB3aUHSyxE9iP8U
9aDpBMH3A/rWskQHYt8JBQw+TD0kPpTh5sHSMzgd/0TwYe6B8WHulY1Ksb7f
rwDng+PHSQES31csIPF7UREePgCOg02w
                  "], {{19.051, 14.242}, {
                  19.051, 27.594}, {23.828, 27.594}, {23.828, 26.543}, {
                  21.426, 26.309}, {21.375, 26.258}, {21.375, 24.219}, {
                  21.375, 17.535}, {21.375, 15.602}, {21.426, 15.547}, {
                  23.828, 15.316}, {23.828, 14.242}}, {{24.578, 18.75}, {
                  24.578, 23.078}, {24.578, 23.539}, {24.953, 23.914}, {
                  25.418, 23.91}, {29.746, 23.91}, {30.203, 23.91}, {30.578, 
                  23.539}, {30.578, 23.078}, {30.578, 18.75}, {30.582, 
                  18.289}, {30.207, 17.91}, {29.746, 17.91}, {25.418, 
                  17.91}, {24.953, 17.906}, {24.574, 18.285}, {24.578, 
                  18.75}}, {{31.328, 14.242}, {31.328, 15.316}, {33.684, 
                  15.539}, {33.789, 15.602}, {33.789, 17.641}, {33.789, 
                  24.188}, {33.789, 26.227}, {33.684, 26.281}, {31.328, 
                  26.512}, {31.328, 27.586}, {36.113, 27.586}, {36.113, 
                  14.234}}}]}}, {
              ImageSize -> 12, AspectRatio -> Automatic, Background -> None, 
               ImageSize -> {45., 45.}, PlotRange -> {{0., 45.}, {0., 45.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
         "SemiBold", FontTracking -> -0.9, FontSize -> 13, FontColor -> 
         GrayLevel[1], StripOnInput -> False], ButtonFunction :> 
        With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb$ = 
           ButtonNotebook[], 
           ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$ = \
$ContextPath}, 
          Quiet[
           
           Block[{$ContextPath = 
             ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$, 
             ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
             False}, Once[
              ReleaseHold[
               CurrentValue[
               ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb$, \
{TaggingRules, "CompatibilityTest"}]], "KernelSession"]; 
            Needs["ResourceSystemClient`DefinitionNotebook`"]; 
            ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
             ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb$, 
              If[
               TrueQ[#4], 
               
               With[{ResourceSystemClientTools`BuildDefinitionNotebook`\
Private`nb = ButtonNotebook[]}, 
                CurrentValue[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb, {TaggingRules, "StatusMessage"}] = 
                 ProgressIndicator[Appearance -> "Necklace"]; #2[]; 
                CurrentValue[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb, {TaggingRules, "StatusMessage"}] = ""; Null], 
               #2[]]]; Null]]], FrameMargins -> {{5, 5}, {0, 0}}, 
        Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQvA6XhqPnQeIQhCyIrAwodd2K5Yo5IwQB2XDFcGXPAsWu
mjNdNmVARkARoDhc2aswqWtWLGhqIAgoDpSFuBao5QqGURB0BWwgAxgQo4xI
04h3G5E+JT7ciIkFYuIUAMJyEaA=
            "], "Byte", ColorSpace -> "RGB", 
            Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQvA6XhqMHARIQhCyIrAwotcmIc7UuOwQB2XDFcGX3/MXX
6LEv12ZDRkARoDhc2cswqY2GnGhqIAgoDpSFuBaoZTWGURC0GmwgAxgQo4xI
04h3G5E+JT7ciIkFYuIUAJxlBG4=
            "], "Byte", ColorSpace -> "RGB", 
            Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQvA6XhqN3hfYQhCyIrAwo9e36ma8PbkIQkA1XDFf2vtzt
28Obu6Jsl2uzQRCQDRQBisOVvYlR+nb99I5gU7gaCAKKAMWBshDXArV8unUR
TQ0EAcWBsgxgQIwyIk0j3m1E+pT4cCMmFoiJUwBBtDmK
            "], "Byte", 
            ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
        RGBColor[0.9216, 0.3412, 0.1059], Method -> "Queued", 
        ImageSize -> {All, 23}, Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              AdjustmentBox[
               TemplateBox[{
                 ActionMenuBox[
                  TagBox[
                   PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                   MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                  Method -> "Queued"], "\"View suggestions\""}, 
                "PrettyTooltipTemplate"], BoxBaselineShift -> -0.3]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -1.}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.0556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.3084}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.3084}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/sWTrBh9WVTg5rt0
5zz/3akCt//sGRBQgbsPxoe5H8aH+Q+mH+Z/mPmw8IHZDws/mPtg4Yse/gBw
FJLS
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {
     "ReturnKeyDown" :> 
      With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb = 
         Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; 
        NotebookWrite[
         ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[
         ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb, Before,
           CellContents]], {"KeyDown", "\t"} :> Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {
     "ReturnKeyDown" :> 
      With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb = 
         Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; 
        NotebookWrite[
         ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[
         ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb, Before,
           CellContents]], {"KeyDown", "\t"} :> Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["Hyperlink"], FontColor -> RGBColor[0.9216, 0.3412, 0.1059]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.6144, 0.2275, 0.0706]], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.8549, 0.3961, 0.1451], 
       RGBColor[0.0196, 0.2863, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink"], 
    TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        DynamicBox[
         If[
          CurrentValue["MouseOver"], 
          ButtonBox[
           StyleBox[#, FontColor -> RGBColor[0.9686, 0.4667, 0.]], 
           ButtonData -> #2], 
          ButtonBox[#, ButtonData -> #2]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {
     BaseStyle -> {FontColor -> GrayLevel[0.4667], "Link"}}], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.9059]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, StyleMenuListing -> None, Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.8807, 0.611, 0.1421], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.9821, 0.9417, 0.8713]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.3684, 0.5068, 0.7098], Background -> 
    RGBColor[0.9053, 0.926, 0.9565]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.5602, 0.6916, 0.1949], Background -> 
    RGBColor[0.934, 0.9537, 0.8792]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[0.9]]}, Visible -> False, FrontEndVersion -> 
  "12.2 for Mac OS X x86 (64-bit) (December 12, 2020)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"92dcb276-af1a-41f5-8817-bc14efbfe2f5"
]

